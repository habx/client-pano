{"version":3,"file":"Markdown-b6a1451b.js","sources":["../../node_modules/markdown-it/lib/common/entities.js","../../node_modules/uc.micro/categories/P/regex.js","../../node_modules/mdurl/encode.js","../../node_modules/mdurl/decode.js","../../node_modules/mdurl/format.js","../../node_modules/mdurl/parse.js","../../node_modules/mdurl/index.js","../../node_modules/uc.micro/properties/Any/regex.js","../../node_modules/uc.micro/categories/Cc/regex.js","../../node_modules/uc.micro/categories/Cf/regex.js","../../node_modules/uc.micro/categories/Z/regex.js","../../node_modules/uc.micro/index.js","../../node_modules/markdown-it/lib/common/utils.js","../../node_modules/markdown-it/lib/helpers/parse_link_label.js","../../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../../node_modules/markdown-it/lib/helpers/parse_link_title.js","../../node_modules/markdown-it/lib/helpers/index.js","../../node_modules/markdown-it/lib/renderer.js","../../node_modules/markdown-it/lib/ruler.js","../../node_modules/markdown-it/lib/rules_core/normalize.js","../../node_modules/markdown-it/lib/rules_core/block.js","../../node_modules/markdown-it/lib/rules_core/inline.js","../../node_modules/markdown-it/lib/rules_core/linkify.js","../../node_modules/markdown-it/lib/rules_core/replacements.js","../../node_modules/markdown-it/lib/rules_core/smartquotes.js","../../node_modules/markdown-it/lib/rules_core/text_join.js","../../node_modules/markdown-it/lib/token.js","../../node_modules/markdown-it/lib/rules_core/state_core.js","../../node_modules/markdown-it/lib/parser_core.js","../../node_modules/markdown-it/lib/rules_block/table.js","../../node_modules/markdown-it/lib/rules_block/code.js","../../node_modules/markdown-it/lib/rules_block/fence.js","../../node_modules/markdown-it/lib/rules_block/blockquote.js","../../node_modules/markdown-it/lib/rules_block/hr.js","../../node_modules/markdown-it/lib/rules_block/list.js","../../node_modules/markdown-it/lib/rules_block/reference.js","../../node_modules/markdown-it/lib/common/html_blocks.js","../../node_modules/markdown-it/lib/common/html_re.js","../../node_modules/markdown-it/lib/rules_block/html_block.js","../../node_modules/markdown-it/lib/rules_block/heading.js","../../node_modules/markdown-it/lib/rules_block/lheading.js","../../node_modules/markdown-it/lib/rules_block/paragraph.js","../../node_modules/markdown-it/lib/rules_block/state_block.js","../../node_modules/markdown-it/lib/parser_block.js","../../node_modules/markdown-it/lib/rules_inline/text.js","../../node_modules/markdown-it/lib/rules_inline/linkify.js","../../node_modules/markdown-it/lib/rules_inline/newline.js","../../node_modules/markdown-it/lib/rules_inline/escape.js","../../node_modules/markdown-it/lib/rules_inline/backticks.js","../../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../../node_modules/markdown-it/lib/rules_inline/emphasis.js","../../node_modules/markdown-it/lib/rules_inline/link.js","../../node_modules/markdown-it/lib/rules_inline/image.js","../../node_modules/markdown-it/lib/rules_inline/autolink.js","../../node_modules/markdown-it/lib/rules_inline/html_inline.js","../../node_modules/markdown-it/lib/rules_inline/entity.js","../../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../../node_modules/markdown-it/lib/rules_inline/fragments_join.js","../../node_modules/markdown-it/lib/rules_inline/state_inline.js","../../node_modules/markdown-it/lib/parser_inline.js","../../node_modules/linkify-it/lib/re.js","../../node_modules/linkify-it/index.js","../../node_modules/punycode/punycode.es6.js","../../node_modules/markdown-it/lib/presets/default.js","../../node_modules/markdown-it/lib/presets/zero.js","../../node_modules/markdown-it/lib/presets/commonmark.js","../../node_modules/markdown-it/lib/index.js","../../node_modules/markdown-it/index.js","../../node_modules/@habx/ui-core/dist/esm/withMarkdown/withMarkdown.utils.js","../../node_modules/@habx/ui-core/dist/esm/withMarkdown/Markdown.js"],"sourcesContent":["// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","import MarkdownIt from 'markdown-it';\nimport { isNil } from '../_internal/data';\nvar md = new MarkdownIt({\n    html: false,\n    xhtmlOut: false,\n    breaks: true,\n    langPrefix: 'language-',\n    linkify: true,\n    typographer: true,\n    quotes: '“”‘’',\n    highlight: function () { return ''; },\n});\nvar defaultRender = md.renderer.rules.link_open ||\n    function (tokens, idx, options, env, self) {\n        return self.renderToken(tokens, idx, options);\n    };\nmd.renderer.rules.link_open = function (tokens, idx, options, env, self) {\n    var _a;\n    var hrefAttrIndex = tokens[idx].attrIndex('href');\n    var href = hrefAttrIndex < 0 ? '' : (_a = tokens[idx].attrs) === null || _a === void 0 ? void 0 : _a[hrefAttrIndex][1];\n    if (href && !href.startsWith('#')) {\n        var targetAttrIndex = tokens[idx].attrIndex('target');\n        if (targetAttrIndex < 0) {\n            tokens[idx].attrPush(['target', '_blank']);\n        }\n        else {\n            // @ts-ignore\n            tokens[idx].attrs[targetAttrIndex][1] = '_blank';\n        }\n    }\n    return defaultRender(tokens, idx, options, env, self);\n};\nvar cleanValue = function (value) {\n    if (isNil(value)) {\n        return '';\n    }\n    return value;\n};\nexport var getHTMLFromMarkdown = function (_a) {\n    var inline = _a.inline, children = _a.children;\n    var value = cleanValue(children);\n    if (inline) {\n        return md.renderInline(value);\n    }\n    else {\n        return md.render(value);\n    }\n};\n//# sourceMappingURL=withMarkdown.utils.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { getHTMLFromMarkdown } from './withMarkdown.utils';\nvar Markdown = React.forwardRef(function (_a, ref) {\n    var Component = _a.Component, isInline = _a.isInline, children = _a.children, props = __rest(_a, [\"Component\", \"isInline\", \"children\"]);\n    return (React.createElement(Component, __assign({ ref: ref }, props, { dangerouslySetInnerHTML: {\n            __html: getHTMLFromMarkdown({\n                children: children,\n                inline: isInline,\n            }),\n        } })));\n});\nexport default Markdown;\n//# sourceMappingURL=Markdown.js.map"],"names":["module","require$$0","regex","encodeCache","getEncodeCache","exclude","i","ch","cache","encode","string","keepEscaped","l","code","nextCode","result","encode_1","decodeCache","getDecodeCache","decode","seq","b1","b2","b3","b4","chr","decode_1","format","url","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","slashes","rest","simplePath","proto","hostEnd","auth","atSign","host","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","hash","qm","port","parse","mdurl","require$$1","require$$2","require$$3","uc_micro","require$$4","_class","obj","isString","_hasOwnProperty","has","object","key","assign","sources","source","arrayReplaceAt","src","pos","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","match","name","unescapeMd","str","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","exports","parse_link_label","state","start","disableNested","level","found","marker","prevPos","labelEnd","max","oldPos","parse_link_destination","lines","parse_link_title","helpers","default_rules","tokens","idx","options","env","slf","token","info","langName","langAttrs","highlighted","arr","tmpAttrs","tmpToken","Renderer","nextToken","needLf","type","rules","len","renderer","Ruler","self","chains","rule","altName","chain","fn","index","opt","beforeName","ruleName","afterName","list","ignoreInvalid","chainName","ruler","NEWLINES_RE","NULL_RE","normalize","block","inline","tok","isLinkOpen","isLinkClose","linkify","currentToken","nodes","ln","text","lastPos","htmlLinkLevel","fullUrl","urlText","blockTokens","links","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","replacements","blkIdx","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","smartquotes","text_join","curr","last","Token","tag","nesting","attrs","attrData","value","StateCore","md","state_core","_rules","require$$5","require$$6","require$$7","Core","require$$8","parser_core","getLine","line","escapedSplit","isEscaped","current","table","startLine","endLine","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","fence","params","mem","markup","haveEndMarker","blockquote","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","hr","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","reference","_endLine","destEndPos","destEndLineNo","href","label","res","title","html_blocks","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","html_re","block_names","HTML_SEQUENCES","html_block","heading","tmp","lheading","content","paragraph","StateBlock","indent_found","from","min","begin","end","keepLastLF","lineIndent","first","queue","lineStart","state_block","require$$9","require$$10","require$$11","ParserBlock","ok","hasEmptyLines","maxNesting","outTokens","require$$12","parser_block","isTerminatorChar","SCHEME_RE","link","newline","pmax","ws","ESCAPED","_escape","ch1","ch2","origStr","escapedStr","backticks","matchStart","matchEnd","openerLength","closerLength","strikethrough","scanned","postProcess","delimiters","startDelim","endDelim","loneMarkers","tokens_meta","emphasis","isStrong","labelStart","ref","parseReference","image","EMAIL_RE","AUTOLINK_RE","autolink","isLetter","lc","html_inline","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","balance_pairs","fragments_join","StateInline","token_meta","canSplitWord","count","can_open","can_close","left_flanking","right_flanking","state_inline","_rules2","require$$13","require$$14","ParserInline","require$$15","parser_inline","re","opts","text_separators","isObject","isRegExp","isFunction","defaultOptions","isOptionsObj","acc","defaultSchemas","tail","tlds_2ch_src_re","tlds_default","resetScanCache","createValidator","createNormalizer","compile","tlds","untpl","tpl","aliases","schemaError","val","compiled","alias","slist","Match","shift","createMatch","LinkifyIt","schemas","schema","definition","m","ml","me","next","tld_pos","at_pos","keepOld","el","linkifyIt","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","map","array","length","mapDomain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","toUnicode","toASCII","punycode","_default","zero","commonmark","utils","ParserCore","config","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","er","normalizeLinkText","MarkdownIt","presetName","presets","missed","plugin","args","lib","defaultRender","_a","hrefAttrIndex","targetAttrIndex","cleanValue","isNil","getHTMLFromMarkdown","children","__assign","this","s","p","__rest","e","Markdown","React.forwardRef","Component","isInline","props","React.createElement"],"mappings":";4k6BAKAA,EAAA,QAAiBC,SCLjB,IAAAC,GAAe,02DCIXC,GAAc,CAAA,EAMlB,SAASC,GAAeC,EAAS,CAC/B,IAAIC,EAAGC,EAAIC,EAAQL,GAAYE,GAC/B,GAAIG,EAAS,OAAOA,EAIpB,IAFAA,EAAQL,GAAYE,GAAW,GAE1BC,EAAI,EAAGA,EAAI,IAAKA,IACnBC,EAAK,OAAO,aAAaD,CAAC,EAEtB,cAAc,KAAKC,CAAE,EAEvBC,EAAM,KAAKD,CAAE,EAEbC,EAAM,KAAK,KAAO,IAAMF,EAAE,SAAS,EAAE,EAAE,YAAa,GAAE,MAAM,EAAE,CAAC,EAInE,IAAKA,EAAI,EAAGA,EAAID,EAAQ,OAAQC,IAC9BE,EAAMH,EAAQ,WAAWC,CAAC,GAAKD,EAAQC,GAGzC,OAAOE,CACT,CAUA,SAASC,GAAOC,EAAQL,EAASM,EAAa,CAC5C,IAAIL,EAAGM,EAAGC,EAAMC,EAAUN,EACtBO,EAAS,GAcb,IAZI,OAAOV,GAAY,WAErBM,EAAeN,EACfA,EAAUI,GAAO,cAGf,OAAOE,EAAgB,MACzBA,EAAc,IAGhBH,EAAQJ,GAAeC,CAAO,EAEzBC,EAAI,EAAGM,EAAIF,EAAO,OAAQJ,EAAIM,EAAGN,IAAK,CAGzC,GAFAO,EAAOH,EAAO,WAAWJ,CAAC,EAEtBK,GAAeE,IAAS,IAAgBP,EAAI,EAAIM,GAC9C,iBAAiB,KAAKF,EAAO,MAAMJ,EAAI,EAAGA,EAAI,CAAC,CAAC,EAAG,CACrDS,GAAUL,EAAO,MAAMJ,EAAGA,EAAI,CAAC,EAC/BA,GAAK,EACL,QACD,CAGH,GAAIO,EAAO,IAAK,CACdE,GAAUP,EAAMK,GAChB,QACD,CAED,GAAIA,GAAQ,OAAUA,GAAQ,MAAQ,CACpC,GAAIA,GAAQ,OAAUA,GAAQ,OAAUP,EAAI,EAAIM,IAC9CE,EAAWJ,EAAO,WAAWJ,EAAI,CAAC,EAC9BQ,GAAY,OAAUA,GAAY,OAAQ,CAC5CC,GAAU,mBAAmBL,EAAOJ,GAAKI,EAAOJ,EAAI,EAAE,EACtDA,IACA,QACD,CAEHS,GAAU,YACV,QACD,CAEDA,GAAU,mBAAmBL,EAAOJ,EAAE,CACvC,CAED,OAAOS,CACT,CAEAN,GAAO,aAAiB,uBACxBA,GAAO,eAAiB,YAGxB,IAAAO,GAAiBP,GC3FbQ,GAAc,CAAA,EAElB,SAASC,GAAeb,EAAS,CAC/B,IAAIC,EAAGC,EAAIC,EAAQS,GAAYZ,GAC/B,GAAIG,EAAS,OAAOA,EAIpB,IAFAA,EAAQS,GAAYZ,GAAW,GAE1BC,EAAI,EAAGA,EAAI,IAAKA,IACnBC,EAAK,OAAO,aAAaD,CAAC,EAC1BE,EAAM,KAAKD,CAAE,EAGf,IAAKD,EAAI,EAAGA,EAAID,EAAQ,OAAQC,IAC9BC,EAAKF,EAAQ,WAAWC,CAAC,EACzBE,EAAMD,GAAM,KAAO,IAAMA,EAAG,SAAS,EAAE,EAAE,YAAW,GAAI,MAAM,EAAE,EAGlE,OAAOC,CACT,CAKA,SAASW,GAAOT,EAAQL,EAAS,CAC/B,IAAIG,EAEJ,OAAI,OAAOH,GAAY,WACrBA,EAAUc,GAAO,cAGnBX,EAAQU,GAAeb,CAAO,EAEvBK,EAAO,QAAQ,oBAAqB,SAASU,EAAK,CACvD,IAAId,EAAGM,EAAGS,EAAIC,EAAIC,EAAIC,EAAIC,EACtBV,EAAS,GAEb,IAAKT,EAAI,EAAGM,EAAIQ,EAAI,OAAQd,EAAIM,EAAGN,GAAK,EAAG,CAGzC,GAFAe,EAAK,SAASD,EAAI,MAAMd,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EAErCe,EAAK,IAAM,CACbN,GAAUP,EAAMa,GAChB,QACD,CAED,IAAKA,EAAK,OAAU,KAASf,EAAI,EAAIM,IAEnCU,EAAK,SAASF,EAAI,MAAMd,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,GAEpCgB,EAAK,OAAU,KAAM,CACxBG,EAAQJ,GAAM,EAAK,KAAUC,EAAK,GAE9BG,EAAM,IACRV,GAAU,KAEVA,GAAU,OAAO,aAAaU,CAAG,EAGnCnB,GAAK,EACL,QACD,CAGH,IAAKe,EAAK,OAAU,KAASf,EAAI,EAAIM,IAEnCU,EAAK,SAASF,EAAI,MAAMd,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EACzCiB,EAAK,SAASH,EAAI,MAAMd,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,GAEpCgB,EAAK,OAAU,MAASC,EAAK,OAAU,KAAM,CAChDE,EAAQJ,GAAM,GAAM,MAAYC,GAAM,EAAK,KAAUC,EAAK,GAEtDE,EAAM,MAAUA,GAAO,OAAUA,GAAO,MAC1CV,GAAU,MAEVA,GAAU,OAAO,aAAaU,CAAG,EAGnCnB,GAAK,EACL,QACD,CAGH,IAAKe,EAAK,OAAU,KAASf,EAAI,EAAIM,IAEnCU,EAAK,SAASF,EAAI,MAAMd,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EACzCiB,EAAK,SAASH,EAAI,MAAMd,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EACzCkB,EAAK,SAASJ,EAAI,MAAMd,EAAI,GAAIA,EAAI,EAAE,EAAG,EAAE,GAEtCgB,EAAK,OAAU,MAASC,EAAK,OAAU,MAASC,EAAK,OAAU,KAAM,CACxEC,EAAQJ,GAAM,GAAM,QAAcC,GAAM,GAAM,OAAaC,GAAM,EAAK,KAAUC,EAAK,GAEjFC,EAAM,OAAWA,EAAM,QACzBV,GAAU,QAEVU,GAAO,MACPV,GAAU,OAAO,aAAa,OAAUU,GAAO,IAAK,OAAUA,EAAM,KAAM,GAG5EnB,GAAK,EACL,QACD,CAGHS,GAAU,GACX,CAED,OAAOA,CACX,CAAG,CACH,CAGAI,GAAO,aAAiB,cACxBA,GAAO,eAAiB,GAGxB,IAAAO,GAAiBP,GCrHjBQ,GAAiB,SAAgBC,EAAK,CACpC,IAAIb,EAAS,GAEb,OAAAA,GAAUa,EAAI,UAAY,GAC1Bb,GAAUa,EAAI,QAAU,KAAO,GAC/Bb,GAAUa,EAAI,KAAOA,EAAI,KAAO,IAAM,GAElCA,EAAI,UAAYA,EAAI,SAAS,QAAQ,GAAG,IAAM,GAEhDb,GAAU,IAAMa,EAAI,SAAW,IAE/Bb,GAAUa,EAAI,UAAY,GAG5Bb,GAAUa,EAAI,KAAO,IAAMA,EAAI,KAAO,GACtCb,GAAUa,EAAI,UAAY,GAC1Bb,GAAUa,EAAI,QAAU,GACxBb,GAAUa,EAAI,MAAQ,GAEfb,CACT,ECqBA,SAASc,IAAM,CACb,KAAK,SAAW,KAChB,KAAK,QAAU,KACf,KAAK,KAAO,KACZ,KAAK,KAAO,KACZ,KAAK,SAAW,KAChB,KAAK,KAAO,KACZ,KAAK,OAAS,KACd,KAAK,SAAW,IAClB,CAMA,IAAIC,GAAkB,oBAClBC,GAAc,WAGdC,GAAoB,qCAIpBC,GAAS,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM;AAAA,EAAM,GAAM,EAGtDC,GAAS,CAAE,IAAK,IAAK,IAAK,KAAM,IAAK,GAAG,EAAG,OAAOD,EAAM,EAGxDE,GAAa,CAAE,KAAO,OAAOD,EAAM,EAKnCE,GAAe,CAAE,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,OAAOD,EAAU,EAC5DE,GAAkB,CAAE,IAAK,IAAK,GAAK,EACnCC,GAAiB,IACjBC,GAAsB,yBACtBC,GAAoB,+BAIpBC,GAAmB,CACjB,WAAc,GACd,cAAe,EAChB,EAEDC,GAAkB,CAChB,KAAQ,GACR,MAAS,GACT,IAAO,GACP,OAAU,GACV,KAAQ,GACR,QAAS,GACT,SAAU,GACV,OAAQ,GACR,UAAW,GACX,QAAS,EACf,EAGA,SAASC,GAASf,EAAKgB,EAAmB,CACxC,GAAIhB,GAAOA,aAAeC,GAAO,OAAOD,EAExC,IAAIiB,EAAI,IAAIhB,GACZ,OAAAgB,EAAE,MAAMjB,EAAKgB,CAAiB,EACvBC,CACT,CAEAhB,GAAI,UAAU,MAAQ,SAASD,EAAKgB,EAAmB,CACrD,IAAItC,EAAGM,EAAGkC,EAAYC,EAAKC,EACvBC,EAAOrB,EAMX,GAFAqB,EAAOA,EAAK,OAER,CAACL,GAAqBhB,EAAI,MAAM,GAAG,EAAE,SAAW,EAAG,CAErD,IAAIsB,EAAalB,GAAkB,KAAKiB,CAAI,EAC5C,GAAIC,EACF,YAAK,SAAWA,EAAW,GACvBA,EAAW,KACb,KAAK,OAASA,EAAW,IAEpB,IAEV,CAED,IAAIC,EAAQrB,GAAgB,KAAKmB,CAAI,EAoBrC,GAnBIE,IACFA,EAAQA,EAAM,GACdL,EAAaK,EAAM,cACnB,KAAK,SAAWA,EAChBF,EAAOA,EAAK,OAAOE,EAAM,MAAM,IAO7BP,GAAqBO,GAASF,EAAK,MAAM,sBAAsB,KACjED,EAAUC,EAAK,OAAO,EAAG,CAAC,IAAM,KAC5BD,GAAW,EAAEG,GAASV,GAAiBU,MACzCF,EAAOA,EAAK,OAAO,CAAC,EACpB,KAAK,QAAU,KAIf,CAACR,GAAiBU,KACjBH,GAAYG,GAAS,CAACT,GAAgBS,IAAU,CAkBnD,IAAIC,EAAU,GACd,IAAK9C,EAAI,EAAGA,EAAI+B,GAAgB,OAAQ/B,IACtCyC,EAAME,EAAK,QAAQZ,GAAgB/B,EAAE,EACjCyC,IAAQ,KAAOK,IAAY,IAAML,EAAMK,KACzCA,EAAUL,GAMd,IAAIM,EAAMC,EAoBV,IAnBIF,IAAY,GAEdE,EAASL,EAAK,YAAY,GAAG,EAI7BK,EAASL,EAAK,YAAY,IAAKG,CAAO,EAKpCE,IAAW,KACbD,EAAOJ,EAAK,MAAM,EAAGK,CAAM,EAC3BL,EAAOA,EAAK,MAAMK,EAAS,CAAC,EAC5B,KAAK,KAAOD,GAIdD,EAAU,GACL9C,EAAI,EAAGA,EAAI8B,GAAa,OAAQ9B,IACnCyC,EAAME,EAAK,QAAQb,GAAa9B,EAAE,EAC9ByC,IAAQ,KAAOK,IAAY,IAAML,EAAMK,KACzCA,EAAUL,GAIVK,IAAY,KACdA,EAAUH,EAAK,QAGbA,EAAKG,EAAU,KAAO,KAAOA,IACjC,IAAIG,EAAON,EAAK,MAAM,EAAGG,CAAO,EAChCH,EAAOA,EAAK,MAAMG,CAAO,EAGzB,KAAK,UAAUG,CAAI,EAInB,KAAK,SAAW,KAAK,UAAY,GAIjC,IAAIC,EAAe,KAAK,SAAS,KAAO,KACpC,KAAK,SAAS,KAAK,SAAS,OAAS,KAAO,IAGhD,GAAI,CAACA,EAAc,CACjB,IAAIC,EAAY,KAAK,SAAS,MAAM,IAAI,EACxC,IAAKnD,EAAI,EAAGM,EAAI6C,EAAU,OAAQnD,EAAIM,EAAGN,IAAK,CAC5C,IAAIoD,EAAOD,EAAUnD,GACrB,GAAKoD,GACD,CAACA,EAAK,MAAMnB,EAAmB,EAAG,CAEpC,QADIoB,EAAU,GACLC,EAAI,EAAGC,EAAIH,EAAK,OAAQE,EAAIC,EAAGD,IAClCF,EAAK,WAAWE,CAAC,EAAI,IAIvBD,GAAW,IAEXA,GAAWD,EAAKE,GAIpB,GAAI,CAACD,EAAQ,MAAMpB,EAAmB,EAAG,CACvC,IAAIuB,EAAaL,EAAU,MAAM,EAAGnD,CAAC,EACjCyD,EAAUN,EAAU,MAAMnD,EAAI,CAAC,EAC/B0D,EAAMN,EAAK,MAAMlB,EAAiB,EAClCwB,IACFF,EAAW,KAAKE,EAAI,EAAE,EACtBD,EAAQ,QAAQC,EAAI,EAAE,GAEpBD,EAAQ,SACVd,EAAOc,EAAQ,KAAK,GAAG,EAAId,GAE7B,KAAK,SAAWa,EAAW,KAAK,GAAG,EACnC,KACD,CACF,CACF,CACF,CAEG,KAAK,SAAS,OAASxB,KACzB,KAAK,SAAW,IAKdkB,IACF,KAAK,SAAW,KAAK,SAAS,OAAO,EAAG,KAAK,SAAS,OAAS,CAAC,EAEnE,CAGD,IAAIS,EAAOhB,EAAK,QAAQ,GAAG,EACvBgB,IAAS,KAEX,KAAK,KAAOhB,EAAK,OAAOgB,CAAI,EAC5BhB,EAAOA,EAAK,MAAM,EAAGgB,CAAI,GAE3B,IAAIC,EAAKjB,EAAK,QAAQ,GAAG,EACzB,OAAIiB,IAAO,KACT,KAAK,OAASjB,EAAK,OAAOiB,CAAE,EAC5BjB,EAAOA,EAAK,MAAM,EAAGiB,CAAE,GAErBjB,IAAQ,KAAK,SAAWA,GACxBP,GAAgBI,IAChB,KAAK,UAAY,CAAC,KAAK,WACzB,KAAK,SAAW,IAGX,IACT,EAEAjB,GAAI,UAAU,UAAY,SAAS0B,EAAM,CACvC,IAAIY,EAAOpC,GAAY,KAAKwB,CAAI,EAC5BY,IACFA,EAAOA,EAAK,GACRA,IAAS,MACX,KAAK,KAAOA,EAAK,OAAO,CAAC,GAE3BZ,EAAOA,EAAK,OAAO,EAAGA,EAAK,OAASY,EAAK,MAAM,GAE7CZ,IAAQ,KAAK,SAAWA,EAC9B,EAEA,IAAAa,GAAiBzB,GCpTI0B,EAAA,OAAGpE,GACHoE,EAAA,OAAGC,GACHD,EAAA,OAAGE,GACxBF,EAAA,MAAwBG,iDCNxBtE,GAAe,gLCAfA,GAAe,kECAfA,GAAe,qQCAfA,GAAe,qGCEJuE,EAAA,IAAGxE,KACJwE,EAAA,GAAIH,KACJG,EAAA,GAAIF,KACLE,EAAA,EAAKD,GACdC,EAAA,EAAcC,qBCDd,SAASC,EAAOC,EAAK,CAAE,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAG,CAAI,CAEpE,SAASC,EAASD,EAAK,CAAE,OAAOD,EAAOC,CAAG,IAAM,iBAAoB,CAEpE,IAAIE,EAAkB,OAAO,UAAU,eAEvC,SAASC,EAAIC,EAAQC,EAAK,CACxB,OAAOH,EAAgB,KAAKE,EAAQC,CAAG,CACxC,CAID,SAASC,EAAON,EAAkC,CAChD,IAAIO,EAAU,MAAM,UAAU,MAAM,KAAK,UAAW,CAAC,EAErD,OAAAA,EAAQ,QAAQ,SAAUC,EAAQ,CAChC,GAAKA,EAEL,IAAI,OAAOA,GAAW,SACpB,MAAM,IAAI,UAAUA,EAAS,gBAAgB,EAG/C,OAAO,KAAKA,CAAM,EAAE,QAAQ,SAAUH,EAAK,CACzCL,EAAIK,GAAOG,EAAOH,EACxB,CAAK,EACL,CAAG,EAEML,CACR,CAID,SAASS,EAAeC,EAAKC,EAAKC,EAAa,CAC7C,MAAO,CAAE,EAAC,OAAOF,EAAI,MAAM,EAAGC,CAAG,EAAGC,EAAaF,EAAI,MAAMC,EAAM,CAAC,CAAC,CACpE,CAID,SAASE,EAAkBC,EAAG,CAa5B,MAVI,EAAAA,GAAK,OAAUA,GAAK,OAEpBA,GAAK,OAAUA,GAAK,QACnBA,EAAI,SAAY,QAAWA,EAAI,SAAY,OAE5CA,GAAK,GAAQA,GAAK,GAClBA,IAAM,IACNA,GAAK,IAAQA,GAAK,IAClBA,GAAK,KAAQA,GAAK,KAElBA,EAAI,QAET,CAED,SAASC,EAAcD,EAAG,CAExB,GAAIA,EAAI,MAAQ,CACdA,GAAK,MACL,IAAIE,EAAa,OAAUF,GAAK,IAC5BG,EAAa,OAAUH,EAAI,MAE/B,OAAO,OAAO,aAAaE,EAAYC,CAAU,CAClD,CACD,OAAO,OAAO,aAAaH,CAAC,CAC7B,CAGD,IAAII,EAAkB,8CAClBC,EAAkB,6BAClBC,EAAkB,IAAI,OAAOF,EAAe,OAAS,IAAMC,EAAU,OAAQ,IAAI,EAEjFE,EAAyB,qCAEzBC,EAAWjG,GAEf,SAASkG,EAAqBC,EAAOC,EAAM,CACzC,IAAIxF,EAAO,EAEX,OAAIkE,EAAImB,EAAUG,CAAI,EACbH,EAASG,GAGdA,EAAK,WAAW,CAAC,IAAM,IAAeJ,EAAuB,KAAKI,CAAI,IACxExF,EAAOwF,EAAK,GAAG,YAAa,IAAK,IAC/B,SAASA,EAAK,MAAM,CAAC,EAAG,EAAE,EAAI,SAASA,EAAK,MAAM,CAAC,EAAG,EAAE,EAEtDZ,EAAkB5E,CAAI,GACjB8E,EAAc9E,CAAI,EAItBuF,CACR,CAQD,SAASE,EAAWC,EAAK,CACvB,OAAIA,EAAI,QAAQ,IAAI,EAAI,EAAYA,EAC7BA,EAAI,QAAQT,EAAgB,IAAI,CACxC,CAED,SAASU,EAAYD,EAAK,CACxB,OAAIA,EAAI,QAAQ,IAAI,EAAI,GAAKA,EAAI,QAAQ,GAAG,EAAI,EAAYA,EAErDA,EAAI,QAAQP,EAAiB,SAAUI,EAAOK,EAASC,EAAQ,CACpE,OAAID,GACGN,EAAqBC,EAAOM,CAAM,CAC7C,CAAG,CACF,CAID,IAAIC,EAAsB,SACtBC,EAAyB,UACzBC,EAAoB,CACtB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,QACP,EAEA,SAASC,EAAkBvG,EAAI,CAC7B,OAAOsG,EAAkBtG,EAC1B,CAED,SAASwG,EAAWR,EAAK,CACvB,OAAII,EAAoB,KAAKJ,CAAG,EACvBA,EAAI,QAAQK,EAAwBE,CAAiB,EAEvDP,CACR,CAID,IAAIS,EAAmB,uBAEvB,SAASC,EAASV,EAAK,CACrB,OAAOA,EAAI,QAAQS,EAAkB,MAAM,CAC5C,CAID,SAASE,EAAQrG,EAAM,CACrB,OAAQA,EAAI,CACV,IAAK,GACL,IAAK,IACH,MAAO,EACV,CACD,MAAO,EACR,CAGD,SAASsG,EAAatG,EAAM,CAC1B,GAAIA,GAAQ,MAAUA,GAAQ,KAAU,MAAO,GAC/C,OAAQA,EAAI,CACV,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,OACH,MAAO,EACV,CACD,MAAO,EACR,CAKD,IAAIuG,EAAmB9C,GAGvB,SAAS+C,EAAY9G,EAAI,CACvB,OAAO6G,EAAiB,KAAK7G,CAAE,CAChC,CAUD,SAAS+G,EAAe/G,EAAI,CAC1B,OAAQA,EAAE,CACR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,MAAO,GACT,QACE,MAAO,EACV,CACF,CAID,SAASgH,EAAmBhB,EAAK,CAG/B,OAAAA,EAAMA,EAAI,KAAI,EAAG,QAAQ,OAAQ,GAAG,EAQhC,IAAI,YAAa,IAAK,MACxBA,EAAMA,EAAI,QAAQ,KAAM,GAAG,GAmCtBA,EAAI,cAAc,aAC1B,CAQDiB,EAAA,IAA8B,GAC9BA,EAAQ,IAAI,MAAkBjD,EAC9BiD,EAAQ,IAAI,QAAkBhD,KAE9BgD,EAAA,OAA8BtC,EAC9BsC,EAAA,SAA8B3C,EAC9B2C,EAAA,IAA8BzC,EAC9ByC,EAAA,WAA8BlB,EAC9BkB,EAAA,YAA8BhB,EAC9BgB,EAAA,kBAA8B/B,EAC9B+B,EAAA,cAA8B7B,EAE9B6B,EAAA,WAA8BT,EAC9BS,EAAA,eAA8BnC,EAC9BmC,EAAA,QAA8BN,EAC9BM,EAAA,aAA8BL,EAC9BK,EAAA,eAA8BF,EAC9BE,EAAA,YAA8BH,EAC9BG,EAAA,SAA8BP,EAC9BO,EAAA,mBAA8BD,iBCrT9BE,GAAiB,SAAwBC,EAAOC,EAAOC,EAAe,CACpE,IAAIC,EAAOC,EAAOC,EAAQC,EACtBC,EAAW,GACXC,EAAMR,EAAM,OACZS,EAAST,EAAM,IAKnB,IAHAA,EAAM,IAAMC,EAAQ,EACpBE,EAAQ,EAEDH,EAAM,IAAMQ,GAAK,CAEtB,GADAH,EAASL,EAAM,IAAI,WAAWA,EAAM,GAAG,EACnCK,IAAW,KACbF,IACIA,IAAU,GAAG,CACfC,EAAQ,GACR,KACD,CAKH,GAFAE,EAAUN,EAAM,IAChBA,EAAM,GAAG,OAAO,UAAUA,CAAK,EAC3BK,IAAW,IACb,GAAIC,IAAYN,EAAM,IAAM,EAE1BG,YACSD,EACT,OAAAF,EAAM,IAAMS,EACL,GAGZ,CAED,OAAIL,IACFG,EAAWP,EAAM,KAInBA,EAAM,IAAMS,EAELF,CACT,EC1CIzB,GAAcvG,EAA2B,YAG7CmI,GAAiB,SAA8B7B,EAAKhB,EAAK2C,EAAK,CAC5D,IAAIrH,EAAMgH,EACNQ,EAAQ,EACRV,EAAQpC,EACRxE,EAAS,CACP,GAAI,GACJ,IAAK,EACL,MAAO,EACP,IAAK,EACb,EAEE,GAAIwF,EAAI,WAAWhB,CAAG,IAAM,GAAc,CAExC,IADAA,IACOA,EAAM2C,GAAK,CAGhB,GAFArH,EAAO0F,EAAI,WAAWhB,CAAG,EACrB1E,IAAS,IACTA,IAAS,GAAgB,OAAOE,EACpC,GAAIF,IAAS,GACX,OAAAE,EAAO,IAAMwE,EAAM,EACnBxE,EAAO,IAAMyF,GAAYD,EAAI,MAAMoB,EAAQ,EAAGpC,CAAG,CAAC,EAClDxE,EAAO,GAAK,GACLA,EAET,GAAIF,IAAS,IAAgB0E,EAAM,EAAI2C,EAAK,CAC1C3C,GAAO,EACP,QACD,CAEDA,GACD,CAGD,OAAOxE,CACR,CAKD,IADA8G,EAAQ,EACDtC,EAAM2C,IACXrH,EAAO0F,EAAI,WAAWhB,CAAG,EAErB,EAAA1E,IAAS,IAGTA,EAAO,IAAQA,IAAS,OANZ,CAQhB,GAAIA,IAAS,IAAgB0E,EAAM,EAAI2C,EAAK,CAC1C,GAAI3B,EAAI,WAAWhB,EAAM,CAAC,IAAM,GAAQ,MACxCA,GAAO,EACP,QACD,CAED,GAAI1E,IAAS,KACXgH,IACIA,EAAQ,IAAM,OAAO9G,EAG3B,GAAIF,IAAS,GAAc,CACzB,GAAIgH,IAAU,EAAK,MACnBA,GACD,CAEDtC,GACD,CAGD,OADIoC,IAAUpC,GACVsC,IAAU,IAEd9G,EAAO,IAAMyF,GAAYD,EAAI,MAAMoB,EAAOpC,CAAG,CAAC,EAC9CxE,EAAO,MAAQsH,EACftH,EAAO,IAAMwE,EACbxE,EAAO,GAAK,IACLA,CACT,EC5EIyF,GAAcvG,EAA2B,YAG7CqI,GAAiB,SAAwB/B,EAAKhB,EAAK2C,EAAK,CACtD,IAAIrH,EACAkH,EACAM,EAAQ,EACRV,EAAQpC,EACRxE,EAAS,CACP,GAAI,GACJ,IAAK,EACL,MAAO,EACP,IAAK,EACb,EAME,GAJIwE,GAAO2C,IAEXH,EAASxB,EAAI,WAAWhB,CAAG,EAEvBwC,IAAW,IAAgBA,IAAW,IAAgBA,IAAW,IAAgB,OAAOhH,EAO5F,IALAwE,IAGIwC,IAAW,KAAQA,EAAS,IAEzBxC,EAAM2C,GAAK,CAEhB,GADArH,EAAO0F,EAAI,WAAWhB,CAAG,EACrB1E,IAASkH,EACX,OAAAhH,EAAO,IAAMwE,EAAM,EACnBxE,EAAO,MAAQsH,EACftH,EAAO,IAAMyF,GAAYD,EAAI,MAAMoB,EAAQ,EAAGpC,CAAG,CAAC,EAClDxE,EAAO,GAAK,GACLA,EACF,GAAIF,IAAS,IAAgBkH,IAAW,GAC7C,OAAOhH,EACEF,IAAS,GAClBwH,IACSxH,IAAS,IAAgB0E,EAAM,EAAI2C,IAC5C3C,IACIgB,EAAI,WAAWhB,CAAG,IAAM,IAC1B8C,KAIJ9C,GACD,CAED,OAAOxE,CACT,EClDsBwH,GAAA,eAAStI,GACHsI,GAAA,qBAAGjE,GAC/BiE,GAAA,eAA+BhE,GCI/B,IAAIW,GAAkBjF,EAA0B,OAC5CuG,GAAkBvG,EAA0B,YAC5C8G,EAAkB9G,EAA0B,WAK5CuI,EAAgB,CAAA,EAGpBA,EAAc,YAAc,SAAUC,EAAQC,EAAKC,EAASC,EAAKC,EAAK,CACpE,IAAIC,EAAQL,EAAOC,GAEnB,MAAQ,QAAUG,EAAI,YAAYC,CAAK,EAAI,IACnC/B,EAAW0B,EAAOC,GAAK,OAAO,EAC9B,SACV,EAGAF,EAAc,WAAa,SAAUC,EAAQC,EAAKC,EAASC,EAAKC,EAAK,CACnE,IAAIC,EAAQL,EAAOC,GAEnB,MAAQ,OAASG,EAAI,YAAYC,CAAK,EAAI,UAClC/B,EAAW0B,EAAOC,GAAK,OAAO,EAC9B;AAAA,CACV,EAGAF,EAAc,MAAQ,SAAUC,EAAQC,EAAKC,EAASC,EAAKC,EAAK,CAC9D,IAAIC,EAAQL,EAAOC,GACfK,EAAOD,EAAM,KAAOtC,GAAYsC,EAAM,IAAI,EAAE,KAAI,EAAK,GACrDE,EAAW,GACXC,EAAY,GACZC,EAAa5I,EAAG6I,EAAKC,EAAUC,EAcnC,OAZIN,IACFI,EAAMJ,EAAK,MAAM,QAAQ,EACzBC,EAAWG,EAAI,GACfF,EAAYE,EAAI,MAAM,CAAC,EAAE,KAAK,EAAE,GAG9BR,EAAQ,UACVO,EAAcP,EAAQ,UAAUG,EAAM,QAASE,EAAUC,CAAS,GAAKlC,EAAW+B,EAAM,OAAO,EAE/FI,EAAcnC,EAAW+B,EAAM,OAAO,EAGpCI,EAAY,QAAQ,MAAM,IAAM,EAC3BA,EAAc;AAAA,EAMnBH,GACFzI,EAAWwI,EAAM,UAAU,OAAO,EAClCM,EAAWN,EAAM,MAAQA,EAAM,MAAM,MAAO,EAAG,GAE3CxI,EAAI,EACN8I,EAAS,KAAK,CAAE,QAAST,EAAQ,WAAaK,CAAQ,CAAE,GAExDI,EAAS9I,GAAK8I,EAAS9I,GAAG,MAAK,EAC/B8I,EAAS9I,GAAG,IAAM,IAAMqI,EAAQ,WAAaK,GAI/CK,EAAW,CACT,MAAOD,CACb,EAEY,aAAeP,EAAI,YAAYQ,CAAQ,EAAI,IAC3CH,EACA;AAAA,GAIF,aAAeL,EAAI,YAAYC,CAAK,EAAI,IACxCI,EACA;AAAA,CACV,EAGAV,EAAc,MAAQ,SAAUC,EAAQC,EAAKC,EAASC,EAAKC,EAAK,CAC9D,IAAIC,EAAQL,EAAOC,GAOnB,OAAAI,EAAM,MAAMA,EAAM,UAAU,KAAK,GAAG,GAClCD,EAAI,mBAAmBC,EAAM,SAAUH,EAASC,CAAG,EAE9CC,EAAI,YAAYJ,EAAQC,EAAKC,CAAO,CAC7C,EAGAH,EAAc,UAAY,SAAUC,EAAQC,EAAKC,EAAoB,CACnE,OAAOA,EAAQ,SAAW;AAAA,EAAa;AAAA,CACzC,EACAH,EAAc,UAAY,SAAUC,EAAQC,EAAKC,EAAoB,CACnE,OAAOA,EAAQ,OAAUA,EAAQ,SAAW;AAAA,EAAa;AAAA,EAAY;AAAA,CACvE,EAGAH,EAAc,KAAO,SAAUC,EAAQC,EAAyB,CAC9D,OAAO3B,EAAW0B,EAAOC,GAAK,OAAO,CACvC,EAGAF,EAAc,WAAa,SAAUC,EAAQC,EAAyB,CACpE,OAAOD,EAAOC,GAAK,OACrB,EACAF,EAAc,YAAc,SAAUC,EAAQC,EAAyB,CACrE,OAAOD,EAAOC,GAAK,OACrB,EAQA,SAASY,GAAW,CA8BlB,KAAK,MAAQpE,GAAO,CAAE,EAAEsD,CAAa,CACvC,CAQAc,EAAS,UAAU,YAAc,SAAqBR,EAAO,CAC3D,IAAIxI,EAAGM,EAAGG,EAEV,GAAI,CAAC+H,EAAM,MAAS,MAAO,GAI3B,IAFA/H,EAAS,GAEJT,EAAI,EAAGM,EAAIkI,EAAM,MAAM,OAAQxI,EAAIM,EAAGN,IACzCS,GAAU,IAAMgG,EAAW+B,EAAM,MAAMxI,GAAG,EAAE,EAAI,KAAOyG,EAAW+B,EAAM,MAAMxI,GAAG,EAAE,EAAI,IAGzF,OAAOS,CACT,EAYAuI,EAAS,UAAU,YAAc,SAAqBb,EAAQC,EAAKC,EAAS,CAC1E,IAAIY,EACAxI,EAAS,GACTyI,EAAS,GACTV,EAAQL,EAAOC,GAGnB,OAAII,EAAM,OACD,IAULA,EAAM,OAASA,EAAM,UAAY,IAAMJ,GAAOD,EAAOC,EAAM,GAAG,SAChE3H,GAAU;AAAA,GAIZA,IAAW+H,EAAM,UAAY,GAAK,KAAO,KAAOA,EAAM,IAGtD/H,GAAU,KAAK,YAAY+H,CAAK,EAG5BA,EAAM,UAAY,GAAKH,EAAQ,WACjC5H,GAAU,MAIR+H,EAAM,QACRU,EAAS,GAELV,EAAM,UAAY,GAChBJ,EAAM,EAAID,EAAO,SACnBc,EAAYd,EAAOC,EAAM,IAErBa,EAAU,OAAS,UAAYA,EAAU,QAKlCA,EAAU,UAAY,IAAMA,EAAU,MAAQT,EAAM,OAG7DU,EAAS,MAMjBzI,GAAUyI,EAAS;AAAA,EAAQ,IAEpBzI,EACT,EAWAuI,EAAS,UAAU,aAAe,SAAUb,EAAQE,EAASC,EAAK,CAKhE,QAJIa,EACA1I,EAAS,GACT2I,EAAQ,KAAK,MAER,EAAI,EAAGC,EAAMlB,EAAO,OAAQ,EAAIkB,EAAK,IAC5CF,EAAOhB,EAAO,GAAG,KAEb,OAAOiB,EAAMD,GAAU,IACzB1I,GAAU2I,EAAMD,GAAMhB,EAAQ,EAAGE,EAASC,EAAK,IAAI,EAEnD7H,GAAU,KAAK,YAAY0H,EAAQ,EAAGE,CAAO,EAIjD,OAAO5H,CACT,EAaAuI,EAAS,UAAU,mBAAqB,SAAUb,EAAQE,EAASC,EAAK,CAGtE,QAFI7H,EAAS,GAEJT,EAAI,EAAGqJ,EAAMlB,EAAO,OAAQnI,EAAIqJ,EAAKrJ,IACxCmI,EAAOnI,GAAG,OAAS,OACrBS,GAAU0H,EAAOnI,GAAG,QACXmI,EAAOnI,GAAG,OAAS,QAC5BS,GAAU,KAAK,mBAAmB0H,EAAOnI,GAAG,SAAUqI,EAASC,CAAG,EACzDH,EAAOnI,GAAG,OAAS,cAC5BS,GAAU;AAAA,GAId,OAAOA,CACT,EAYAuI,EAAS,UAAU,OAAS,SAAUb,EAAQE,EAASC,EAAK,CAC1D,IAAItI,EAAGqJ,EAAKF,EACR1I,EAAS,GACT2I,EAAQ,KAAK,MAEjB,IAAKpJ,EAAI,EAAGqJ,EAAMlB,EAAO,OAAQnI,EAAIqJ,EAAKrJ,IACxCmJ,EAAOhB,EAAOnI,GAAG,KAEbmJ,IAAS,SACX1I,GAAU,KAAK,aAAa0H,EAAOnI,GAAG,SAAUqI,EAASC,CAAG,EACnD,OAAOc,EAAMD,GAAU,IAChC1I,GAAU2I,EAAMjB,EAAOnI,GAAG,MAAMmI,EAAQnI,EAAGqI,EAASC,EAAK,IAAI,EAE7D7H,GAAU,KAAK,YAAY0H,EAAQnI,EAAGqI,EAASC,CAAG,EAItD,OAAO7H,CACT,EAEA,IAAA6I,GAAiBN,EC7TjB,SAASO,GAAQ,CAUf,KAAK,UAAY,GAOjB,KAAK,UAAY,IACnB,CAQAA,EAAM,UAAU,SAAW,SAAUxD,EAAM,CACzC,QAAS/F,EAAI,EAAGA,EAAI,KAAK,UAAU,OAAQA,IACzC,GAAI,KAAK,UAAUA,GAAG,OAAS+F,EAC7B,OAAO/F,EAGX,MAAO,EACT,EAKAuJ,EAAM,UAAU,YAAc,UAAY,CACxC,IAAIC,EAAO,KACPC,EAAS,CAAE,IAGfD,EAAK,UAAU,QAAQ,SAAUE,EAAM,CAChCA,EAAK,SAEVA,EAAK,IAAI,QAAQ,SAAUC,EAAS,CAC9BF,EAAO,QAAQE,CAAO,EAAI,GAC5BF,EAAO,KAAKE,CAAO,CAE3B,CAAK,CACL,CAAG,EAEDH,EAAK,UAAY,GAEjBC,EAAO,QAAQ,SAAUG,EAAO,CAC9BJ,EAAK,UAAUI,GAAS,GACxBJ,EAAK,UAAU,QAAQ,SAAUE,EAAM,CAChCA,EAAK,UAENE,GAASF,EAAK,IAAI,QAAQE,CAAK,EAAI,GAEvCJ,EAAK,UAAUI,GAAO,KAAKF,EAAK,EAAE,EACxC,CAAK,CACL,CAAG,CACH,EA4BAH,EAAM,UAAU,GAAK,SAAUxD,EAAM8D,EAAIxB,EAAS,CAChD,IAAIyB,EAAQ,KAAK,SAAS/D,CAAI,EAC1BgE,EAAM1B,GAAW,GAErB,GAAIyB,IAAU,GAAM,MAAM,IAAI,MAAM,0BAA4B/D,CAAI,EAEpE,KAAK,UAAU+D,GAAO,GAAKD,EAC3B,KAAK,UAAUC,GAAO,IAAMC,EAAI,KAAO,GACvC,KAAK,UAAY,IACnB,EA2BAR,EAAM,UAAU,OAAS,SAAUS,EAAYC,EAAUJ,EAAIxB,EAAS,CACpE,IAAIyB,EAAQ,KAAK,SAASE,CAAU,EAChCD,EAAM1B,GAAW,GAErB,GAAIyB,IAAU,GAAM,MAAM,IAAI,MAAM,0BAA4BE,CAAU,EAE1E,KAAK,UAAU,OAAOF,EAAO,EAAG,CAC9B,KAAMG,EACN,QAAS,GACT,GAAIJ,EACJ,IAAKE,EAAI,KAAO,CAAE,CACtB,CAAG,EAED,KAAK,UAAY,IACnB,EA2BAR,EAAM,UAAU,MAAQ,SAAUW,EAAWD,EAAUJ,EAAIxB,EAAS,CAClE,IAAIyB,EAAQ,KAAK,SAASI,CAAS,EAC/BH,EAAM1B,GAAW,GAErB,GAAIyB,IAAU,GAAM,MAAM,IAAI,MAAM,0BAA4BI,CAAS,EAEzE,KAAK,UAAU,OAAOJ,EAAQ,EAAG,EAAG,CAClC,KAAMG,EACN,QAAS,GACT,GAAIJ,EACJ,IAAKE,EAAI,KAAO,CAAE,CACtB,CAAG,EAED,KAAK,UAAY,IACnB,EAyBAR,EAAM,UAAU,KAAO,SAAUU,EAAUJ,EAAIxB,EAAS,CACtD,IAAI0B,EAAM1B,GAAW,GAErB,KAAK,UAAU,KAAK,CAClB,KAAM4B,EACN,QAAS,GACT,GAAIJ,EACJ,IAAKE,EAAI,KAAO,CAAE,CACtB,CAAG,EAED,KAAK,UAAY,IACnB,EAeAR,EAAM,UAAU,OAAS,SAAUY,EAAMC,EAAe,CACjD,MAAM,QAAQD,CAAI,IAAKA,EAAO,CAAEA,CAAI,GAEzC,IAAI1J,EAAS,CAAA,EAGb,OAAA0J,EAAK,QAAQ,SAAUpE,EAAM,CAC3B,IAAIqC,EAAM,KAAK,SAASrC,CAAI,EAE5B,GAAIqC,EAAM,EAAG,CACX,GAAIgC,EAAiB,OACrB,MAAM,IAAI,MAAM,oCAAsCrE,CAAI,CAC3D,CACD,KAAK,UAAUqC,GAAK,QAAU,GAC9B3H,EAAO,KAAKsF,CAAI,CACjB,EAAE,IAAI,EAEP,KAAK,UAAY,KACVtF,CACT,EAaA8I,EAAM,UAAU,WAAa,SAAUY,EAAMC,EAAe,CACrD,MAAM,QAAQD,CAAI,IAAKA,EAAO,CAAEA,CAAI,GAEzC,KAAK,UAAU,QAAQ,SAAUT,EAAM,CAAEA,EAAK,QAAU,EAAM,CAAE,EAEhE,KAAK,OAAOS,EAAMC,CAAa,CACjC,EAeAb,EAAM,UAAU,QAAU,SAAUY,EAAMC,EAAe,CAClD,MAAM,QAAQD,CAAI,IAAKA,EAAO,CAAEA,CAAI,GAEzC,IAAI1J,EAAS,CAAA,EAGb,OAAA0J,EAAK,QAAQ,SAAUpE,EAAM,CAC3B,IAAIqC,EAAM,KAAK,SAASrC,CAAI,EAE5B,GAAIqC,EAAM,EAAG,CACX,GAAIgC,EAAiB,OACrB,MAAM,IAAI,MAAM,oCAAsCrE,CAAI,CAC3D,CACD,KAAK,UAAUqC,GAAK,QAAU,GAC9B3H,EAAO,KAAKsF,CAAI,CACjB,EAAE,IAAI,EAEP,KAAK,UAAY,KACVtF,CACT,EAYA8I,EAAM,UAAU,SAAW,SAAUc,EAAW,CAC9C,OAAI,KAAK,YAAc,MACrB,KAAK,YAAW,EAIX,KAAK,UAAUA,IAAc,CAAA,CACtC,EAEA,IAAAC,GAAiBf,ECzVbgB,GAAe,YACfC,GAAe,MAGnBC,GAAiB,SAAmBrD,EAAO,CACzC,IAAInB,EAGJA,EAAMmB,EAAM,IAAI,QAAQmD,GAAa;AAAA,CAAI,EAGzCtE,EAAMA,EAAI,QAAQuE,GAAS,GAAQ,EAEnCpD,EAAM,IAAMnB,CACd,ECjBAyE,GAAiB,SAAetD,EAAO,CACrC,IAAIoB,EAEApB,EAAM,YACRoB,EAAiB,IAAIpB,EAAM,MAAM,SAAU,GAAI,CAAC,EAChDoB,EAAM,QAAWpB,EAAM,IACvBoB,EAAM,IAAW,CAAE,EAAG,CAAC,EACvBA,EAAM,SAAW,GACjBpB,EAAM,OAAO,KAAKoB,CAAK,GAEvBpB,EAAM,GAAG,MAAM,MAAMA,EAAM,IAAKA,EAAM,GAAIA,EAAM,IAAKA,EAAM,MAAM,CAErE,ECbAuD,GAAiB,SAAgBvD,EAAO,CACtC,IAAIe,EAASf,EAAM,OAAQwD,EAAK5K,EAAGM,EAGnC,IAAKN,EAAI,EAAGM,EAAI6H,EAAO,OAAQnI,EAAIM,EAAGN,IACpC4K,EAAMzC,EAAOnI,GACT4K,EAAI,OAAS,UACfxD,EAAM,GAAG,OAAO,MAAMwD,EAAI,QAASxD,EAAM,GAAIA,EAAM,IAAKwD,EAAI,QAAQ,CAG1E,ECLI7F,GAAiBpF,EAA2B,eAGhD,SAASkL,GAAW5E,EAAK,CACvB,MAAO,YAAY,KAAKA,CAAG,CAC7B,CACA,SAAS6E,GAAY7E,EAAK,CACxB,MAAO,aAAa,KAAKA,CAAG,CAC9B,CAGA,IAAA8E,GAAiB,SAAiB3D,EAAO,CACvC,IAAIpH,EAAGsD,EAAGhD,EAAG6H,EAAQK,EAAOwC,EAAcC,EAAOC,EAAIC,EAAMlG,EAAKmG,EAC5D7D,EAAO8D,EAAe/J,EAAKgK,EAASC,EACpCC,EAAcpE,EAAM,OACpBqE,EAEJ,GAAKrE,EAAM,GAAG,QAAQ,SAEtB,IAAK9D,EAAI,EAAGhD,EAAIkL,EAAY,OAAQlI,EAAIhD,EAAGgD,IACzC,GAAI,EAAAkI,EAAYlI,GAAG,OAAS,UACxB,CAAC8D,EAAM,GAAG,QAAQ,QAAQoE,EAAYlI,GAAG,OAAO,GAUpD,IANA6E,EAASqD,EAAYlI,GAAG,SAExB+H,EAAgB,EAIXrL,EAAImI,EAAO,OAAS,EAAGnI,GAAK,EAAGA,IAAK,CAIvC,GAHAgL,EAAe7C,EAAOnI,GAGlBgL,EAAa,OAAS,aAAc,CAEtC,IADAhL,IACOmI,EAAOnI,GAAG,QAAUgL,EAAa,OAAS7C,EAAOnI,GAAG,OAAS,aAClEA,IAEF,QACD,CAWD,GARIgL,EAAa,OAAS,gBACpBH,GAAWG,EAAa,OAAO,GAAKK,EAAgB,GACtDA,IAEEP,GAAYE,EAAa,OAAO,GAClCK,KAGA,EAAAA,EAAgB,IAEhBL,EAAa,OAAS,QAAU5D,EAAM,GAAG,QAAQ,KAAK4D,EAAa,OAAO,EAAG,CAoB/E,IAlBAG,EAAOH,EAAa,QACpBS,EAAQrE,EAAM,GAAG,QAAQ,MAAM+D,CAAI,EAGnCF,EAAQ,CAAA,EACR1D,EAAQyD,EAAa,MACrBI,EAAU,EAKNK,EAAM,OAAS,GACfA,EAAM,GAAG,QAAU,GACnBzL,EAAI,GACJmI,EAAOnI,EAAI,GAAG,OAAS,iBACzByL,EAAQA,EAAM,MAAM,CAAC,GAGlBP,EAAK,EAAGA,EAAKO,EAAM,OAAQP,IAC9B5J,EAAMmK,EAAMP,GAAI,IAChBI,EAAUlE,EAAM,GAAG,cAAc9F,CAAG,EAC/B8F,EAAM,GAAG,aAAakE,CAAO,IAElCC,EAAUE,EAAMP,GAAI,KAMfO,EAAMP,GAAI,OAEJO,EAAMP,GAAI,SAAW,WAAa,CAAC,YAAY,KAAKK,CAAO,EACpEA,EAAUnE,EAAM,GAAG,kBAAkB,UAAYmE,CAAO,EAAE,QAAQ,WAAY,EAAE,EAEhFA,EAAUnE,EAAM,GAAG,kBAAkBmE,CAAO,EAJ5CA,EAAUnE,EAAM,GAAG,kBAAkB,UAAYmE,CAAO,EAAE,QAAQ,aAAc,EAAE,EAOpFtG,EAAMwG,EAAMP,GAAI,MAEZjG,EAAMmG,IACR5C,EAAgB,IAAIpB,EAAM,MAAM,OAAQ,GAAI,CAAC,EAC7CoB,EAAM,QAAU2C,EAAK,MAAMC,EAASnG,CAAG,EACvCuD,EAAM,MAAUjB,EAChB0D,EAAM,KAAKzC,CAAK,GAGlBA,EAAgB,IAAIpB,EAAM,MAAM,YAAa,IAAK,CAAC,EACnDoB,EAAM,MAAU,CAAE,CAAE,OAAQ8C,CAAS,CAAA,EACrC9C,EAAM,MAAUjB,IAChBiB,EAAM,OAAU,UAChBA,EAAM,KAAU,OAChByC,EAAM,KAAKzC,CAAK,EAEhBA,EAAgB,IAAIpB,EAAM,MAAM,OAAQ,GAAI,CAAC,EAC7CoB,EAAM,QAAU+C,EAChB/C,EAAM,MAAUjB,EAChB0D,EAAM,KAAKzC,CAAK,EAEhBA,EAAgB,IAAIpB,EAAM,MAAM,aAAc,IAAK,EAAE,EACrDoB,EAAM,MAAU,EAAEjB,EAClBiB,EAAM,OAAU,UAChBA,EAAM,KAAU,OAChByC,EAAM,KAAKzC,CAAK,EAEhB4C,EAAUK,EAAMP,GAAI,WAElBE,EAAUD,EAAK,SACjB3C,EAAgB,IAAIpB,EAAM,MAAM,OAAQ,GAAI,CAAC,EAC7CoB,EAAM,QAAU2C,EAAK,MAAMC,CAAO,EAClC5C,EAAM,MAAUjB,EAChB0D,EAAM,KAAKzC,CAAK,GAIlBgD,EAAYlI,GAAG,SAAW6E,EAASpD,GAAeoD,EAAQnI,EAAGiL,CAAK,CACnE,CACF,EAEL,EC5HIS,GAAU,+BAIVC,GAAsB,gBAEtBC,GAAiB,iBACjBC,GAAc,CAChB,EAAG,IACH,EAAG,IACH,GAAI,GACN,EAEA,SAASC,GAAUhG,EAAOC,EAAM,CAC9B,OAAO8F,GAAY9F,EAAK,YAAW,EACrC,CAEA,SAASgG,GAAeC,EAAc,CACpC,IAAIhM,EAAGwI,EAAOyD,EAAkB,EAEhC,IAAKjM,EAAIgM,EAAa,OAAS,EAAGhM,GAAK,EAAGA,IACxCwI,EAAQwD,EAAahM,GAEjBwI,EAAM,OAAS,QAAU,CAACyD,IAC5BzD,EAAM,QAAUA,EAAM,QAAQ,QAAQoD,GAAgBE,EAAS,GAG7DtD,EAAM,OAAS,aAAeA,EAAM,OAAS,QAC/CyD,IAGEzD,EAAM,OAAS,cAAgBA,EAAM,OAAS,QAChDyD,GAGN,CAEA,SAASC,GAAaF,EAAc,CAClC,IAAIhM,EAAGwI,EAAOyD,EAAkB,EAEhC,IAAKjM,EAAIgM,EAAa,OAAS,EAAGhM,GAAK,EAAGA,IACxCwI,EAAQwD,EAAahM,GAEjBwI,EAAM,OAAS,QAAU,CAACyD,GACxBP,GAAQ,KAAKlD,EAAM,OAAO,IAC5BA,EAAM,QAAUA,EAAM,QACnB,QAAQ,OAAQ,GAAG,EAGnB,QAAQ,UAAW,GAAG,EAAE,QAAQ,WAAY,MAAM,EAClD,QAAQ,cAAe,QAAQ,EAAE,QAAQ,SAAU,GAAG,EAEtD,QAAQ,0BAA2B,KAAU,EAE7C,QAAQ,qBAAsB,KAAU,EACxC,QAAQ,6BAA8B,KAAU,GAInDA,EAAM,OAAS,aAAeA,EAAM,OAAS,QAC/CyD,IAGEzD,EAAM,OAAS,cAAgBA,EAAM,OAAS,QAChDyD,GAGN,CAGA,IAAAE,GAAiB,SAAiB/E,EAAO,CACvC,IAAIgF,EAEJ,GAAKhF,EAAM,GAAG,QAAQ,YAEtB,IAAKgF,EAAShF,EAAM,OAAO,OAAS,EAAGgF,GAAU,EAAGA,IAE9ChF,EAAM,OAAOgF,GAAQ,OAAS,WAE9BT,GAAoB,KAAKvE,EAAM,OAAOgF,GAAQ,OAAO,GACvDL,GAAe3E,EAAM,OAAOgF,GAAQ,QAAQ,EAG1CV,GAAQ,KAAKtE,EAAM,OAAOgF,GAAQ,OAAO,GAC3CF,GAAa9E,EAAM,OAAOgF,GAAQ,QAAQ,EAIhD,ECpGIvF,GAAiBlH,EAA2B,aAC5CoH,GAAiBpH,EAA2B,YAC5CqH,GAAiBrH,EAA2B,eAE5C0M,GAAgB,OAChBC,GAAW,QACXC,GAAa,IAGjB,SAASC,GAAUvG,EAAK6D,EAAO7J,EAAI,CACjC,OAAOgG,EAAI,MAAM,EAAG6D,CAAK,EAAI7J,EAAKgG,EAAI,MAAM6D,EAAQ,CAAC,CACvD,CAEA,SAAS2C,GAAgBtE,EAAQf,EAAO,CACtC,IAAIpH,EAAGwI,EAAO2C,EAAMuB,EAAGzH,EAAK2C,EAAK+E,EAAWC,EAAMC,EAAUC,EACxDC,EAAiBC,EAAiBC,EAAkBC,EACpDC,EAASC,EAAU9J,EAAG+J,EAAUC,EAAOC,EAAWC,EAItD,IAFAF,EAAQ,CAAA,EAEHtN,EAAI,EAAGA,EAAImI,EAAO,OAAQnI,IAAK,CAKlC,IAJAwI,EAAQL,EAAOnI,GAEf2M,EAAYxE,EAAOnI,GAAG,MAEjBsD,EAAIgK,EAAM,OAAS,EAAGhK,GAAK,GAC1B,EAAAgK,EAAMhK,GAAG,OAASqJ,GADWrJ,IACjC,CAIF,GAFAgK,EAAM,OAAShK,EAAI,EAEfkF,EAAM,OAAS,OAAU,SAE7B2C,EAAO3C,EAAM,QACbvD,EAAM,EACN2C,EAAMuD,EAAK,OAGXsC,EACA,KAAOxI,EAAM2C,IACX0E,GAAS,UAAYrH,EACrByH,EAAIJ,GAAS,KAAKnB,CAAI,EAClB,EAACuB,IAHW,CAchB,GATAS,EAAUC,EAAW,GACrBnI,EAAMyH,EAAE,MAAQ,EAChBW,EAAYX,EAAE,KAAO,IAKrBG,EAAW,GAEPH,EAAE,MAAQ,GAAK,EACjBG,EAAW1B,EAAK,WAAWuB,EAAE,MAAQ,CAAC,MAEtC,KAAKpJ,EAAItD,EAAI,EAAGsD,GAAK,GACf,EAAA6E,EAAO7E,GAAG,OAAS,aAAe6E,EAAO7E,GAAG,OAAS,aADnCA,IAEtB,GAAK6E,EAAO7E,GAAG,QAEf,CAAAuJ,EAAW1E,EAAO7E,GAAG,QAAQ,WAAW6E,EAAO7E,GAAG,QAAQ,OAAS,CAAC,EACpE,MASJ,GAFAwJ,EAAW,GAEP7H,EAAM2C,EACRkF,EAAW3B,EAAK,WAAWlG,CAAG,MAE9B,KAAK3B,EAAItD,EAAI,EAAGsD,EAAI6E,EAAO,QACrB,EAAAA,EAAO7E,GAAG,OAAS,aAAe6E,EAAO7E,GAAG,OAAS,aADxBA,IAEjC,GAAK6E,EAAO7E,GAAG,QAEf,CAAAwJ,EAAW3E,EAAO7E,GAAG,QAAQ,WAAW,CAAC,EACzC,MA6CJ,GAzCAyJ,EAAkB/F,GAAe6F,CAAQ,GAAK9F,GAAY,OAAO,aAAa8F,CAAQ,CAAC,EACvFG,EAAkBhG,GAAe8F,CAAQ,GAAK/F,GAAY,OAAO,aAAa+F,CAAQ,CAAC,EAEvFG,EAAmBpG,GAAagG,CAAQ,EACxCK,EAAmBrG,GAAaiG,CAAQ,EAEpCI,EACFC,EAAU,GACDH,IACHC,GAAoBF,IACxBI,EAAU,KAIVF,EACFG,EAAW,GACFL,IACHG,GAAoBF,IACxBI,EAAW,KAIXN,IAAa,IAAgBJ,EAAE,KAAO,KACpCG,GAAY,IAAgBA,GAAY,KAE1CO,EAAWD,EAAU,IAIrBA,GAAWC,IAQbD,EAAUJ,EACVK,EAAWJ,GAGT,CAACG,GAAW,CAACC,EAAU,CAErBC,IACF7E,EAAM,QAAUgE,GAAUhE,EAAM,QAASkE,EAAE,MAAOH,EAAU,GAE9D,QACD,CAED,GAAIa,GAEF,IAAK9J,EAAIgK,EAAM,OAAS,EAAGhK,GAAK,IAC9BsJ,EAAOU,EAAMhK,GACT,EAAAgK,EAAMhK,GAAG,MAAQqJ,IAFYrJ,IAGjC,GAAIsJ,EAAK,SAAWS,GAAYC,EAAMhK,GAAG,QAAUqJ,EAAW,CAC5DC,EAAOU,EAAMhK,GAET+J,GACFE,EAAYnG,EAAM,GAAG,QAAQ,OAAO,GACpCoG,EAAapG,EAAM,GAAG,QAAQ,OAAO,KAErCmG,EAAYnG,EAAM,GAAG,QAAQ,OAAO,GACpCoG,EAAapG,EAAM,GAAG,QAAQ,OAAO,IAMvCoB,EAAM,QAAUgE,GAAUhE,EAAM,QAASkE,EAAE,MAAOc,CAAU,EAC5DrF,EAAOyE,EAAK,OAAO,QAAUJ,GAC3BrE,EAAOyE,EAAK,OAAO,QAASA,EAAK,IAAKW,CAAS,EAEjDtI,GAAOuI,EAAW,OAAS,EACvBZ,EAAK,QAAU5M,IAAKiF,GAAOsI,EAAU,OAAS,GAElDpC,EAAO3C,EAAM,QACbZ,EAAMuD,EAAK,OAEXmC,EAAM,OAAShK,EACf,SAASmK,CACV,EAIDN,EACFG,EAAM,KAAK,CACT,MAAOtN,EACP,IAAK0M,EAAE,MACP,OAAQW,EACR,MAAOV,CACjB,CAAS,EACQS,GAAYC,IACrB7E,EAAM,QAAUgE,GAAUhE,EAAM,QAASkE,EAAE,MAAOH,EAAU,EAE/D,CACF,CACH,CAGA,IAAAmB,GAAiB,SAAqBtG,EAAO,CAE3C,IAAIgF,EAEJ,GAAKhF,EAAM,GAAG,QAAQ,YAEtB,IAAKgF,EAAShF,EAAM,OAAO,OAAS,EAAGgF,GAAU,EAAGA,IAE9ChF,EAAM,OAAOgF,GAAQ,OAAS,UAC9B,CAACC,GAAc,KAAKjF,EAAM,OAAOgF,GAAQ,OAAO,GAIpDK,GAAgBrF,EAAM,OAAOgF,GAAQ,SAAUhF,CAAK,CAExD,EC9LAuG,GAAiB,SAAmBvG,EAAO,CACzC,IAAI9D,EAAGhD,EAAG6H,EAAQyF,EAAMhG,EAAKiG,EACzBrC,EAAcpE,EAAM,OAExB,IAAK9D,EAAI,EAAGhD,EAAIkL,EAAY,OAAQlI,EAAIhD,EAAGgD,IACzC,GAAIkI,EAAYlI,GAAG,OAAS,SAK5B,KAHA6E,EAASqD,EAAYlI,GAAG,SACxBsE,EAAMO,EAAO,OAERyF,EAAO,EAAGA,EAAOhG,EAAKgG,IACrBzF,EAAOyF,GAAM,OAAS,iBACxBzF,EAAOyF,GAAM,KAAO,QAIxB,IAAKA,EAAOC,EAAO,EAAGD,EAAOhG,EAAKgG,IAC5BzF,EAAOyF,GAAM,OAAS,QACtBA,EAAO,EAAIhG,GACXO,EAAOyF,EAAO,GAAG,OAAS,OAG5BzF,EAAOyF,EAAO,GAAG,QAAUzF,EAAOyF,GAAM,QAAUzF,EAAOyF,EAAO,GAAG,SAE/DA,IAASC,IAAQ1F,EAAO0F,GAAQ1F,EAAOyF,IAE3CC,KAIAD,IAASC,IACX1F,EAAO,OAAS0F,GAGtB,EC9BA,SAASC,EAAM3E,EAAM4E,EAAKC,EAAS,CAMjC,KAAK,KAAW7E,EAOhB,KAAK,IAAW4E,EAOhB,KAAK,MAAW,KAOhB,KAAK,IAAW,KAWhB,KAAK,QAAWC,EAOhB,KAAK,MAAW,EAOhB,KAAK,SAAW,KAQhB,KAAK,QAAW,GAOhB,KAAK,OAAW,GAWhB,KAAK,KAAW,GAOhB,KAAK,KAAW,KAQhB,KAAK,MAAW,GAQhB,KAAK,OAAW,EAClB,CAQAF,EAAM,UAAU,UAAY,SAAmB/H,EAAM,CACnD,IAAIkI,EAAOjO,EAAGqJ,EAEd,GAAI,CAAC,KAAK,MAAS,MAAO,GAI1B,IAFA4E,EAAQ,KAAK,MAERjO,EAAI,EAAGqJ,EAAM4E,EAAM,OAAQjO,EAAIqJ,EAAKrJ,IACvC,GAAIiO,EAAMjO,GAAG,KAAO+F,EAAQ,OAAO/F,EAErC,MAAO,EACT,EAQA8N,EAAM,UAAU,SAAW,SAAkBI,EAAU,CACjD,KAAK,MACP,KAAK,MAAM,KAAKA,CAAQ,EAExB,KAAK,MAAQ,CAAEA,EAEnB,EAQAJ,EAAM,UAAU,QAAU,SAAiB/H,EAAMoI,EAAO,CACtD,IAAI/F,EAAM,KAAK,UAAUrC,CAAI,EACzBmI,EAAW,CAAEnI,EAAMoI,GAEnB/F,EAAM,EACR,KAAK,SAAS8F,CAAQ,EAEtB,KAAK,MAAM9F,GAAO8F,CAEtB,EAQAJ,EAAM,UAAU,QAAU,SAAiB/H,EAAM,CAC/C,IAAIqC,EAAM,KAAK,UAAUrC,CAAI,EAAGoI,EAAQ,KACxC,OAAI/F,GAAO,IACT+F,EAAQ,KAAK,MAAM/F,GAAK,IAEnB+F,CACT,EASAL,EAAM,UAAU,SAAW,SAAkB/H,EAAMoI,EAAO,CACxD,IAAI/F,EAAM,KAAK,UAAUrC,CAAI,EAEzBqC,EAAM,EACR,KAAK,SAAS,CAAErC,EAAMoI,CAAO,CAAA,EAE7B,KAAK,MAAM/F,GAAK,GAAK,KAAK,MAAMA,GAAK,GAAK,IAAM+F,CAEpD,EAGA,IAAA3F,GAAiBsF,ECpMbA,GAAQnO,GAGZ,SAASyO,GAAUpJ,EAAKqJ,EAAI/F,EAAK,CAC/B,KAAK,IAAMtD,EACX,KAAK,IAAMsD,EACX,KAAK,OAAS,GACd,KAAK,WAAa,GAClB,KAAK,GAAK+F,CACZ,CAGAD,GAAU,UAAU,MAAQN,GAG5B,IAAAQ,GAAiBF,GCVb7E,GAAS5J,GAGT4O,GAAS,CACX,CAAE,YAAkBvK,EAAwC,EAC5D,CAAE,QAAkBC,EAAwC,EAC5D,CAAE,SAAkBC,EAAwC,EAC5D,CAAE,UAAkBE,EAAwC,EAC5D,CAAE,eAAkBoK,EAAwC,EAC5D,CAAE,cAAkBC,EAAwC,EAG5D,CAAE,YAAkBC,EAAwC,CAC9D,EAMA,SAASC,IAAO,CAMd,KAAK,MAAQ,IAAIpF,GAEjB,QAASvJ,EAAI,EAAGA,EAAIuO,GAAO,OAAQvO,IACjC,KAAK,MAAM,KAAKuO,GAAOvO,GAAG,GAAIuO,GAAOvO,GAAG,EAAE,CAE9C,CAQA2O,GAAK,UAAU,QAAU,SAAUvH,EAAO,CACxC,IAAIpH,EAAGM,EAAG8I,EAIV,IAFAA,EAAQ,KAAK,MAAM,SAAS,EAAE,EAEzBpJ,EAAI,EAAGM,EAAI8I,EAAM,OAAQpJ,EAAIM,EAAGN,IACnCoJ,EAAMpJ,GAAGoH,CAAK,CAElB,EAEAuH,GAAK,UAAU,MAAQC,GAGvB,IAAAC,GAAiBF,GCxDb/H,GAAUjH,EAA2B,QAGzC,SAASmP,GAAQ1H,EAAO2H,EAAM,CAC5B,IAAI9J,EAAMmC,EAAM,OAAO2H,GAAQ3H,EAAM,OAAO2H,GACxCnH,EAAMR,EAAM,OAAO2H,GAEvB,OAAO3H,EAAM,IAAI,MAAMnC,EAAK2C,CAAG,CACjC,CAEA,SAASoH,GAAa/I,EAAK,CACzB,IAAIxF,EAAS,CAAE,EACXwE,EAAM,EACN2C,EAAM3B,EAAI,OACVhG,EACAgP,EAAY,GACZ7D,EAAU,EACV8D,EAAU,GAId,IAFAjP,EAAMgG,EAAI,WAAWhB,CAAG,EAEjBA,EAAM2C,GACP3H,IAAO,MACJgP,GAOHC,GAAWjJ,EAAI,UAAUmF,EAASnG,EAAM,CAAC,EACzCmG,EAAUnG,IANVxE,EAAO,KAAKyO,EAAUjJ,EAAI,UAAUmF,EAASnG,CAAG,CAAC,EACjDiK,EAAU,GACV9D,EAAUnG,EAAM,IAQpBgK,EAAahP,IAAO,GACpBgF,IAEAhF,EAAKgG,EAAI,WAAWhB,CAAG,EAGzB,OAAAxE,EAAO,KAAKyO,EAAUjJ,EAAI,UAAUmF,CAAO,CAAC,EAErC3K,CACT,KAGA0O,GAAiB,SAAe/H,EAAOgI,EAAWC,EAASC,EAAQ,CACjE,IAAIrP,EAAIsP,EAAUtK,EAAKjF,EAAG,EAAGwP,EAAUC,EAASC,EAAalH,EACzDmH,EAAQjD,EAAGkD,EAAYC,EAAYC,EAAeC,EAClDC,EAAiBC,EAASC,EA+B9B,GA5BId,EAAY,EAAIC,IAEpBG,EAAWJ,EAAY,EAEnBhI,EAAM,OAAOoI,GAAYpI,EAAM,YAG/BA,EAAM,OAAOoI,GAAYpI,EAAM,WAAa,IAMhDnC,EAAMmC,EAAM,OAAOoI,GAAYpI,EAAM,OAAOoI,GACxCvK,GAAOmC,EAAM,OAAOoI,MAExBS,EAAU7I,EAAM,IAAI,WAAWnC,GAAK,EAChCgL,IAAY,KAAeA,IAAY,IAAeA,IAAY,KAElEhL,GAAOmC,EAAM,OAAOoI,KAExBU,EAAW9I,EAAM,IAAI,WAAWnC,GAAK,EACjCiL,IAAa,KAAeA,IAAa,IAAeA,IAAa,IAAe,CAACtJ,GAAQsJ,CAAQ,IAMrGD,IAAY,IAAerJ,GAAQsJ,CAAQ,EAAK,MAAO,GAE3D,KAAOjL,EAAMmC,EAAM,OAAOoI,IAAW,CAGnC,GAFAvP,EAAKmH,EAAM,IAAI,WAAWnC,CAAG,EAEzBhF,IAAO,KAAeA,IAAO,IAAeA,IAAO,IAAe,CAAC2G,GAAQ3G,CAAE,EAAK,MAAO,GAE7FgF,GACD,CAMD,IAJAsK,EAAWT,GAAQ1H,EAAOgI,EAAY,CAAC,EAEvCK,EAAUF,EAAS,MAAM,GAAG,EAC5BI,EAAS,CAAA,EACJ3P,EAAI,EAAGA,EAAIyP,EAAQ,OAAQzP,IAAK,CAEnC,GADA0M,EAAI+C,EAAQzP,GAAG,KAAI,EACf,CAAC0M,EAAG,CAGN,GAAI1M,IAAM,GAAKA,IAAMyP,EAAQ,OAAS,EACpC,SAEA,MAAO,EAEV,CAED,GAAI,CAAC,WAAW,KAAK/C,CAAC,EAAK,MAAO,GAC9BA,EAAE,WAAWA,EAAE,OAAS,CAAC,IAAM,GACjCiD,EAAO,KAAKjD,EAAE,WAAW,CAAC,IAAM,GAAc,SAAW,OAAO,EACvDA,EAAE,WAAW,CAAC,IAAM,GAC7BiD,EAAO,KAAK,MAAM,EAElBA,EAAO,KAAK,EAAE,CAEjB,CAYD,GAVAJ,EAAWT,GAAQ1H,EAAOgI,CAAS,EAAE,KAAI,EACrCG,EAAS,QAAQ,GAAG,IAAM,IAC1BnI,EAAM,OAAOgI,GAAahI,EAAM,WAAa,IACjDqI,EAAUT,GAAaO,CAAQ,EAC3BE,EAAQ,QAAUA,EAAQ,KAAO,IAAIA,EAAQ,QAC7CA,EAAQ,QAAUA,EAAQA,EAAQ,OAAS,KAAO,IAAIA,EAAQ,MAIlEC,EAAcD,EAAQ,OAClBC,IAAgB,GAAKA,IAAgBC,EAAO,QAAU,MAAO,GAEjE,GAAIL,EAAU,MAAO,GAkBrB,IAhBAQ,EAAgB1I,EAAM,WACtBA,EAAM,WAAa,QAInB4I,EAAkB5I,EAAM,GAAG,MAAM,MAAM,SAAS,YAAY,EAE5DoB,EAAYpB,EAAM,KAAK,aAAc,QAAS,CAAC,EAC/CoB,EAAM,IAAMoH,EAAa,CAAER,EAAW,CAAC,EAEvC5G,EAAYpB,EAAM,KAAK,aAAc,QAAS,CAAC,EAC/CoB,EAAM,IAAM,CAAE4G,EAAWA,EAAY,CAAC,EAEtC5G,EAAYpB,EAAM,KAAK,UAAW,KAAM,CAAC,EACzCoB,EAAM,IAAM,CAAE4G,EAAWA,EAAY,CAAC,EAEjCpP,EAAI,EAAGA,EAAIyP,EAAQ,OAAQzP,IAC9BwI,EAAiBpB,EAAM,KAAK,UAAW,KAAM,CAAC,EAC1CuI,EAAO3P,KACTwI,EAAM,MAAS,CAAE,CAAE,QAAS,cAAgBmH,EAAO3P,EAAE,IAGvDwI,EAAiBpB,EAAM,KAAK,SAAU,GAAI,CAAC,EAC3CoB,EAAM,QAAWiH,EAAQzP,GAAG,KAAI,EAChCwI,EAAM,SAAW,GAEjBA,EAAiBpB,EAAM,KAAK,WAAY,KAAM,EAAE,EAMlD,IAHAoB,EAAYpB,EAAM,KAAK,WAAY,KAAM,EAAE,EAC3CoB,EAAYpB,EAAM,KAAK,cAAe,QAAS,EAAE,EAE5CoI,EAAWJ,EAAY,EAAGI,EAAWH,GACpC,EAAAjI,EAAM,OAAOoI,GAAYpI,EAAM,WADcoI,IAAY,CAI7D,IADAO,EAAY,GACP/P,EAAI,EAAG,EAAIgQ,EAAgB,OAAQhQ,EAAI,EAAGA,IAC7C,GAAIgQ,EAAgBhQ,GAAGoH,EAAOoI,EAAUH,EAAS,EAAI,EAAG,CACtDU,EAAY,GACZ,KACD,CAMH,GAHIA,IACJR,EAAWT,GAAQ1H,EAAOoI,CAAQ,EAAE,KAAI,EACpC,CAACD,IACDnI,EAAM,OAAOoI,GAAYpI,EAAM,WAAa,EAAK,MAarD,IAZAqI,EAAUT,GAAaO,CAAQ,EAC3BE,EAAQ,QAAUA,EAAQ,KAAO,IAAIA,EAAQ,QAC7CA,EAAQ,QAAUA,EAAQA,EAAQ,OAAS,KAAO,IAAIA,EAAQ,MAE9DD,IAAaJ,EAAY,IAC3B5G,EAAYpB,EAAM,KAAK,aAAc,QAAS,CAAC,EAC/CoB,EAAM,IAAMqH,EAAa,CAAET,EAAY,EAAG,IAG5C5G,EAAYpB,EAAM,KAAK,UAAW,KAAM,CAAC,EACzCoB,EAAM,IAAM,CAAEgH,EAAUA,EAAW,CAAC,EAE/BxP,EAAI,EAAGA,EAAI0P,EAAa1P,IAC3BwI,EAAiBpB,EAAM,KAAK,UAAW,KAAM,CAAC,EAC1CuI,EAAO3P,KACTwI,EAAM,MAAS,CAAE,CAAE,QAAS,cAAgBmH,EAAO3P,EAAE,IAGvDwI,EAAiBpB,EAAM,KAAK,SAAU,GAAI,CAAC,EAC3CoB,EAAM,QAAWiH,EAAQzP,GAAKyP,EAAQzP,GAAG,KAAM,EAAG,GAClDwI,EAAM,SAAW,GAEjBA,EAAiBpB,EAAM,KAAK,WAAY,KAAM,EAAE,EAElDoB,EAAQpB,EAAM,KAAK,WAAY,KAAM,EAAE,CACxC,CAED,OAAIyI,IACFrH,EAAQpB,EAAM,KAAK,cAAe,QAAS,EAAE,EAC7CyI,EAAW,GAAKL,GAGlBhH,EAAQpB,EAAM,KAAK,cAAe,QAAS,EAAE,EAC7CwI,EAAW,GAAKJ,EAEhBpI,EAAM,WAAa0I,EACnB1I,EAAM,KAAOoI,EACN,EACT,ECvNAjP,GAAiB,SAAc6G,EAAOgI,EAAWC,EAAqB,CACpE,IAAIG,EAAU3B,EAAMrF,EAEpB,GAAIpB,EAAM,OAAOgI,GAAahI,EAAM,UAAY,EAAK,MAAO,GAI5D,IAFAyG,EAAO2B,EAAWJ,EAAY,EAEvBI,EAAWH,GAAS,CACzB,GAAIjI,EAAM,QAAQoI,CAAQ,EAAG,CAC3BA,IACA,QACD,CAED,GAAIpI,EAAM,OAAOoI,GAAYpI,EAAM,WAAa,EAAG,CACjDoI,IACA3B,EAAO2B,EACP,QACD,CACD,KACD,CAED,OAAApI,EAAM,KAAOyG,EAEbrF,EAAgBpB,EAAM,KAAK,aAAc,OAAQ,CAAC,EAClDoB,EAAM,QAAUpB,EAAM,SAASgI,EAAWvB,EAAM,EAAIzG,EAAM,UAAW,EAAK,EAAI;AAAA,EAC9EoB,EAAM,IAAU,CAAE4G,EAAWhI,EAAM,IAAI,EAEhC,EACT,EC5BA+I,GAAiB,SAAe/I,EAAOgI,EAAWC,EAASC,EAAQ,CACjE,IAAI7H,EAAQ4B,EAAK+G,EAAQZ,EAAUa,EAAK7H,EAAO8H,EAC3CC,EAAgB,GAChBtL,EAAMmC,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,GAC7CxH,EAAMR,EAAM,OAAOgI,GAwBvB,GArBIhI,EAAM,OAAOgI,GAAahI,EAAM,WAAa,GAE7CnC,EAAM,EAAI2C,IAEdH,EAASL,EAAM,IAAI,WAAWnC,CAAG,EAE7BwC,IAAW,KAAeA,IAAW,MAKzC4I,EAAMpL,EACNA,EAAMmC,EAAM,UAAUnC,EAAKwC,CAAM,EAEjC4B,EAAMpE,EAAMoL,EAERhH,EAAM,KAEViH,EAASlJ,EAAM,IAAI,MAAMiJ,EAAKpL,CAAG,EACjCmL,EAAShJ,EAAM,IAAI,MAAMnC,EAAK2C,CAAG,EAE7BH,IAAW,IACT2I,EAAO,QAAQ,OAAO,aAAa3I,CAAM,CAAC,GAAK,GACjD,MAAO,GAKX,GAAI6H,EAAU,MAAO,GAKrB,IAFAE,EAAWJ,EAGTI,IACI,EAAAA,GAAYH,IAMhBpK,EAAMoL,EAAMjJ,EAAM,OAAOoI,GAAYpI,EAAM,OAAOoI,GAClD5H,EAAMR,EAAM,OAAOoI,GAEfvK,EAAM2C,GAAOR,EAAM,OAAOoI,GAAYpI,EAAM,aAOhD,GAAIA,EAAM,IAAI,WAAWnC,CAAG,IAAMwC,GAE9B,EAAAL,EAAM,OAAOoI,GAAYpI,EAAM,WAAa,KAKhDnC,EAAMmC,EAAM,UAAUnC,EAAKwC,CAAM,EAG7B,EAAAxC,EAAMoL,EAAMhH,KAGhBpE,EAAMmC,EAAM,WAAWnC,CAAG,EAEtB,EAAAA,EAAM2C,KAEV,CAAA2I,EAAgB,GAEhB,MAIF,OAAAlH,EAAMjC,EAAM,OAAOgI,GAEnBhI,EAAM,KAAOoI,GAAYe,EAAgB,EAAI,GAE7C/H,EAAgBpB,EAAM,KAAK,QAAS,OAAQ,CAAC,EAC7CoB,EAAM,KAAU4H,EAChB5H,EAAM,QAAUpB,EAAM,SAASgI,EAAY,EAAGI,EAAUnG,EAAK,EAAI,EACjEb,EAAM,OAAU8H,EAChB9H,EAAM,IAAU,CAAE4G,EAAWhI,EAAM,IAAI,EAEhC,EACT,EC7FIR,GAAUjH,EAA2B,QAGzC6Q,GAAiB,SAAoBpJ,EAAOgI,EAAWC,EAASC,EAAQ,CACtE,IAAImB,EACAxQ,EACAD,EACA0Q,EACA,EACAC,EACA5I,EACAyH,EACAoB,EACAC,EACAC,EACAC,EACAjB,EACAkB,EACAC,EACAC,EACAnB,EACAC,EACAxH,EACA2I,EACAC,EAAahK,EAAM,QACnBnC,EAAMmC,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,GAC7CxH,EAAMR,EAAM,OAAOgI,GAMvB,GAHIhI,EAAM,OAAOgI,GAAahI,EAAM,WAAa,GAG7CA,EAAM,IAAI,WAAWnC,GAAK,IAAM,GAAe,MAAO,GAI1D,GAAIqK,EAAU,MAAO,GAqCrB,IAlCAoB,EAAUE,EAASxJ,EAAM,OAAOgI,GAAa,EAGzChI,EAAM,IAAI,WAAWnC,CAAG,IAAM,IAGhCA,IACAyL,IACAE,IACAH,EAAY,GACZS,EAAmB,IACV9J,EAAM,IAAI,WAAWnC,CAAG,IAAM,GACvCiM,EAAmB,IAEd9J,EAAM,QAAQgI,GAAawB,GAAU,IAAM,GAG9C3L,IACAyL,IACAE,IACAH,EAAY,IAKZA,EAAY,IAGdS,EAAmB,GAGrBL,EAAY,CAAEzJ,EAAM,OAAOgI,EAAU,EACrChI,EAAM,OAAOgI,GAAanK,EAEnBA,EAAM2C,IACX3H,EAAKmH,EAAM,IAAI,WAAWnC,CAAG,EAEzB2B,GAAQ3G,CAAE,IAHE,CAIVA,IAAO,EACT2Q,GAAU,GAAKA,EAASxJ,EAAM,QAAQgI,IAAcqB,EAAY,EAAI,IAAM,EAE1EG,IAMJ3L,GACD,CAoCD,IAlCA6L,EAAa,CAAE1J,EAAM,QAAQgI,EAAU,EACvChI,EAAM,QAAQgI,GAAahI,EAAM,OAAOgI,GAAa,GAAK8B,EAAmB,EAAI,GAEjFP,EAAgB1L,GAAO2C,EAEvBoJ,EAAY,CAAE5J,EAAM,OAAOgI,EAAU,EACrChI,EAAM,OAAOgI,GAAawB,EAASF,EAEnCO,EAAY,CAAE7J,EAAM,OAAOgI,EAAU,EACrChI,EAAM,OAAOgI,GAAanK,EAAMmC,EAAM,OAAOgI,GAE7CY,EAAkB5I,EAAM,GAAG,MAAM,MAAM,SAAS,YAAY,EAE5D0I,EAAgB1I,EAAM,WACtBA,EAAM,WAAa,aAoBdoI,EAAWJ,EAAY,EAAGI,EAAWH,IASxC8B,EAAc/J,EAAM,OAAOoI,GAAYpI,EAAM,UAE7CnC,EAAMmC,EAAM,OAAOoI,GAAYpI,EAAM,OAAOoI,GAC5C5H,EAAMR,EAAM,OAAOoI,GAEf,EAAAvK,GAAO2C,IAdsC4H,IAAY,CAmB7D,GAAIpI,EAAM,IAAI,WAAWnC,GAAK,IAAM,IAAe,CAACkM,EAAa,CAsC/D,IAlCAT,EAAUE,EAASxJ,EAAM,OAAOoI,GAAY,EAGxCpI,EAAM,IAAI,WAAWnC,CAAG,IAAM,IAGhCA,IACAyL,IACAE,IACAH,EAAY,GACZS,EAAmB,IACV9J,EAAM,IAAI,WAAWnC,CAAG,IAAM,GACvCiM,EAAmB,IAEd9J,EAAM,QAAQoI,GAAYoB,GAAU,IAAM,GAG7C3L,IACAyL,IACAE,IACAH,EAAY,IAKZA,EAAY,IAGdS,EAAmB,GAGrBL,EAAU,KAAKzJ,EAAM,OAAOoI,EAAS,EACrCpI,EAAM,OAAOoI,GAAYvK,EAElBA,EAAM2C,IACX3H,EAAKmH,EAAM,IAAI,WAAWnC,CAAG,EAEzB2B,GAAQ3G,CAAE,IAHE,CAIVA,IAAO,EACT2Q,GAAU,GAAKA,EAASxJ,EAAM,QAAQoI,IAAaiB,EAAY,EAAI,IAAM,EAEzEG,IAMJ3L,GACD,CAED0L,EAAgB1L,GAAO2C,EAEvBkJ,EAAW,KAAK1J,EAAM,QAAQoI,EAAS,EACvCpI,EAAM,QAAQoI,GAAYpI,EAAM,OAAOoI,GAAY,GAAK0B,EAAmB,EAAI,GAE/EF,EAAU,KAAK5J,EAAM,OAAOoI,EAAS,EACrCpI,EAAM,OAAOoI,GAAYoB,EAASF,EAElCO,EAAU,KAAK7J,EAAM,OAAOoI,EAAS,EACrCpI,EAAM,OAAOoI,GAAYvK,EAAMmC,EAAM,OAAOoI,GAC5C,QACD,CAGD,GAAImB,EAAiB,MAIrB,IADAZ,EAAY,GACP/P,EAAI,EAAG,EAAIgQ,EAAgB,OAAQhQ,EAAI,EAAGA,IAC7C,GAAIgQ,EAAgBhQ,GAAGoH,EAAOoI,EAAUH,EAAS,EAAI,EAAG,CACtDU,EAAY,GACZ,KACD,CAGH,GAAIA,EAAW,CAKb3I,EAAM,QAAUoI,EAEZpI,EAAM,YAAc,IAItByJ,EAAU,KAAKzJ,EAAM,OAAOoI,EAAS,EACrCsB,EAAW,KAAK1J,EAAM,QAAQoI,EAAS,EACvCyB,EAAU,KAAK7J,EAAM,OAAOoI,EAAS,EACrCwB,EAAU,KAAK5J,EAAM,OAAOoI,EAAS,EACrCpI,EAAM,OAAOoI,IAAapI,EAAM,WAGlC,KACD,CAEDyJ,EAAU,KAAKzJ,EAAM,OAAOoI,EAAS,EACrCsB,EAAW,KAAK1J,EAAM,QAAQoI,EAAS,EACvCyB,EAAU,KAAK7J,EAAM,OAAOoI,EAAS,EACrCwB,EAAU,KAAK5J,EAAM,OAAOoI,EAAS,EAIrCpI,EAAM,OAAOoI,GAAY,EAC1B,CAoBD,IAlBAuB,EAAY3J,EAAM,UAClBA,EAAM,UAAY,EAElBoB,EAAepB,EAAM,KAAK,kBAAmB,aAAc,CAAC,EAC5DoB,EAAM,OAAS,IACfA,EAAM,IAAST,EAAQ,CAAEqH,EAAW,CAAC,EAErChI,EAAM,GAAG,MAAM,SAASA,EAAOgI,EAAWI,CAAQ,EAElDhH,EAAepB,EAAM,KAAK,mBAAoB,aAAc,EAAE,EAC9DoB,EAAM,OAAS,IAEfpB,EAAM,QAAUgK,EAChBhK,EAAM,WAAa0I,EACnB/H,EAAM,GAAKX,EAAM,KAIZpH,EAAI,EAAGA,EAAIiR,EAAU,OAAQjR,IAChCoH,EAAM,OAAOpH,EAAIoP,GAAayB,EAAU7Q,GACxCoH,EAAM,OAAOpH,EAAIoP,GAAa6B,EAAUjR,GACxCoH,EAAM,OAAOpH,EAAIoP,GAAa4B,EAAUhR,GACxCoH,EAAM,QAAQpH,EAAIoP,GAAa0B,EAAW9Q,GAE5C,OAAAoH,EAAM,UAAY2J,EAEX,EACT,ECvRInK,GAAUjH,EAA2B,QAGzC0R,GAAiB,SAAYjK,EAAOgI,EAAWC,EAASC,EAAQ,CAC9D,IAAI7H,EAAQ6J,EAAKrR,EAAIuI,EACjBvD,EAAMmC,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,GAC7CxH,EAAMR,EAAM,OAAOgI,GAQvB,GALIhI,EAAM,OAAOgI,GAAahI,EAAM,WAAa,IAEjDK,EAASL,EAAM,IAAI,WAAWnC,GAAK,EAG/BwC,IAAW,IACXA,IAAW,IACXA,IAAW,IACb,MAAO,GAMT,IADA6J,EAAM,EACCrM,EAAM2C,GAAK,CAEhB,GADA3H,EAAKmH,EAAM,IAAI,WAAWnC,GAAK,EAC3BhF,IAAOwH,GAAU,CAACb,GAAQ3G,CAAE,EAAK,MAAO,GACxCA,IAAOwH,GAAU6J,GACtB,CAED,OAAIA,EAAM,EAAY,IAElBhC,IAEJlI,EAAM,KAAOgI,EAAY,EAEzB5G,EAAepB,EAAM,KAAK,KAAM,KAAM,CAAC,EACvCoB,EAAM,IAAS,CAAE4G,EAAWhI,EAAM,IAAI,EACtCoB,EAAM,OAAS,MAAM8I,EAAM,CAAC,EAAE,KAAK,OAAO,aAAa7J,CAAM,CAAC,GAEvD,GACT,ECxCIb,GAAUjH,EAA2B,QAKzC,SAAS4R,GAAqBnK,EAAOgI,EAAW,CAC9C,IAAI3H,EAAQxC,EAAK2C,EAAK3H,EAatB,OAXAgF,EAAMmC,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,GAC7CxH,EAAMR,EAAM,OAAOgI,GAEnB3H,EAASL,EAAM,IAAI,WAAWnC,GAAK,EAE/BwC,IAAW,IACXA,IAAW,IACXA,IAAW,IAIXxC,EAAM2C,IACR3H,EAAKmH,EAAM,IAAI,WAAWnC,CAAG,EAEzB,CAAC2B,GAAQ3G,CAAE,GAEN,GAIJgF,CACT,CAIA,SAASuM,GAAsBpK,EAAOgI,EAAW,CAC/C,IAAInP,EACAoH,EAAQD,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,GAC/CnK,EAAMoC,EACNO,EAAMR,EAAM,OAAOgI,GAOvB,GAJInK,EAAM,GAAK2C,IAEf3H,EAAKmH,EAAM,IAAI,WAAWnC,GAAK,EAE3BhF,EAAK,IAAeA,EAAK,IAAe,MAAO,GAEnD,OAAS,CAEP,GAAIgF,GAAO2C,EAAO,MAAO,GAIzB,GAFA3H,EAAKmH,EAAM,IAAI,WAAWnC,GAAK,EAE3BhF,GAAM,IAAeA,GAAM,GAAa,CAI1C,GAAIgF,EAAMoC,GAAS,GAAM,MAAO,GAEhC,QACD,CAGD,GAAIpH,IAAO,IAAeA,IAAO,GAC/B,MAGF,MAAO,EACR,CAGD,OAAIgF,EAAM2C,IACR3H,EAAKmH,EAAM,IAAI,WAAWnC,CAAG,EAEzB,CAAC2B,GAAQ3G,CAAE,GAEN,GAGJgF,CACT,CAEA,SAASwM,GAAoBrK,EAAOgB,EAAK,CACvC,IAAIpI,EAAGM,EACHiH,EAAQH,EAAM,MAAQ,EAE1B,IAAKpH,EAAIoI,EAAM,EAAG9H,EAAI8G,EAAM,OAAO,OAAS,EAAGpH,EAAIM,EAAGN,IAChDoH,EAAM,OAAOpH,GAAG,QAAUuH,GAASH,EAAM,OAAOpH,GAAG,OAAS,mBAC9DoH,EAAM,OAAOpH,EAAI,GAAG,OAAS,GAC7BoH,EAAM,OAAOpH,GAAG,OAAS,GACzBA,GAAK,EAGX,KAGAmK,GAAiB,SAAc/C,EAAOgI,EAAWC,EAASC,EAAQ,CAChE,IAAIrP,EACAyR,EACA1R,EACA2R,EACAC,EACAlB,EACAmB,EACAC,EACAxR,EACAyR,EACAC,EACAC,EACAC,EACAtK,EACA4H,EACAoB,EACAuB,EACArC,EACAkB,EACAC,EACAmB,EACAnN,EACAoN,EACAC,EACAjL,EACA0I,EACAC,EACAxH,EACA+J,EAAyB,GACzBC,GAAQ,GAWZ,GARIpL,EAAM,OAAOgI,GAAahI,EAAM,WAAa,GAQ7CA,EAAM,YAAc,GACpBA,EAAM,OAAOgI,GAAahI,EAAM,YAAc,GAC9CA,EAAM,OAAOgI,GAAahI,EAAM,UAClC,MAAO,GAiBT,GAZIkI,GAAUlI,EAAM,aAAe,aAM7BA,EAAM,OAAOgI,IAAchI,EAAM,YACnCmL,EAAyB,KAKxBF,EAAiBb,GAAsBpK,EAAOgI,CAAS,IAAM,GAOhE,GANAyC,EAAY,GACZxK,EAAQD,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,GAC/C8C,EAAc,OAAO9K,EAAM,IAAI,MAAMC,EAAOgL,EAAiB,CAAC,CAAC,EAI3DE,GAA0BL,IAAgB,EAAG,MAAO,YAE9CG,EAAiBd,GAAqBnK,EAAOgI,CAAS,IAAM,EACtEyC,EAAY,OAGZ,OAAO,GAKT,GAAIU,GACEnL,EAAM,WAAWiL,CAAc,GAAKjL,EAAM,OAAOgI,GAAY,MAAO,GAO1E,GAHA6C,EAAiB7K,EAAM,IAAI,WAAWiL,EAAiB,CAAC,EAGpD/C,EAAU,MAAO,GA6BrB,IA1BA0C,EAAa5K,EAAM,OAAO,OAEtByK,GACFrJ,EAAcpB,EAAM,KAAK,oBAAqB,KAAM,CAAC,EACjD8K,IAAgB,IAClB1J,EAAM,MAAQ,CAAE,CAAE,QAAS0J,CAAa,CAAA,IAI1C1J,EAAcpB,EAAM,KAAK,mBAAoB,KAAM,CAAC,EAGtDoB,EAAM,IAASuJ,EAAY,CAAE3C,EAAW,CAAC,EACzC5G,EAAM,OAAS,OAAO,aAAayJ,CAAc,EAMjDzC,EAAWJ,EACXkD,EAAe,GACftC,EAAkB5I,EAAM,GAAG,MAAM,MAAM,SAAS,MAAM,EAEtD0I,EAAgB1I,EAAM,WACtBA,EAAM,WAAa,OAEZoI,EAAWH,GAAS,CAMzB,IALApK,EAAMoN,EACNzK,EAAMR,EAAM,OAAOoI,GAEnBkB,EAAUE,EAASxJ,EAAM,OAAOoI,GAAY6C,GAAkBjL,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,IAE9FnK,EAAM2C,GAAK,CAGhB,GAFA3H,EAAKmH,EAAM,IAAI,WAAWnC,CAAG,EAEzBhF,IAAO,EACT2Q,GAAU,GAAKA,EAASxJ,EAAM,QAAQoI,IAAa,UAC1CvP,IAAO,GAChB2Q,QAEA,OAGF3L,GACD,CAsFD,GApFAyM,EAAezM,EAEXyM,GAAgB9J,EAElBgK,EAAoB,EAEpBA,EAAoBhB,EAASF,EAK3BkB,EAAoB,IAAKA,EAAoB,GAIjDD,EAASjB,EAAUkB,EAGnBpJ,EAAepB,EAAM,KAAK,iBAAkB,KAAM,CAAC,EACnDoB,EAAM,OAAS,OAAO,aAAayJ,CAAc,EACjDzJ,EAAM,IAASsJ,EAAY,CAAE1C,EAAW,CAAC,EACrCyC,IACFrJ,EAAM,KAAOpB,EAAM,IAAI,MAAMC,EAAOgL,EAAiB,CAAC,GAIxDD,EAAWhL,EAAM,MACjB6J,EAAY7J,EAAM,OAAOgI,GACzB4B,EAAY5J,EAAM,OAAOgI,GAMzB+C,EAAgB/K,EAAM,WACtBA,EAAM,WAAaA,EAAM,UACzBA,EAAM,UAAYuK,EAElBvK,EAAM,MAAQ,GACdA,EAAM,OAAOgI,GAAasC,EAAetK,EAAM,OAAOgI,GACtDhI,EAAM,OAAOgI,GAAawB,EAEtBc,GAAgB9J,GAAOR,EAAM,QAAQgI,EAAY,CAAC,EAQpDhI,EAAM,KAAO,KAAK,IAAIA,EAAM,KAAO,EAAGiI,CAAO,EAE7CjI,EAAM,GAAG,MAAM,SAASA,EAAOgI,EAAWC,EAAS,EAAI,GAIrD,CAACjI,EAAM,OAASkL,KAClBE,GAAQ,IAIVF,EAAgBlL,EAAM,KAAOgI,EAAa,GAAKhI,EAAM,QAAQA,EAAM,KAAO,CAAC,EAE3EA,EAAM,UAAYA,EAAM,WACxBA,EAAM,WAAa+K,EACnB/K,EAAM,OAAOgI,GAAa6B,EAC1B7J,EAAM,OAAOgI,GAAa4B,EAC1B5J,EAAM,MAAQgL,EAEd5J,EAAepB,EAAM,KAAK,kBAAmB,KAAM,EAAE,EACrDoB,EAAM,OAAS,OAAO,aAAayJ,CAAc,EAEjDzC,EAAWJ,EAAYhI,EAAM,KAC7B0K,EAAU,GAAKtC,EACfkC,EAAetK,EAAM,OAAOgI,GAExBI,GAAYH,GAKZjI,EAAM,OAAOoI,GAAYpI,EAAM,WAG/BA,EAAM,OAAOgI,GAAahI,EAAM,WAAa,EAAK,MAItD,IADA2I,EAAY,GACP/P,EAAI,EAAGM,EAAI0P,EAAgB,OAAQhQ,EAAIM,EAAGN,IAC7C,GAAIgQ,EAAgBhQ,GAAGoH,EAAOoI,EAAUH,EAAS,EAAI,EAAG,CACtDU,EAAY,GACZ,KACD,CAEH,GAAIA,EAAa,MAGjB,GAAI8B,EAAW,CAEb,GADAQ,EAAiBb,GAAsBpK,EAAOoI,CAAQ,EAClD6C,EAAiB,EAAK,MAC1BhL,EAAQD,EAAM,OAAOoI,GAAYpI,EAAM,OAAOoI,EACpD,SACM6C,EAAiBd,GAAqBnK,EAAOoI,CAAQ,EACjD6C,EAAiB,EAAK,MAG5B,GAAIJ,IAAmB7K,EAAM,IAAI,WAAWiL,EAAiB,CAAC,EAAK,KACpE,CAGD,OAAIR,EACFrJ,EAAQpB,EAAM,KAAK,qBAAsB,KAAM,EAAE,EAEjDoB,EAAQpB,EAAM,KAAK,oBAAqB,KAAM,EAAE,EAElDoB,EAAM,OAAS,OAAO,aAAayJ,CAAc,EAEjDF,EAAU,GAAKvC,EACfpI,EAAM,KAAOoI,EAEbpI,EAAM,WAAa0I,EAGf0C,IACFf,GAAoBrK,EAAO4K,CAAU,EAGhC,EACT,ECxWI/K,GAAuBtH,EAA2B,mBAClDiH,GAAuBjH,EAA2B,QAGtD8S,GAAiB,SAAmBrL,EAAOgI,EAAWsD,EAAUpD,EAAQ,CACtE,IAAIrP,EACA0S,EACAC,EACAvD,EACAwD,EACA7S,EACAM,EACAwS,EACAnL,EACAmI,EACAiD,EACA1L,EACApB,EACA8J,EACAC,EACAgD,EACAjL,EAAQ,EACR9C,EAAMmC,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,GAC7CxH,EAAMR,EAAM,OAAOgI,GACnBI,EAAWJ,EAAY,EAK3B,GAFIhI,EAAM,OAAOgI,GAAahI,EAAM,WAAa,GAE7CA,EAAM,IAAI,WAAWnC,CAAG,IAAM,GAAe,MAAO,GAIxD,KAAO,EAAEA,EAAM2C,GACb,GAAIR,EAAM,IAAI,WAAWnC,CAAG,IAAM,IAC9BmC,EAAM,IAAI,WAAWnC,EAAM,CAAC,IAAM,GAAa,CAEjD,GADIA,EAAM,IAAM2C,GACZR,EAAM,IAAI,WAAWnC,EAAM,CAAC,IAAM,GAAe,MAAO,GAC5D,KACD,CAWH,IARAoK,EAAUjI,EAAM,QAGhB4I,EAAkB5I,EAAM,GAAG,MAAM,MAAM,SAAS,WAAW,EAE3D0I,EAAgB1I,EAAM,WACtBA,EAAM,WAAa,YAEZoI,EAAWH,GAAW,CAACjI,EAAM,QAAQoI,CAAQ,EAAGA,IAGrD,GAAI,EAAApI,EAAM,OAAOoI,GAAYpI,EAAM,UAAY,IAG3C,EAAAA,EAAM,OAAOoI,GAAY,GAI7B,KADAO,EAAY,GACP/P,EAAI,EAAGM,EAAI0P,EAAgB,OAAQhQ,EAAIM,EAAGN,IAC7C,GAAIgQ,EAAgBhQ,GAAGoH,EAAOoI,EAAUH,EAAS,EAAI,EAAG,CACtDU,EAAY,GACZ,KACD,CAEH,GAAIA,EAAa,MAMnB,IAHA9J,EAAMmB,EAAM,SAASgI,EAAWI,EAAUpI,EAAM,UAAW,EAAK,EAAE,OAClEQ,EAAM3B,EAAI,OAELhB,EAAM,EAAGA,EAAM2C,EAAK3C,IAAO,CAE9B,GADAhF,EAAKgG,EAAI,WAAWhB,CAAG,EACnBhF,IAAO,GACT,MAAO,GACF,GAAIA,IAAO,GAAc,CAC9B0H,EAAW1C,EACX,KACN,MAAehF,IAAO,GAChB8H,IACS9H,IAAO,KAChBgF,IACIA,EAAM2C,GAAO3B,EAAI,WAAWhB,CAAG,IAAM,IACvC8C,IAGL,CAED,GAAIJ,EAAW,GAAK1B,EAAI,WAAW0B,EAAW,CAAC,IAAM,GAAe,MAAO,GAI3E,IAAK1C,EAAM0C,EAAW,EAAG1C,EAAM2C,EAAK3C,IAElC,GADAhF,EAAKgG,EAAI,WAAWhB,CAAG,EACnBhF,IAAO,GACT8H,YACSnB,CAAAA,GAAQ3G,CAAE,EAGnB,MAUJ,GAJA8S,EAAM3L,EAAM,GAAG,QAAQ,qBAAqBnB,EAAKhB,EAAK2C,CAAG,EACrD,CAACmL,EAAI,KAETF,EAAOzL,EAAM,GAAG,cAAc2L,EAAI,GAAG,EACjC,CAAC3L,EAAM,GAAG,aAAayL,CAAI,GAAK,MAAO,GAY3C,IAVA5N,EAAM8N,EAAI,IACVhL,GAASgL,EAAI,MAGbJ,EAAa1N,EACb2N,EAAgB7K,EAIhBV,EAAQpC,EACDA,EAAM2C,EAAK3C,IAEhB,GADAhF,EAAKgG,EAAI,WAAWhB,CAAG,EACnBhF,IAAO,GACT8H,YACSnB,CAAAA,GAAQ3G,CAAE,EAGnB,MAkBJ,IAZA8S,EAAM3L,EAAM,GAAG,QAAQ,eAAenB,EAAKhB,EAAK2C,CAAG,EAC/C3C,EAAM2C,GAAOP,IAAUpC,GAAO8N,EAAI,IACpCC,EAAQD,EAAI,IACZ9N,EAAM8N,EAAI,IACVhL,GAASgL,EAAI,QAEbC,EAAQ,GACR/N,EAAM0N,EACN5K,EAAQ6K,GAIH3N,EAAM2C,IACX3H,EAAKgG,EAAI,WAAWhB,CAAG,EACnB,EAAC2B,GAAQ3G,CAAE,IACfgF,IAGF,GAAIA,EAAM2C,GAAO3B,EAAI,WAAWhB,CAAG,IAAM,IACnC+N,EAMF,IAHAA,EAAQ,GACR/N,EAAM0N,EACN5K,EAAQ6K,EACD3N,EAAM2C,IACX3H,EAAKgG,EAAI,WAAWhB,CAAG,EACnB,EAAC2B,GAAQ3G,CAAE,IACfgF,IAWN,OANIA,EAAM2C,GAAO3B,EAAI,WAAWhB,CAAG,IAAM,KAKzC6N,EAAQ7L,GAAmBhB,EAAI,MAAM,EAAG0B,CAAQ,CAAC,EAC7C,CAACmL,GAEI,IAKLxD,IAEA,OAAOlI,EAAM,IAAI,WAAe,MAClCA,EAAM,IAAI,WAAa,IAErB,OAAOA,EAAM,IAAI,WAAW0L,GAAW,MACzC1L,EAAM,IAAI,WAAW0L,GAAS,CAAE,MAAOE,EAAO,KAAMH,IAGtDzL,EAAM,WAAa0I,EAEnB1I,EAAM,KAAOgI,EAAYrH,EAAQ,GAC1B,GACT,EC/LAkL,GAAiB,CACf,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,SACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,IACF,QCjEIC,GAAgB,6BAEhBC,GAAgB,yBAChBC,GAAgB,UAChBC,GAAgB,UAEhBC,GAAc,MAAQH,GAAW,IAAMC,GAAgB,IAAMC,GAAgB,IAE7EE,GAAc,UAAYL,GAAY,eAAiBI,GAAa,MAEpEE,GAAc,2BAA6BD,GAAY,aAEvDE,GAAc,mCACdC,GAAc,wCACdC,GAAc,qBACdC,GAAc,qBACdC,GAAc,iCAEdC,GAAc,IAAI,OAAO,OAASN,GAAW,IAAMC,GAAY,IAAMC,GACjD,IAAMC,GAAa,IAAMC,GAAc,IAAMC,GAAQ,GAAG,EAC5EE,GAAyB,IAAI,OAAO,OAASP,GAAW,IAAMC,GAAY,GAAG,EAEvDO,GAAA,YAAGF,GAC7BE,GAAA,uBAAwCD,GCtBxC,IAAIE,GAActU,GACdoU,GAAyB/P,GAA6B,uBAKtDkQ,EAAiB,CACnB,CAAE,6CAA8C,mCAAoC,EAAM,EAC1F,CAAE,QAAgB,MAAS,EAAM,EACjC,CAAE,OAAgB,MAAS,EAAM,EACjC,CAAE,WAAgB,IAAS,EAAM,EACjC,CAAE,eAAgB,QAAS,EAAM,EACjC,CAAE,IAAI,OAAO,QAAUD,GAAY,KAAK,GAAG,EAAI,mBAAoB,GAAG,EAAG,KAAM,EAAM,EACrF,CAAE,IAAI,OAAOF,GAAuB,OAAS,OAAO,EAAI,KAAM,EAAO,CACvE,EAGAI,GAAiB,SAAoB/M,EAAOgI,EAAWC,EAASC,EAAQ,CACtE,IAAItP,EAAGwP,EAAUhH,EAAO+G,EACpBtK,EAAMmC,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,GAC7CxH,EAAMR,EAAM,OAAOgI,GAOvB,GAJIhI,EAAM,OAAOgI,GAAahI,EAAM,WAAa,GAE7C,CAACA,EAAM,GAAG,QAAQ,MAElBA,EAAM,IAAI,WAAWnC,CAAG,IAAM,GAAe,MAAO,GAIxD,IAFAsK,EAAWnI,EAAM,IAAI,MAAMnC,EAAK2C,CAAG,EAE9B5H,EAAI,EAAGA,EAAIkU,EAAe,QACzB,CAAAA,EAAelU,GAAG,GAAG,KAAKuP,CAAQ,EADDvP,IACrC,CAGF,GAAIA,IAAMkU,EAAe,OAAU,MAAO,GAE1C,GAAI5E,EAEF,OAAO4E,EAAelU,GAAG,GAO3B,GAJAwP,EAAWJ,EAAY,EAInB,CAAC8E,EAAelU,GAAG,GAAG,KAAKuP,CAAQ,GACrC,KAAOC,EAAWH,GACZ,EAAAjI,EAAM,OAAOoI,GAAYpI,EAAM,WADVoI,IAOzB,GAJAvK,EAAMmC,EAAM,OAAOoI,GAAYpI,EAAM,OAAOoI,GAC5C5H,EAAMR,EAAM,OAAOoI,GACnBD,EAAWnI,EAAM,IAAI,MAAMnC,EAAK2C,CAAG,EAE/BsM,EAAelU,GAAG,GAAG,KAAKuP,CAAQ,EAAG,CACnCA,EAAS,SAAW,GAAKC,IAC7B,KACD,EAIL,OAAApI,EAAM,KAAOoI,EAEbhH,EAAgBpB,EAAM,KAAK,aAAc,GAAI,CAAC,EAC9CoB,EAAM,IAAU,CAAE4G,EAAWI,CAAQ,EACrChH,EAAM,QAAUpB,EAAM,SAASgI,EAAWI,EAAUpI,EAAM,UAAW,EAAI,EAElE,EACT,ECrEIR,GAAUjH,EAA2B,QAGzCyU,GAAiB,SAAiBhN,EAAOgI,EAAWC,EAASC,EAAQ,CACnE,IAAIrP,EAAIsH,EAAO8M,EAAK7L,EAChBvD,EAAMmC,EAAM,OAAOgI,GAAahI,EAAM,OAAOgI,GAC7CxH,EAAMR,EAAM,OAAOgI,GAOvB,GAJIhI,EAAM,OAAOgI,GAAahI,EAAM,WAAa,IAEjDnH,EAAMmH,EAAM,IAAI,WAAWnC,CAAG,EAE1BhF,IAAO,IAAegF,GAAO2C,GAAO,MAAO,GAK/C,IAFAL,EAAQ,EACRtH,EAAKmH,EAAM,IAAI,WAAW,EAAEnC,CAAG,EACxBhF,IAAO,IAAegF,EAAM2C,GAAOL,GAAS,GACjDA,IACAtH,EAAKmH,EAAM,IAAI,WAAW,EAAEnC,CAAG,EAGjC,OAAIsC,EAAQ,GAAMtC,EAAM2C,GAAO,CAAChB,GAAQ3G,CAAE,EAAa,IAEnDqP,IAIJ1H,EAAMR,EAAM,eAAeQ,EAAK3C,CAAG,EACnCoP,EAAMjN,EAAM,cAAcQ,EAAK,GAAM3C,CAAG,EACpCoP,EAAMpP,GAAO2B,GAAQQ,EAAM,IAAI,WAAWiN,EAAM,CAAC,CAAC,IACpDzM,EAAMyM,GAGRjN,EAAM,KAAOgI,EAAY,EAEzB5G,EAAepB,EAAM,KAAK,eAAgB,IAAM,OAAOG,CAAK,EAAG,CAAC,EAChEiB,EAAM,OAAS,WAAW,MAAM,EAAGjB,CAAK,EACxCiB,EAAM,IAAS,CAAE4G,EAAWhI,EAAM,IAAI,EAEtCoB,EAAiBpB,EAAM,KAAK,SAAU,GAAI,CAAC,EAC3CoB,EAAM,QAAWpB,EAAM,IAAI,MAAMnC,EAAK2C,CAAG,EAAE,OAC3CY,EAAM,IAAW,CAAE4G,EAAWhI,EAAM,IAAI,EACxCoB,EAAM,SAAW,GAEjBA,EAAepB,EAAM,KAAK,gBAAiB,IAAM,OAAOG,CAAK,EAAG,EAAE,EAClEiB,EAAM,OAAS,WAAW,MAAM,EAAGjB,CAAK,GAEjC,GACT,ECjDA+M,GAAiB,SAAkBlN,EAAOgI,EAAWC,EAAqB,CACxE,IAAIkF,EAASxE,EAAW,EAAGzP,EAAGkI,EAAOvD,EAAK2C,EAAKL,EAAOE,EAClD+H,EAAWJ,EAAY,EAAGU,EAC1BE,EAAkB5I,EAAM,GAAG,MAAM,MAAM,SAAS,WAAW,EAG/D,GAAIA,EAAM,OAAOgI,GAAahI,EAAM,WAAa,EAAK,MAAO,GAM7D,IAJA0I,EAAgB1I,EAAM,WACtBA,EAAM,WAAa,YAGZoI,EAAWH,GAAW,CAACjI,EAAM,QAAQoI,CAAQ,EAAGA,IAGrD,GAAI,EAAApI,EAAM,OAAOoI,GAAYpI,EAAM,UAAY,GAK/C,IAAIA,EAAM,OAAOoI,IAAapI,EAAM,YAClCnC,EAAMmC,EAAM,OAAOoI,GAAYpI,EAAM,OAAOoI,GAC5C5H,EAAMR,EAAM,OAAOoI,GAEfvK,EAAM2C,IACRH,EAASL,EAAM,IAAI,WAAWnC,CAAG,GAE7BwC,IAAW,IAAeA,IAAW,MACvCxC,EAAMmC,EAAM,UAAUnC,EAAKwC,CAAM,EACjCxC,EAAMmC,EAAM,WAAWnC,CAAG,EAEtBA,GAAO2C,KAAK,CACdL,EAASE,IAAW,GAAc,EAAI,EACtC,KACD,CAMP,GAAI,EAAAL,EAAM,OAAOoI,GAAY,GAI7B,KADAO,EAAY,GACP,EAAI,EAAGzP,EAAI0P,EAAgB,OAAQ,EAAI1P,EAAG,IAC7C,GAAI0P,EAAgB,GAAG5I,EAAOoI,EAAUH,EAAS,EAAI,EAAG,CACtDU,EAAY,GACZ,KACD,CAEH,GAAIA,EAAa,OAGnB,OAAKxI,GAKLgN,EAAUnN,EAAM,SAASgI,EAAWI,EAAUpI,EAAM,UAAW,EAAK,EAAE,OAEtEA,EAAM,KAAOoI,EAAW,EAExBhH,EAAiBpB,EAAM,KAAK,eAAgB,IAAM,OAAOG,CAAK,EAAG,CAAC,EAClEiB,EAAM,OAAW,OAAO,aAAaf,CAAM,EAC3Ce,EAAM,IAAW,CAAE4G,EAAWhI,EAAM,IAAI,EAExCoB,EAAiBpB,EAAM,KAAK,SAAU,GAAI,CAAC,EAC3CoB,EAAM,QAAW+L,EACjB/L,EAAM,IAAW,CAAE4G,EAAWhI,EAAM,KAAO,GAC3CoB,EAAM,SAAW,GAEjBA,EAAiBpB,EAAM,KAAK,gBAAiB,IAAM,OAAOG,CAAK,EAAG,EAAE,EACpEiB,EAAM,OAAW,OAAO,aAAaf,CAAM,EAE3CL,EAAM,WAAa0I,EAEZ,IArBE,EAsBX,EC7EA0E,GAAiB,SAAmBpN,EAAOgI,EAAwB,CACjE,IAAImF,EAASxE,EAAW/P,EAAGM,EAAGkI,EAAOsH,EACjCN,EAAWJ,EAAY,EACvBY,EAAkB5I,EAAM,GAAG,MAAM,MAAM,SAAS,WAAW,EAC3DiI,EAAUjI,EAAM,QAMpB,IAJA0I,EAAgB1I,EAAM,WACtBA,EAAM,WAAa,YAGZoI,EAAWH,GAAW,CAACjI,EAAM,QAAQoI,CAAQ,EAAGA,IAGrD,GAAI,EAAApI,EAAM,OAAOoI,GAAYpI,EAAM,UAAY,IAG3C,EAAAA,EAAM,OAAOoI,GAAY,GAI7B,KADAO,EAAY,GACP/P,EAAI,EAAGM,EAAI0P,EAAgB,OAAQhQ,EAAIM,EAAGN,IAC7C,GAAIgQ,EAAgBhQ,GAAGoH,EAAOoI,EAAUH,EAAS,EAAI,EAAG,CACtDU,EAAY,GACZ,KACD,CAEH,GAAIA,EAAa,MAGnB,OAAAwE,EAAUnN,EAAM,SAASgI,EAAWI,EAAUpI,EAAM,UAAW,EAAK,EAAE,OAEtEA,EAAM,KAAOoI,EAEbhH,EAAiBpB,EAAM,KAAK,iBAAkB,IAAK,CAAC,EACpDoB,EAAM,IAAW,CAAE4G,EAAWhI,EAAM,IAAI,EAExCoB,EAAiBpB,EAAM,KAAK,SAAU,GAAI,CAAC,EAC3CoB,EAAM,QAAW+L,EACjB/L,EAAM,IAAW,CAAE4G,EAAWhI,EAAM,IAAI,EACxCoB,EAAM,SAAW,GAEjBA,EAAiBpB,EAAM,KAAK,kBAAmB,IAAK,EAAE,EAEtDA,EAAM,WAAa0I,EAEZ,EACT,EC/CIhC,GAAQnO,GACRiH,GAAU5C,EAA2B,QAGzC,SAASyQ,EAAWzP,EAAKqJ,EAAI/F,EAAKH,EAAQ,CACxC,IAAIlI,EAAI,EAAGoH,EAAOpC,EAAKoE,EAAKsI,EAAQf,EAAQ8D,EAuD5C,IArDA,KAAK,IAAM1P,EAGX,KAAK,GAASqJ,EAEd,KAAK,IAAM/F,EAMX,KAAK,OAASH,EAEd,KAAK,OAAS,GACd,KAAK,OAAS,GACd,KAAK,OAAS,GACd,KAAK,OAAS,GAYd,KAAK,QAAU,GAGf,KAAK,UAAa,EAElB,KAAK,KAAa,EAClB,KAAK,QAAa,EAClB,KAAK,MAAa,GAClB,KAAK,SAAa,GAClB,KAAK,WAAa,GAIlB,KAAK,WAAa,OAElB,KAAK,MAAQ,EAGb,KAAK,OAAS,GAId,EAAI,KAAK,IACTuM,EAAe,GAEVrN,EAAQpC,EAAM0M,EAASf,EAAS,EAAGvH,EAAM,EAAE,OAAQpE,EAAMoE,EAAKpE,IAAO,CAGxE,GAFAhF,EAAK,EAAE,WAAWgF,CAAG,EAEjB,CAACyP,EACH,GAAI9N,GAAQ3G,CAAE,EAAG,CACf0R,IAEI1R,IAAO,EACT2Q,GAAU,EAAIA,EAAS,EAEvBA,IAEF,QACR,MACQ8D,EAAe,IAIfzU,IAAO,IAAQgF,IAAQoE,EAAM,KAC3BpJ,IAAO,IAAQgF,IACnB,KAAK,OAAO,KAAKoC,CAAK,EACtB,KAAK,OAAO,KAAKpC,CAAG,EACpB,KAAK,OAAO,KAAK0M,CAAM,EACvB,KAAK,OAAO,KAAKf,CAAM,EACvB,KAAK,QAAQ,KAAK,CAAC,EAEnB8D,EAAe,GACf/C,EAAS,EACTf,EAAS,EACTvJ,EAAQpC,EAAM,EAEjB,CAGD,KAAK,OAAO,KAAK,EAAE,MAAM,EACzB,KAAK,OAAO,KAAK,EAAE,MAAM,EACzB,KAAK,OAAO,KAAK,CAAC,EAClB,KAAK,OAAO,KAAK,CAAC,EAClB,KAAK,QAAQ,KAAK,CAAC,EAEnB,KAAK,QAAU,KAAK,OAAO,OAAS,CACtC,CAIAwP,EAAW,UAAU,KAAO,SAAUtL,EAAM4E,EAAKC,EAAS,CACxD,IAAIxF,EAAQ,IAAIsF,GAAM3E,EAAM4E,EAAKC,CAAO,EACxC,OAAAxF,EAAM,MAAQ,GAEVwF,EAAU,GAAG,KAAK,QACtBxF,EAAM,MAAQ,KAAK,MACfwF,EAAU,GAAG,KAAK,QAEtB,KAAK,OAAO,KAAKxF,CAAK,EACfA,CACT,EAEAiM,EAAW,UAAU,QAAU,SAAiB1F,EAAM,CACpD,OAAO,KAAK,OAAOA,GAAQ,KAAK,OAAOA,IAAS,KAAK,OAAOA,EAC9D,EAEA0F,EAAW,UAAU,eAAiB,SAAwBE,EAAM,CAClE,QAAS/M,EAAM,KAAK,QAAS+M,EAAO/M,GAC9B,OAAK,OAAO+M,GAAQ,KAAK,OAAOA,GAAQ,KAAK,OAAOA,IADjBA,IACvC,CAIF,OAAOA,CACT,EAGAF,EAAW,UAAU,WAAa,SAAoBxP,EAAK,CAGzD,QAFIhF,EAEK2H,EAAM,KAAK,IAAI,OAAQ3C,EAAM2C,IACpC3H,EAAK,KAAK,IAAI,WAAWgF,CAAG,EACxB,EAAC2B,GAAQ3G,CAAE,GAF0BgF,IAEzC,CAEF,OAAOA,CACT,EAGAwP,EAAW,UAAU,eAAiB,SAAwBxP,EAAK2P,EAAK,CACtE,GAAI3P,GAAO2P,EAAO,OAAO3P,EAEzB,KAAOA,EAAM2P,GACX,GAAI,CAAChO,GAAQ,KAAK,IAAI,WAAW,EAAE3B,CAAG,CAAC,EAAK,OAAOA,EAAM,EAE3D,OAAOA,CACT,EAGAwP,EAAW,UAAU,UAAY,SAAmBxP,EAAK1E,EAAM,CAC7D,QAASqH,EAAM,KAAK,IAAI,OAAQ3C,EAAM2C,GAChC,KAAK,IAAI,WAAW3C,CAAG,IAAM1E,EADQ0E,IACzC,CAEF,OAAOA,CACT,EAGAwP,EAAW,UAAU,cAAgB,SAAuBxP,EAAK1E,EAAMqU,EAAK,CAC1E,GAAI3P,GAAO2P,EAAO,OAAO3P,EAEzB,KAAOA,EAAM2P,GACX,GAAIrU,IAAS,KAAK,IAAI,WAAW,EAAE0E,CAAG,EAAK,OAAOA,EAAM,EAE1D,OAAOA,CACT,EAGAwP,EAAW,UAAU,SAAW,SAAkBI,EAAOC,EAAKnD,EAAQoD,EAAY,CAChF,IAAI/U,EAAGgV,EAAY/U,EAAIgV,EAAOpH,EAAMqH,EAAOC,EACvCpG,EAAO8F,EAEX,GAAIA,GAASC,EACX,MAAO,GAKT,IAFAI,EAAQ,IAAI,MAAMJ,EAAMD,CAAK,EAExB7U,EAAI,EAAG+O,EAAO+F,EAAK/F,IAAQ/O,IAAK,CAWnC,IAVAgV,EAAa,EACbG,EAAYF,EAAQ,KAAK,OAAOlG,GAE5BA,EAAO,EAAI+F,GAAOC,EAEpBlH,EAAO,KAAK,OAAOkB,GAAQ,EAE3BlB,EAAO,KAAK,OAAOkB,GAGdkG,EAAQpH,GAAQmH,EAAarD,GAAQ,CAG1C,GAFA1R,EAAK,KAAK,IAAI,WAAWgV,CAAK,EAE1BrO,GAAQ3G,CAAE,EACRA,IAAO,EACT+U,GAAc,GAAKA,EAAa,KAAK,QAAQjG,IAAS,EAEtDiG,YAEOC,EAAQE,EAAY,KAAK,OAAOpG,GAEzCiG,QAEA,OAGFC,GACD,CAEGD,EAAarD,EAGfuD,EAAMlV,GAAK,IAAI,MAAMgV,EAAarD,EAAS,CAAC,EAAE,KAAK,GAAG,EAAI,KAAK,IAAI,MAAMsD,EAAOpH,CAAI,EAEpFqH,EAAMlV,GAAK,KAAK,IAAI,MAAMiV,EAAOpH,CAAI,CAExC,CAED,OAAOqH,EAAM,KAAK,EAAE,CACtB,EAGAT,EAAW,UAAU,MAAQ3G,GAG7B,IAAAsH,GAAiBX,EC9NblL,GAAkB5J,GAGlB4O,GAAS,CAGX,CAAE,QAAcvK,GAAqC,CAAE,YAAa,WAAW,CAAI,EACnF,CAAE,OAAcC,EAA+B,EAC/C,CAAE,QAAcC,GAAqC,CAAE,YAAa,YAAa,aAAc,OAAU,EACzG,CAAE,aAAcE,GAAqC,CAAE,YAAa,YAAa,aAAc,OAAU,EACzG,CAAE,KAAcoK,GAAqC,CAAE,YAAa,YAAa,aAAc,OAAU,EACzG,CAAE,OAAcC,GAAqC,CAAE,YAAa,YAAa,YAAY,CAAI,EACjG,CAAE,YAAcC,EAAoC,EACpD,CAAE,aAAcE,GAAqC,CAAE,YAAa,YAAa,YAAY,CAAI,EACjG,CAAE,UAAcyG,GAAqC,CAAE,YAAa,YAAa,YAAY,CAAI,EACjG,CAAE,WAAcC,EAAmC,EACnD,CAAE,YAAcC,EAAoC,CACtD,EAMA,SAASC,IAAc,CAMrB,KAAK,MAAQ,IAAIjM,GAEjB,QAASvJ,EAAI,EAAGA,EAAIuO,GAAO,OAAQvO,IACjC,KAAK,MAAM,KAAKuO,GAAOvO,GAAG,GAAIuO,GAAOvO,GAAG,GAAI,CAAE,KAAMuO,GAAOvO,GAAG,IAAM,CAAE,GAAE,MAAO,CAAA,CAAE,CAErF,CAKAwV,GAAY,UAAU,SAAW,SAAUpO,EAAOgI,EAAWC,EAAS,CAQpE,QAPIoG,EAAIzV,EACJoJ,EAAQ,KAAK,MAAM,SAAS,EAAE,EAC9BC,EAAMD,EAAM,OACZ2F,EAAOK,EACPsG,EAAgB,GAChBC,EAAavO,EAAM,GAAG,QAAQ,WAE3B2H,EAAOM,IACZjI,EAAM,KAAO2H,EAAO3H,EAAM,eAAe2H,CAAI,EACzC,EAAAA,GAAQM,GAIRjI,EAAM,OAAO2H,GAAQ3H,EAAM,aANV,CAUrB,GAAIA,EAAM,OAASuO,EAAY,CAC7BvO,EAAM,KAAOiI,EACb,KACD,CASD,IAAKrP,EAAI,EAAGA,EAAIqJ,IACdoM,EAAKrM,EAAMpJ,GAAGoH,EAAO2H,EAAMM,EAAS,EAAK,EACrC,CAAAoG,GAFezV,IAEnB,CAKFoH,EAAM,MAAQ,CAACsO,EAGXtO,EAAM,QAAQA,EAAM,KAAO,CAAC,IAC9BsO,EAAgB,IAGlB3G,EAAO3H,EAAM,KAET2H,EAAOM,GAAWjI,EAAM,QAAQ2H,CAAI,IACtC2G,EAAgB,GAChB3G,IACA3H,EAAM,KAAO2H,EAEhB,CACH,EAQAyG,GAAY,UAAU,MAAQ,SAAUxQ,EAAKqJ,EAAI/F,EAAKsN,EAAW,CAC/D,IAAIxO,EAECpC,IAELoC,EAAQ,IAAI,KAAK,MAAMpC,EAAKqJ,EAAI/F,EAAKsN,CAAS,EAE9C,KAAK,SAASxO,EAAOA,EAAM,KAAMA,EAAM,OAAO,EAChD,EAGAoO,GAAY,UAAU,MAAQK,GAG9B,IAAAC,GAAiBN,GC5GjB,SAASO,GAAiB9V,EAAI,CAC5B,OAAQA,EAAE,CACR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,MAAO,GACT,QACE,MAAO,EACV,CACH,CAEA,IAAAkL,GAAiB,SAAc/D,EAAOkI,EAAQ,CAG5C,QAFIrK,EAAMmC,EAAM,IAETnC,EAAMmC,EAAM,QAAU,CAAC2O,GAAiB3O,EAAM,IAAI,WAAWnC,CAAG,CAAC,GACtEA,IAGF,OAAIA,IAAQmC,EAAM,IAAc,IAE3BkI,IAAUlI,EAAM,SAAWA,EAAM,IAAI,MAAMA,EAAM,IAAKnC,CAAG,GAE9DmC,EAAM,IAAMnC,EAEL,GACT,ECpDI+Q,GAAY,0CAGhBjL,GAAiB,SAAiB3D,EAAOkI,EAAQ,CAC/C,IAAIrK,EAAK2C,EAAK9B,EAAOjD,EAAOoT,EAAM3U,EAAKgK,EAAS9C,EA2BhD,MAzBI,CAACpB,EAAM,GAAG,QAAQ,SAClBA,EAAM,UAAY,IAEtBnC,EAAMmC,EAAM,IACZQ,EAAMR,EAAM,OAERnC,EAAM,EAAI2C,IACVR,EAAM,IAAI,WAAWnC,CAAG,IAAM,IAC9BmC,EAAM,IAAI,WAAWnC,EAAM,CAAC,IAAM,IAClCmC,EAAM,IAAI,WAAWnC,EAAM,CAAC,IAAM,KAEtCa,EAAQsB,EAAM,QAAQ,MAAM4O,EAAS,EACjC,CAAClQ,KAELjD,EAAQiD,EAAM,GAEdmQ,EAAO7O,EAAM,GAAG,QAAQ,aAAaA,EAAM,IAAI,MAAMnC,EAAMpC,EAAM,MAAM,CAAC,EACpE,CAACoT,KAEL3U,EAAM2U,EAAK,IAGX3U,EAAMA,EAAI,QAAQ,OAAQ,EAAE,EAE5BgK,EAAUlE,EAAM,GAAG,cAAc9F,CAAG,EAChC,CAAC8F,EAAM,GAAG,aAAakE,CAAO,GAAU,IAEvCgE,IACHlI,EAAM,QAAUA,EAAM,QAAQ,MAAM,EAAG,CAACvE,EAAM,MAAM,EAEpD2F,EAAgBpB,EAAM,KAAK,YAAa,IAAK,CAAC,EAC9CoB,EAAM,MAAU,CAAE,CAAE,OAAQ8C,CAAS,CAAA,EACrC9C,EAAM,OAAU,UAChBA,EAAM,KAAU,OAEhBA,EAAgBpB,EAAM,KAAK,OAAQ,GAAI,CAAC,EACxCoB,EAAM,QAAUpB,EAAM,GAAG,kBAAkB9F,CAAG,EAE9CkH,EAAgBpB,EAAM,KAAK,aAAc,IAAK,EAAE,EAChDoB,EAAM,OAAU,UAChBA,EAAM,KAAU,QAGlBpB,EAAM,KAAO9F,EAAI,OAASuB,EAAM,OACzB,GACT,ECrDI+D,GAAUjH,EAA2B,QAGzCuW,GAAiB,SAAiB9O,EAAOkI,EAAQ,CAC/C,IAAI6G,EAAMvO,EAAKwO,EAAInR,EAAMmC,EAAM,IAE/B,GAAIA,EAAM,IAAI,WAAWnC,CAAG,IAAM,GAAgB,MAAO,GASzD,GAPAkR,EAAO/O,EAAM,QAAQ,OAAS,EAC9BQ,EAAMR,EAAM,OAMR,CAACkI,EACH,GAAI6G,GAAQ,GAAK/O,EAAM,QAAQ,WAAW+O,CAAI,IAAM,GAClD,GAAIA,GAAQ,GAAK/O,EAAM,QAAQ,WAAW+O,EAAO,CAAC,IAAM,GAAM,CAG5D,IADAC,EAAKD,EAAO,EACLC,GAAM,GAAKhP,EAAM,QAAQ,WAAWgP,EAAK,CAAC,IAAM,IAAMA,IAE7DhP,EAAM,QAAUA,EAAM,QAAQ,MAAM,EAAGgP,CAAE,EACzChP,EAAM,KAAK,YAAa,KAAM,CAAC,CACvC,MACQA,EAAM,QAAUA,EAAM,QAAQ,MAAM,EAAG,EAAE,EACzCA,EAAM,KAAK,YAAa,KAAM,CAAC,OAIjCA,EAAM,KAAK,YAAa,KAAM,CAAC,EAOnC,IAHAnC,IAGOA,EAAM2C,GAAOhB,GAAQQ,EAAM,IAAI,WAAWnC,CAAG,CAAC,GAAKA,IAE1D,OAAAmC,EAAM,IAAMnC,EACL,EACT,ECzCI2B,GAAUjH,EAA2B,QAErC0W,GAAU,CAAA,EAEd,QAASrW,GAAI,EAAGA,GAAI,IAAKA,KAAOqW,GAAQ,KAAK,CAAC,EAE9C,qCACG,MAAM,EAAE,EAAE,QAAQ,SAAUpW,EAAI,CAAEoW,GAAQpW,EAAG,WAAW,CAAC,GAAK,CAAI,CAAA,EAGrE,IAAAqW,GAAiB,SAAgBlP,EAAOkI,EAAQ,CAC9C,IAAIiH,EAAKC,EAAKC,EAASC,EAAYlO,EAAOvD,EAAMmC,EAAM,IAAKQ,EAAMR,EAAM,OAMvE,GAJIA,EAAM,IAAI,WAAWnC,CAAG,IAAM,KAClCA,IAGIA,GAAO2C,GAAK,MAAO,GAIvB,GAFA2O,EAAMnP,EAAM,IAAI,WAAWnC,CAAG,EAE1BsR,IAAQ,GAAM,CAOhB,IANKjH,GACHlI,EAAM,KAAK,YAAa,KAAM,CAAC,EAGjCnC,IAEOA,EAAM2C,IACX2O,EAAMnP,EAAM,IAAI,WAAWnC,CAAG,EAC1B,EAAC2B,GAAQ2P,CAAG,IAChBtR,IAGF,OAAAmC,EAAM,IAAMnC,EACL,EACR,CAED,OAAAyR,EAAatP,EAAM,IAAInC,GAEnBsR,GAAO,OAAUA,GAAO,OAAUtR,EAAM,EAAI2C,IAC9C4O,EAAMpP,EAAM,IAAI,WAAWnC,EAAM,CAAC,EAE9BuR,GAAO,OAAUA,GAAO,QAC1BE,GAActP,EAAM,IAAInC,EAAM,GAC9BA,MAIJwR,EAAU,KAAOC,EAEZpH,IACH9G,EAAQpB,EAAM,KAAK,eAAgB,GAAI,CAAC,EAEpCmP,EAAM,KAAOF,GAAQE,KAAS,EAChC/N,EAAM,QAAUkO,EAEhBlO,EAAM,QAAUiO,EAGlBjO,EAAM,OAASiO,EACfjO,EAAM,KAAS,UAGjBpB,EAAM,IAAMnC,EAAM,EACX,EACT,ECjEA0R,GAAiB,SAAkBvP,EAAOkI,EAAQ,CAChD,IAAIjI,EAAOO,EAAKH,EAAQe,EAAOoO,EAAYC,EAAUC,EAAcC,EAC/D9R,EAAMmC,EAAM,IACZnH,EAAKmH,EAAM,IAAI,WAAWnC,CAAG,EAEjC,GAAIhF,IAAO,GAAe,MAAO,GAOjC,IALAoH,EAAQpC,EACRA,IACA2C,EAAMR,EAAM,OAGLnC,EAAM2C,GAAOR,EAAM,IAAI,WAAWnC,CAAG,IAAM,IAAeA,IAKjE,GAHAwC,EAASL,EAAM,IAAI,MAAMC,EAAOpC,CAAG,EACnC6R,EAAerP,EAAO,OAElBL,EAAM,mBAAqBA,EAAM,UAAU0P,IAAiB,IAAMzP,EACpE,OAAKiI,IAAQlI,EAAM,SAAWK,GAC9BL,EAAM,KAAO0P,EACN,GAMT,IAHAF,EAAaC,EAAW5R,GAGhB2R,EAAaxP,EAAM,IAAI,QAAQ,IAAKyP,CAAQ,KAAO,IAAI,CAI7D,IAHAA,EAAWD,EAAa,EAGjBC,EAAWjP,GAAOR,EAAM,IAAI,WAAWyP,CAAQ,IAAM,IAAeA,IAI3E,GAFAE,EAAeF,EAAWD,EAEtBG,IAAiBD,EAEnB,OAAKxH,IACH9G,EAAYpB,EAAM,KAAK,cAAe,OAAQ,CAAC,EAC/CoB,EAAM,OAAUf,EAChBe,EAAM,QAAUpB,EAAM,IAAI,MAAMnC,EAAK2R,CAAU,EAC5C,QAAQ,MAAO,GAAG,EAClB,QAAQ,WAAY,IAAI,GAE7BxP,EAAM,IAAMyP,EACL,GAITzP,EAAM,UAAU2P,GAAgBH,CACjC,CAGD,OAAAxP,EAAM,iBAAmB,GAEpBkI,IAAQlI,EAAM,SAAWK,GAC9BL,EAAM,KAAO0P,EACN,EACT,QCvDAE,GAAA,SAA0B,SAAuB5P,EAAOkI,EAAQ,CAC9D,IAAItP,EAAGiX,EAASzO,EAAOa,EAAKpJ,EACxBoH,EAAQD,EAAM,IACdK,EAASL,EAAM,IAAI,WAAWC,CAAK,EAUvC,GARIiI,GAEA7H,IAAW,MAEfwP,EAAU7P,EAAM,WAAWA,EAAM,IAAK,EAAI,EAC1CiC,EAAM4N,EAAQ,OACdhX,EAAK,OAAO,aAAawH,CAAM,EAE3B4B,EAAM,GAAK,MAAO,GAQtB,IANIA,EAAM,IACRb,EAAgBpB,EAAM,KAAK,OAAQ,GAAI,CAAC,EACxCoB,EAAM,QAAUvI,EAChBoJ,KAGGrJ,EAAI,EAAGA,EAAIqJ,EAAKrJ,GAAK,EACxBwI,EAAgBpB,EAAM,KAAK,OAAQ,GAAI,CAAC,EACxCoB,EAAM,QAAUvI,EAAKA,EAErBmH,EAAM,WAAW,KAAK,CACpB,OAAQK,EACR,OAAQ,EACR,MAAQL,EAAM,OAAO,OAAS,EAC9B,IAAQ,GACR,KAAQ6P,EAAQ,SAChB,MAAQA,EAAQ,SACtB,CAAK,EAGH,OAAA7P,EAAM,KAAO6P,EAAQ,OAEd,EACT,EAGA,SAASC,GAAY9P,EAAO+P,EAAY,CACtC,IAAInX,EAAGsD,EACH8T,EACAC,EACA7O,EACA8O,EAAc,CAAE,EAChB1P,EAAMuP,EAAW,OAErB,IAAKnX,EAAI,EAAGA,EAAI4H,EAAK5H,IACnBoX,EAAaD,EAAWnX,GAEpBoX,EAAW,SAAW,KAItBA,EAAW,MAAQ,KAIvBC,EAAWF,EAAWC,EAAW,KAEjC5O,EAAgBpB,EAAM,OAAOgQ,EAAW,OACxC5O,EAAM,KAAU,SAChBA,EAAM,IAAU,IAChBA,EAAM,QAAU,EAChBA,EAAM,OAAU,KAChBA,EAAM,QAAU,GAEhBA,EAAgBpB,EAAM,OAAOiQ,EAAS,OACtC7O,EAAM,KAAU,UAChBA,EAAM,IAAU,IAChBA,EAAM,QAAU,GAChBA,EAAM,OAAU,KAChBA,EAAM,QAAU,GAEZpB,EAAM,OAAOiQ,EAAS,MAAQ,GAAG,OAAS,QAC1CjQ,EAAM,OAAOiQ,EAAS,MAAQ,GAAG,UAAY,KAE/CC,EAAY,KAAKD,EAAS,MAAQ,CAAC,GAUvC,KAAOC,EAAY,QAAQ,CAIzB,IAHAtX,EAAIsX,EAAY,MAChBhU,EAAItD,EAAI,EAEDsD,EAAI8D,EAAM,OAAO,QAAUA,EAAM,OAAO9D,GAAG,OAAS,WACzDA,IAGFA,IAEItD,IAAMsD,IACRkF,EAAQpB,EAAM,OAAO9D,GACrB8D,EAAM,OAAO9D,GAAK8D,EAAM,OAAOpH,GAC/BoH,EAAM,OAAOpH,GAAKwI,EAErB,CACH,CAKAwO,GAAA,YAA6B,SAAuB5P,EAAO,CACzD,IAAIwG,EACA2J,EAAcnQ,EAAM,YACpBQ,EAAMR,EAAM,YAAY,OAI5B,IAFA8P,GAAY9P,EAAOA,EAAM,UAAU,EAE9BwG,EAAO,EAAGA,EAAOhG,EAAKgG,IACrB2J,EAAY3J,IAAS2J,EAAY3J,GAAM,YACzCsJ,GAAY9P,EAAOmQ,EAAY3J,GAAM,UAAU,CAGrD,YC1HA4J,GAAA,SAA0B,SAAkBpQ,EAAOkI,EAAQ,CACzD,IAAItP,EAAGiX,EAASzO,EACZnB,EAAQD,EAAM,IACdK,EAASL,EAAM,IAAI,WAAWC,CAAK,EAIvC,GAFIiI,GAEA7H,IAAW,IAAgBA,IAAW,GAAgB,MAAO,GAIjE,IAFAwP,EAAU7P,EAAM,WAAWA,EAAM,IAAKK,IAAW,EAAI,EAEhDzH,EAAI,EAAGA,EAAIiX,EAAQ,OAAQjX,IAC9BwI,EAAgBpB,EAAM,KAAK,OAAQ,GAAI,CAAC,EACxCoB,EAAM,QAAU,OAAO,aAAaf,CAAM,EAE1CL,EAAM,WAAW,KAAK,CAGpB,OAAQK,EAIR,OAAQwP,EAAQ,OAIhB,MAAQ7P,EAAM,OAAO,OAAS,EAK9B,IAAQ,GAKR,KAAQ6P,EAAQ,SAChB,MAAQA,EAAQ,SACtB,CAAK,EAGH,OAAA7P,EAAM,KAAO6P,EAAQ,OAEd,EACT,EAGA,SAASC,GAAY9P,EAAO+P,EAAY,CACtC,IAAInX,EACAoX,EACAC,EACA7O,EACAvI,EACAwX,EACA7P,EAAMuP,EAAW,OAErB,IAAKnX,EAAI4H,EAAM,EAAG5H,GAAK,EAAGA,IACxBoX,EAAaD,EAAWnX,GAEpB,EAAAoX,EAAW,SAAW,IAAeA,EAAW,SAAW,KAK3DA,EAAW,MAAQ,KAIvBC,EAAWF,EAAWC,EAAW,KAOjCK,EAAWzX,EAAI,GACJmX,EAAWnX,EAAI,GAAG,MAAQoX,EAAW,IAAM,GAE3CD,EAAWnX,EAAI,GAAG,SAAWoX,EAAW,QACxCD,EAAWnX,EAAI,GAAG,QAAUoX,EAAW,MAAQ,GAE/CD,EAAWC,EAAW,IAAM,GAAG,QAAUC,EAAS,MAAQ,EAErEpX,EAAK,OAAO,aAAamX,EAAW,MAAM,EAE1C5O,EAAgBpB,EAAM,OAAOgQ,EAAW,OACxC5O,EAAM,KAAUiP,EAAW,cAAgB,UAC3CjP,EAAM,IAAUiP,EAAW,SAAW,KACtCjP,EAAM,QAAU,EAChBA,EAAM,OAAUiP,EAAWxX,EAAKA,EAAKA,EACrCuI,EAAM,QAAU,GAEhBA,EAAgBpB,EAAM,OAAOiQ,EAAS,OACtC7O,EAAM,KAAUiP,EAAW,eAAiB,WAC5CjP,EAAM,IAAUiP,EAAW,SAAW,KACtCjP,EAAM,QAAU,GAChBA,EAAM,OAAUiP,EAAWxX,EAAKA,EAAKA,EACrCuI,EAAM,QAAU,GAEZiP,IACFrQ,EAAM,OAAO+P,EAAWnX,EAAI,GAAG,OAAO,QAAU,GAChDoH,EAAM,OAAO+P,EAAWC,EAAW,IAAM,GAAG,OAAO,QAAU,GAC7DpX,KAGN,CAKAwX,GAAA,YAA6B,SAAkBpQ,EAAO,CACpD,IAAIwG,EACA2J,EAAcnQ,EAAM,YACpBQ,EAAMR,EAAM,YAAY,OAI5B,IAFA8P,GAAY9P,EAAOA,EAAM,UAAU,EAE9BwG,EAAO,EAAGA,EAAOhG,EAAKgG,IACrB2J,EAAY3J,IAAS2J,EAAY3J,GAAM,YACzCsJ,GAAY9P,EAAOmQ,EAAY3J,GAAM,UAAU,CAGrD,EC7HA,IAAI3G,GAAuBtH,EAA2B,mBAClDiH,GAAuBjH,EAA2B,QAGtDsW,GAAiB,SAAc7O,EAAOkI,EAAQ,CAC5C,IAAIrB,EACA1N,EACAuS,EACAnL,EACA+P,EACAzS,EACA8N,EACA4E,EACAnP,EACAqK,EAAO,GACPG,EAAQ,GACRnL,EAAST,EAAM,IACfQ,EAAMR,EAAM,OACZC,EAAQD,EAAM,IACdwQ,EAAiB,GAQrB,GANIxQ,EAAM,IAAI,WAAWA,EAAM,GAAG,IAAM,KAExCsQ,EAAatQ,EAAM,IAAM,EACzBO,EAAWP,EAAM,GAAG,QAAQ,eAAeA,EAAOA,EAAM,IAAK,EAAI,EAG7DO,EAAW,GAAK,MAAO,GAG3B,GADA1C,EAAM0C,EAAW,EACb1C,EAAM2C,GAAOR,EAAM,IAAI,WAAWnC,CAAG,IAAM,GAAa,CAW1D,IALA2S,EAAiB,GAIjB3S,IACOA,EAAM2C,IACXrH,EAAO6G,EAAM,IAAI,WAAWnC,CAAG,EAC3B,GAAC2B,GAAQrG,CAAI,GAAKA,IAAS,KAFf0E,IAEhB,CAEF,GAAIA,GAAO2C,EAAO,MAAO,GAMzB,GAFAP,EAAQpC,EACR8N,EAAM3L,EAAM,GAAG,QAAQ,qBAAqBA,EAAM,IAAKnC,EAAKmC,EAAM,MAAM,EACpE2L,EAAI,GAAI,CAWV,IAVAF,EAAOzL,EAAM,GAAG,cAAc2L,EAAI,GAAG,EACjC3L,EAAM,GAAG,aAAayL,CAAI,EAC5B5N,EAAM8N,EAAI,IAEVF,EAAO,GAKTxL,EAAQpC,EACDA,EAAM2C,IACXrH,EAAO6G,EAAM,IAAI,WAAWnC,CAAG,EAC3B,GAAC2B,GAAQrG,CAAI,GAAKA,IAAS,KAFf0E,IAEhB,CAMF,GADA8N,EAAM3L,EAAM,GAAG,QAAQ,eAAeA,EAAM,IAAKnC,EAAKmC,EAAM,MAAM,EAC9DnC,EAAM2C,GAAOP,IAAUpC,GAAO8N,EAAI,GAMpC,IALAC,EAAQD,EAAI,IACZ9N,EAAM8N,EAAI,IAIH9N,EAAM2C,IACXrH,EAAO6G,EAAM,IAAI,WAAWnC,CAAG,EAC3B,GAAC2B,GAAQrG,CAAI,GAAKA,IAAS,KAFf0E,IAEhB,CAGL,EAEGA,GAAO2C,GAAOR,EAAM,IAAI,WAAWnC,CAAG,IAAM,MAE9C2S,EAAiB,IAEnB3S,GACD,CAED,GAAI2S,EAAgB,CAIlB,GAAI,OAAOxQ,EAAM,IAAI,WAAe,IAAe,MAAO,GAmB1D,GAjBInC,EAAM2C,GAAOR,EAAM,IAAI,WAAWnC,CAAG,IAAM,IAC7CoC,EAAQpC,EAAM,EACdA,EAAMmC,EAAM,GAAG,QAAQ,eAAeA,EAAOnC,CAAG,EAC5CA,GAAO,EACT6N,EAAQ1L,EAAM,IAAI,MAAMC,EAAOpC,GAAK,EAEpCA,EAAM0C,EAAW,GAGnB1C,EAAM0C,EAAW,EAKdmL,IAASA,EAAQ1L,EAAM,IAAI,MAAMsQ,EAAY/P,CAAQ,GAE1DgQ,EAAMvQ,EAAM,IAAI,WAAWH,GAAmB6L,CAAK,GAC/C,CAAC6E,EACH,OAAAvQ,EAAM,IAAMS,EACL,GAETgL,EAAO8E,EAAI,KACX3E,EAAQ2E,EAAI,KACb,CAMD,OAAKrI,IACHlI,EAAM,IAAMsQ,EACZtQ,EAAM,OAASO,EAEfa,EAAepB,EAAM,KAAK,YAAa,IAAK,CAAC,EAC7CoB,EAAM,MAASyF,EAAQ,CAAE,CAAE,OAAQ4E,CAAI,GACnCG,GACF/E,EAAM,KAAK,CAAE,QAAS+E,CAAO,CAAA,EAG/B5L,EAAM,YACNA,EAAM,GAAG,OAAO,SAASA,CAAK,EAC9BA,EAAM,YAENoB,EAAepB,EAAM,KAAK,aAAc,IAAK,EAAE,GAGjDA,EAAM,IAAMnC,EACZmC,EAAM,OAASQ,EACR,EACT,ECjJIX,GAAuBtH,EAA2B,mBAClDiH,GAAuBjH,EAA2B,QAGtDkY,GAAiB,SAAezQ,EAAOkI,EAAQ,CAC7C,IAAIrB,EACA1N,EACAgU,EACAzB,EACAnL,EACA+P,EACAzS,EACA0S,EACA5E,EACAC,EACAxK,EACAL,EACAd,EACAwL,EAAO,GACPhL,EAAST,EAAM,IACfQ,EAAMR,EAAM,OAShB,GAPIA,EAAM,IAAI,WAAWA,EAAM,GAAG,IAAM,IACpCA,EAAM,IAAI,WAAWA,EAAM,IAAM,CAAC,IAAM,KAE5CsQ,EAAatQ,EAAM,IAAM,EACzBO,EAAWP,EAAM,GAAG,QAAQ,eAAeA,EAAOA,EAAM,IAAM,EAAG,EAAK,EAGlEO,EAAW,GAAK,MAAO,GAG3B,GADA1C,EAAM0C,EAAW,EACb1C,EAAM2C,GAAOR,EAAM,IAAI,WAAWnC,CAAG,IAAM,GAAa,CAQ1D,IADAA,IACOA,EAAM2C,IACXrH,EAAO6G,EAAM,IAAI,WAAWnC,CAAG,EAC3B,GAAC2B,GAAQrG,CAAI,GAAKA,IAAS,KAFf0E,IAEhB,CAEF,GAAIA,GAAO2C,EAAO,MAAO,GAkBzB,IAdAP,EAAQpC,EACR8N,EAAM3L,EAAM,GAAG,QAAQ,qBAAqBA,EAAM,IAAKnC,EAAKmC,EAAM,MAAM,EACpE2L,EAAI,KACNF,EAAOzL,EAAM,GAAG,cAAc2L,EAAI,GAAG,EACjC3L,EAAM,GAAG,aAAayL,CAAI,EAC5B5N,EAAM8N,EAAI,IAEVF,EAAO,IAMXxL,EAAQpC,EACDA,EAAM2C,IACXrH,EAAO6G,EAAM,IAAI,WAAWnC,CAAG,EAC3B,GAAC2B,GAAQrG,CAAI,GAAKA,IAAS,KAFf0E,IAEhB,CAMF,GADA8N,EAAM3L,EAAM,GAAG,QAAQ,eAAeA,EAAM,IAAKnC,EAAKmC,EAAM,MAAM,EAC9DnC,EAAM2C,GAAOP,IAAUpC,GAAO8N,EAAI,GAMpC,IALAC,EAAQD,EAAI,IACZ9N,EAAM8N,EAAI,IAIH9N,EAAM2C,IACXrH,EAAO6G,EAAM,IAAI,WAAWnC,CAAG,EAC3B,GAAC2B,GAAQrG,CAAI,GAAKA,IAAS,KAFf0E,IAEhB,MAGF+N,EAAQ,GAGV,GAAI/N,GAAO2C,GAAOR,EAAM,IAAI,WAAWnC,CAAG,IAAM,GAC9C,OAAAmC,EAAM,IAAMS,EACL,GAET5C,GACJ,KAAS,CAIL,GAAI,OAAOmC,EAAM,IAAI,WAAe,IAAe,MAAO,GAmB1D,GAjBInC,EAAM2C,GAAOR,EAAM,IAAI,WAAWnC,CAAG,IAAM,IAC7CoC,EAAQpC,EAAM,EACdA,EAAMmC,EAAM,GAAG,QAAQ,eAAeA,EAAOnC,CAAG,EAC5CA,GAAO,EACT6N,EAAQ1L,EAAM,IAAI,MAAMC,EAAOpC,GAAK,EAEpCA,EAAM0C,EAAW,GAGnB1C,EAAM0C,EAAW,EAKdmL,IAASA,EAAQ1L,EAAM,IAAI,MAAMsQ,EAAY/P,CAAQ,GAE1DgQ,EAAMvQ,EAAM,IAAI,WAAWH,GAAmB6L,CAAK,GAC/C,CAAC6E,EACH,OAAAvQ,EAAM,IAAMS,EACL,GAETgL,EAAO8E,EAAI,KACX3E,EAAQ2E,EAAI,KACb,CAMD,OAAKrI,IACHiF,EAAUnN,EAAM,IAAI,MAAMsQ,EAAY/P,CAAQ,EAE9CP,EAAM,GAAG,OAAO,MACdmN,EACAnN,EAAM,GACNA,EAAM,IACNe,EAAS,CAAE,CACjB,EAEIK,EAAiBpB,EAAM,KAAK,QAAS,MAAO,CAAC,EAC7CoB,EAAM,MAAWyF,EAAQ,CAAE,CAAE,MAAO4E,CAAI,EAAI,CAAE,MAAO,EAAE,GACvDrK,EAAM,SAAWL,EACjBK,EAAM,QAAW+L,EAEbvB,GACF/E,EAAM,KAAK,CAAE,QAAS+E,CAAO,CAAA,GAIjC5L,EAAM,IAAMnC,EACZmC,EAAM,OAASQ,EACR,EACT,ECjJIkQ,GAAc,0IACdC,GAAc,sDAGlBC,GAAiB,SAAkB5Q,EAAOkI,EAAQ,CAChD,IAAIhO,EAAKgK,EAAS9C,EAAOvI,EAAIoH,EAAOO,EAChC3C,EAAMmC,EAAM,IAEhB,GAAIA,EAAM,IAAI,WAAWnC,CAAG,IAAM,GAAe,MAAO,GAKxD,IAHAoC,EAAQD,EAAM,IACdQ,EAAMR,EAAM,SAEH,CAKP,GAJI,EAAEnC,GAAO2C,IAEb3H,EAAKmH,EAAM,IAAI,WAAWnC,CAAG,EAEzBhF,IAAO,IAAc,MAAO,GAChC,GAAIA,IAAO,GAAc,KAC1B,CAID,OAFAqB,EAAM8F,EAAM,IAAI,MAAMC,EAAQ,EAAGpC,CAAG,EAEhC8S,GAAY,KAAKzW,CAAG,GACtBgK,EAAUlE,EAAM,GAAG,cAAc9F,CAAG,EAC/B8F,EAAM,GAAG,aAAakE,CAAO,GAE7BgE,IACH9G,EAAgBpB,EAAM,KAAK,YAAa,IAAK,CAAC,EAC9CoB,EAAM,MAAU,CAAE,CAAE,OAAQ8C,CAAS,CAAA,EACrC9C,EAAM,OAAU,WAChBA,EAAM,KAAU,OAEhBA,EAAgBpB,EAAM,KAAK,OAAQ,GAAI,CAAC,EACxCoB,EAAM,QAAUpB,EAAM,GAAG,kBAAkB9F,CAAG,EAE9CkH,EAAgBpB,EAAM,KAAK,aAAc,IAAK,EAAE,EAChDoB,EAAM,OAAU,WAChBA,EAAM,KAAU,QAGlBpB,EAAM,KAAO9F,EAAI,OAAS,EACnB,IAjBuC,IAoB5CwW,GAAS,KAAKxW,CAAG,GACnBgK,EAAUlE,EAAM,GAAG,cAAc,UAAY9F,CAAG,EAC3C8F,EAAM,GAAG,aAAakE,CAAO,GAE7BgE,IACH9G,EAAgBpB,EAAM,KAAK,YAAa,IAAK,CAAC,EAC9CoB,EAAM,MAAU,CAAE,CAAE,OAAQ8C,CAAS,CAAA,EACrC9C,EAAM,OAAU,WAChBA,EAAM,KAAU,OAEhBA,EAAgBpB,EAAM,KAAK,OAAQ,GAAI,CAAC,EACxCoB,EAAM,QAAUpB,EAAM,GAAG,kBAAkB9F,CAAG,EAE9CkH,EAAgBpB,EAAM,KAAK,aAAc,IAAK,EAAE,EAChDoB,EAAM,OAAU,WAChBA,EAAM,KAAU,QAGlBpB,EAAM,KAAO9F,EAAI,OAAS,EACnB,IAjBuC,IAoBzC,EACT,ECtEIwS,GAAcnU,GAA6B,YAG/C,SAASkL,GAAW5E,EAAK,CACvB,MAAO,YAAY,KAAKA,CAAG,CAC7B,CACA,SAAS6E,GAAY7E,EAAK,CACxB,MAAO,aAAa,KAAKA,CAAG,CAC9B,CAGA,SAASgS,GAAShY,EAAI,CAEpB,IAAIiY,EAAKjY,EAAK,GACd,OAAQiY,GAAM,IAAiBA,GAAM,GACvC,CAGA,IAAAC,GAAiB,SAAqB/Q,EAAOkI,EAAQ,CACnD,IAAIrP,EAAI6F,EAAO8B,EAAKY,EAChBvD,EAAMmC,EAAM,IAqBhB,MAnBI,CAACA,EAAM,GAAG,QAAQ,OAGtBQ,EAAMR,EAAM,OACRA,EAAM,IAAI,WAAWnC,CAAG,IAAM,IAC9BA,EAAM,GAAK2C,KAKf3H,EAAKmH,EAAM,IAAI,WAAWnC,EAAM,CAAC,EAC7BhF,IAAO,IACPA,IAAO,IACPA,IAAO,IACP,CAACgY,GAAShY,CAAE,KAIhB6F,EAAQsB,EAAM,IAAI,MAAMnC,CAAG,EAAE,MAAM6O,EAAW,EAC1C,CAAChO,GAAgB,IAEhBwJ,IACH9G,EAAgBpB,EAAM,KAAK,cAAe,GAAI,CAAC,EAC/CoB,EAAM,QAAUpB,EAAM,IAAI,MAAMnC,EAAKA,EAAMa,EAAM,GAAG,MAAM,EAEtD+E,GAAWrC,EAAM,OAAO,GAAIpB,EAAM,YAClC0D,GAAYtC,EAAM,OAAO,GAAGpB,EAAM,aAExCA,EAAM,KAAOtB,EAAM,GAAG,OACf,GACT,ECrDIF,GAAoBjG,GACpB8E,GAAoBT,EAA2B,IAC/CmB,GAAoBnB,EAA2B,kBAC/CqB,GAAoBrB,EAA2B,cAG/CoU,GAAa,uCACbC,GAAa,4BAGjBjS,GAAiB,SAAgBgB,EAAOkI,EAAQ,CAC9C,IAAIrP,EAAIM,EAAMuF,EAAO0C,EAAOvD,EAAMmC,EAAM,IAAKQ,EAAMR,EAAM,OAIzD,GAFIA,EAAM,IAAI,WAAWnC,CAAG,IAAM,IAE9BA,EAAM,GAAK2C,EAAK,MAAO,GAI3B,GAFA3H,EAAKmH,EAAM,IAAI,WAAWnC,EAAM,CAAC,EAE7BhF,IAAO,IAET,GADA6F,EAAQsB,EAAM,IAAI,MAAMnC,CAAG,EAAE,MAAMmT,EAAU,EACzCtS,EACF,OAAKwJ,IACH/O,EAAOuF,EAAM,GAAG,GAAG,YAAa,IAAK,IAAM,SAASA,EAAM,GAAG,MAAM,CAAC,EAAG,EAAE,EAAI,SAASA,EAAM,GAAI,EAAE,EAElG0C,EAAgBpB,EAAM,KAAK,eAAgB,GAAI,CAAC,EAChDoB,EAAM,QAAUrD,GAAkB5E,CAAI,EAAI8E,GAAc9E,CAAI,EAAI8E,GAAc,KAAM,EACpFmD,EAAM,OAAU1C,EAAM,GACtB0C,EAAM,KAAU,UAElBpB,EAAM,KAAOtB,EAAM,GAAG,OACf,WAGTA,EAAQsB,EAAM,IAAI,MAAMnC,CAAG,EAAE,MAAMoT,EAAQ,EACvCvS,GACErB,GAAImB,GAAUE,EAAM,EAAE,EACxB,OAAKwJ,IACH9G,EAAgBpB,EAAM,KAAK,eAAgB,GAAI,CAAC,EAChDoB,EAAM,QAAU5C,GAASE,EAAM,IAC/B0C,EAAM,OAAU1C,EAAM,GACtB0C,EAAM,KAAU,UAElBpB,EAAM,KAAOtB,EAAM,GAAG,OACf,GAKb,MAAO,EACT,ECjDA,SAASwS,GAAkBlR,EAAO+P,EAAY,CAC5C,IAAIoB,EAAWC,EAAWC,EAAQC,EAAQC,EAAcC,EACpDC,EAAYC,EACZC,EAAgB,CAAE,EAClBnR,EAAMuP,EAAW,OAErB,GAAKvP,EAGL,KAAIoR,EAAY,EACZC,EAAe,GACfC,EAAQ,CAAA,EAEZ,IAAKX,EAAY,EAAGA,EAAY3Q,EAAK2Q,IAqBnC,GApBAE,EAAStB,EAAWoB,GAEpBW,EAAM,KAAK,CAAC,GAMR/B,EAAW6B,GAAW,SAAWP,EAAO,QAAUQ,IAAiBR,EAAO,MAAQ,KACpFO,EAAYT,GAGdU,EAAeR,EAAO,MAMtBA,EAAO,OAASA,EAAO,QAAU,EAE7B,EAACA,EAAO,MAgBZ,KAVKM,EAAc,eAAeN,EAAO,MAAM,IAC7CM,EAAcN,EAAO,QAAU,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,GAGzDE,EAAeI,EAAcN,EAAO,SAASA,EAAO,KAAO,EAAI,GAAMA,EAAO,OAAS,GAErFD,EAAYQ,EAAYE,EAAMF,GAAa,EAE3CJ,EAAkBJ,EAEXA,EAAYG,EAAcH,GAAaU,EAAMV,GAAa,EAG/D,GAFAE,EAASvB,EAAWqB,GAEhBE,EAAO,SAAWD,EAAO,QAEzBC,EAAO,MAAQA,EAAO,IAAM,IAE9BG,EAAa,IASTH,EAAO,OAASD,EAAO,QACpBC,EAAO,OAASD,EAAO,QAAU,IAAM,IACtCC,EAAO,OAAS,IAAM,GAAKD,EAAO,OAAS,IAAM,KACnDI,EAAa,IAKf,CAACA,GAAY,CAKfC,EAAWN,EAAY,GAAK,CAACrB,EAAWqB,EAAY,GAAG,KACrDU,EAAMV,EAAY,GAAK,EACvB,EAEFU,EAAMX,GAAaA,EAAYC,EAAYM,EAC3CI,EAAMV,GAAaM,EAEnBL,EAAO,KAAQ,GACfC,EAAO,IAAQH,EACfG,EAAO,MAAQ,GACfE,EAAkB,GAGlBK,EAAe,GACf,KACD,CAIDL,IAAoB,KAQtBG,EAAcN,EAAO,SAASA,EAAO,KAAO,EAAI,IAAOA,EAAO,QAAU,GAAK,GAAMG,IAGzF,CAGA,IAAAO,GAAiB,SAAoB/R,EAAO,CAC1C,IAAIwG,EACA2J,EAAcnQ,EAAM,YACpBQ,EAAMR,EAAM,YAAY,OAI5B,IAFAkR,GAAkBlR,EAAOA,EAAM,UAAU,EAEpCwG,EAAO,EAAGA,EAAOhG,EAAKgG,IACrB2J,EAAY3J,IAAS2J,EAAY3J,GAAM,YACzC0K,GAAkBlR,EAAOmQ,EAAY3J,GAAM,UAAU,CAG3D,ECtHAwL,GAAiB,SAAwBhS,EAAO,CAC9C,IAAIwG,EAAMC,EACNtG,EAAQ,EACRY,EAASf,EAAM,OACfQ,EAAMR,EAAM,OAAO,OAEvB,IAAKwG,EAAOC,EAAO,EAAGD,EAAOhG,EAAKgG,IAG5BzF,EAAOyF,GAAM,QAAU,GAAGrG,IAC9BY,EAAOyF,GAAM,MAAQrG,EACjBY,EAAOyF,GAAM,QAAU,GAAGrG,IAE1BY,EAAOyF,GAAM,OAAS,QACtBA,EAAO,EAAIhG,GACXO,EAAOyF,EAAO,GAAG,OAAS,OAG5BzF,EAAOyF,EAAO,GAAG,QAAUzF,EAAOyF,GAAM,QAAUzF,EAAOyF,EAAO,GAAG,SAE/DA,IAASC,IAAQ1F,EAAO0F,GAAQ1F,EAAOyF,IAE3CC,KAIAD,IAASC,IACX1F,EAAO,OAAS0F,EAEpB,ECnCIC,GAAiBnO,GACjBkH,GAAiB7C,EAA2B,aAC5C+C,GAAiB/C,EAA2B,YAC5CgD,GAAiBhD,EAA2B,eAGhD,SAASqV,EAAYrU,EAAKqJ,EAAI/F,EAAKsN,EAAW,CAC5C,KAAK,IAAM5Q,EACX,KAAK,IAAMsD,EACX,KAAK,GAAK+F,EACV,KAAK,OAASuH,EACd,KAAK,YAAc,MAAMA,EAAU,MAAM,EAEzC,KAAK,IAAM,EACX,KAAK,OAAS,KAAK,IAAI,OACvB,KAAK,MAAQ,EACb,KAAK,QAAU,GACf,KAAK,aAAe,EAIpB,KAAK,MAAQ,GAGb,KAAK,WAAa,GAGlB,KAAK,iBAAmB,GAGxB,KAAK,UAAY,GACjB,KAAK,iBAAmB,GAIxB,KAAK,UAAY,CACnB,CAKAyD,EAAY,UAAU,YAAc,UAAY,CAC9C,IAAI7Q,EAAQ,IAAIsF,GAAM,OAAQ,GAAI,CAAC,EACnC,OAAAtF,EAAM,QAAU,KAAK,QACrBA,EAAM,MAAQ,KAAK,aACnB,KAAK,OAAO,KAAKA,CAAK,EACtB,KAAK,QAAU,GACRA,CACT,EAMA6Q,EAAY,UAAU,KAAO,SAAUlQ,EAAM4E,EAAKC,EAAS,CACrD,KAAK,SACP,KAAK,YAAW,EAGlB,IAAIxF,EAAQ,IAAIsF,GAAM3E,EAAM4E,EAAKC,CAAO,EACpCsL,EAAa,KAEjB,OAAItL,EAAU,IAEZ,KAAK,QACL,KAAK,WAAa,KAAK,iBAAiB,IAAG,GAG7CxF,EAAM,MAAQ,KAAK,MAEfwF,EAAU,IAEZ,KAAK,QACL,KAAK,iBAAiB,KAAK,KAAK,UAAU,EAC1C,KAAK,WAAa,GAClBsL,EAAa,CAAE,WAAY,KAAK,UAAU,GAG5C,KAAK,aAAe,KAAK,MACzB,KAAK,OAAO,KAAK9Q,CAAK,EACtB,KAAK,YAAY,KAAK8Q,CAAU,EACzB9Q,CACT,EASA6Q,EAAY,UAAU,WAAa,SAAUhS,EAAOkS,EAAc,CAChE,IAAItU,EAAMoC,EAAOwF,EAAUC,EAAU0M,EAAOC,EAAUC,EAClDzM,EAAkBF,EAClBG,EAAkBF,EAClB2M,EAAgB,GAChBC,EAAiB,GACjBhS,EAAM,KAAK,OACXH,EAAS,KAAK,IAAI,WAAWJ,CAAK,EAKtC,IAFAwF,EAAWxF,EAAQ,EAAI,KAAK,IAAI,WAAWA,EAAQ,CAAC,EAAI,GAEjDpC,EAAM2C,GAAO,KAAK,IAAI,WAAW3C,CAAG,IAAMwC,GAAUxC,IAE3D,OAAAuU,EAAQvU,EAAMoC,EAGdyF,EAAW7H,EAAM2C,EAAM,KAAK,IAAI,WAAW3C,CAAG,EAAI,GAElD8H,EAAkB/F,GAAe6F,CAAQ,GAAK9F,GAAY,OAAO,aAAa8F,CAAQ,CAAC,EACvFG,EAAkBhG,GAAe8F,CAAQ,GAAK/F,GAAY,OAAO,aAAa+F,CAAQ,CAAC,EAEvFG,EAAmBpG,GAAagG,CAAQ,EACxCK,EAAmBrG,GAAaiG,CAAQ,EAEpCI,EACFyM,EAAgB,GACP3M,IACHC,GAAoBF,IACxB4M,EAAgB,KAIhB1M,EACF2M,EAAiB,GACR7M,IACHG,GAAoBF,IACxB4M,EAAiB,KAIhBL,GAIHE,EAAYE,EACZD,EAAYE,IAJZH,EAAYE,IAAmB,CAACC,GAAkB7M,GAClD2M,EAAYE,IAAmB,CAACD,GAAkB3M,IAM7C,CACL,SAAWyM,EACX,UAAWC,EACX,OAAWF,CACf,CACA,EAIAH,EAAY,UAAU,MAAQvL,GAG9B,IAAA+L,GAAiBR,ECrJb9P,GAAkB5J,GAMlB4O,GAAS,CACX,CAAE,OAAmBvK,EAAgC,EACrD,CAAE,UAAmBC,EAAmC,EACxD,CAAE,UAAmBC,EAAmC,EACxD,CAAE,SAAmBE,EAAkC,EACvD,CAAE,YAAmBoK,EAAqC,EAC1D,CAAE,gBAAmBC,GAAwC,QAAU,EACvE,CAAE,WAAmBC,GAAmC,QAAU,EAClE,CAAE,OAAmBE,EAAgC,EACrD,CAAE,QAAmByG,EAAiC,EACtD,CAAE,WAAmBC,EAAoC,EACzD,CAAE,cAAmBC,EAAuC,EAC5D,CAAE,SAAmBM,EAAkC,CACzD,EAOIiE,GAAU,CACZ,CAAE,gBAAmBC,EAAyC,EAC9D,CAAE,gBAAmBtL,GAAwC,WAAa,EAC1E,CAAE,WAAmBC,GAAmC,WAAa,EAGrE,CAAE,iBAAmBsL,EAA0C,CACjE,EAMA,SAASC,IAAe,CACtB,IAAIja,EASJ,IAFA,KAAK,MAAQ,IAAIuJ,GAEZvJ,EAAI,EAAGA,EAAIuO,GAAO,OAAQvO,IAC7B,KAAK,MAAM,KAAKuO,GAAOvO,GAAG,GAAIuO,GAAOvO,GAAG,EAAE,EAW5C,IAFA,KAAK,OAAS,IAAIuJ,GAEbvJ,EAAI,EAAGA,EAAI8Z,GAAQ,OAAQ9Z,IAC9B,KAAK,OAAO,KAAK8Z,GAAQ9Z,GAAG,GAAI8Z,GAAQ9Z,GAAG,EAAE,CAEjD,CAMAia,GAAa,UAAU,UAAY,SAAU7S,EAAO,CAClD,IAAIqO,EAAIzV,EAAGiF,EAAMmC,EAAM,IACnBgC,EAAQ,KAAK,MAAM,SAAS,EAAE,EAC9BC,EAAMD,EAAM,OACZuM,EAAavO,EAAM,GAAG,QAAQ,WAC9BlH,EAAQkH,EAAM,MAGlB,GAAI,OAAOlH,EAAM+E,GAAS,IAAa,CACrCmC,EAAM,IAAMlH,EAAM+E,GAClB,MACD,CAED,GAAImC,EAAM,MAAQuO,EAChB,IAAK3V,EAAI,EAAGA,EAAIqJ,IAKdjC,EAAM,QACNqO,EAAKrM,EAAMpJ,GAAGoH,EAAO,EAAI,EACzBA,EAAM,QAEF,CAAAqO,GATezV,IASnB,MAcFoH,EAAM,IAAMA,EAAM,OAGfqO,GAAMrO,EAAM,MACjBlH,EAAM+E,GAAOmC,EAAM,GACrB,EAKA6S,GAAa,UAAU,SAAW,SAAU7S,EAAO,CAOjD,QANIqO,EAAIzV,EACJoJ,EAAQ,KAAK,MAAM,SAAS,EAAE,EAC9BC,EAAMD,EAAM,OACZ0L,EAAM1N,EAAM,OACZuO,EAAavO,EAAM,GAAG,QAAQ,WAE3BA,EAAM,IAAM0N,GAAK,CAQtB,GAAI1N,EAAM,MAAQuO,EAChB,IAAK3V,EAAI,EAAGA,EAAIqJ,IACdoM,EAAKrM,EAAMpJ,GAAGoH,EAAO,EAAK,EACtB,CAAAqO,GAFezV,IAEnB,CAIJ,GAAIyV,EAAI,CACN,GAAIrO,EAAM,KAAO0N,EAAO,MACxB,QACD,CAED1N,EAAM,SAAWA,EAAM,IAAIA,EAAM,MAClC,CAEGA,EAAM,SACRA,EAAM,YAAW,CAErB,EAQA6S,GAAa,UAAU,MAAQ,SAAUhU,EAAKoI,EAAI/F,EAAKsN,EAAW,CAChE,IAAI5V,EAAGoJ,EAAOC,EACVjC,EAAQ,IAAI,KAAK,MAAMnB,EAAKoI,EAAI/F,EAAKsN,CAAS,EAOlD,IALA,KAAK,SAASxO,CAAK,EAEnBgC,EAAQ,KAAK,OAAO,SAAS,EAAE,EAC/BC,EAAMD,EAAM,OAEPpJ,EAAI,EAAGA,EAAIqJ,EAAKrJ,IACnBoJ,EAAMpJ,GAAGoH,CAAK,CAElB,EAGA6S,GAAa,UAAU,MAAQC,GAG/B,IAAAC,GAAiBF,wCCrLHG,GAAG,SAAUC,EAAM,CAC/B,IAAID,EAAK,CAAA,EACTC,EAAOA,GAAQ,GAGfD,EAAG,QAAUza,GAAwC,EAAC,OACtDya,EAAG,OAAUpW,GAAuC,EAAC,OACrDoW,EAAG,MAAUnW,GAAsC,EAAC,OACpDmW,EAAG,MAAUlW,GAAuC,OAGpDkW,EAAG,SAAW,CAAEA,EAAG,MAAOA,EAAG,MAAOA,EAAG,MAAM,EAAG,KAAK,GAAG,EAGxDA,EAAG,QAAU,CAAEA,EAAG,MAAOA,EAAG,MAAQ,EAAC,KAAK,GAAG,EAI7C,IAAIE,EAAkB,QAKtB,OAAAF,EAAG,kBAA0B,SAAWE,EAAkB,IAAMF,EAAG,SAAW,IAAMA,EAAG,QAAU,IAMjGA,EAAG,QAED,yFAGFA,EAAG,SAAc,YAAcA,EAAG,QAAU,uBAE5CA,EAAG,SAED,kFAEFA,EAAG,oBAED,QAAUE,EAAkB,IAAMF,EAAG,SAAW,QACvCC,EAAK,OAAS,WAAa,MAAQ,uBAAyBD,EAAG,SAAW,KAErFA,EAAG,SAED,iBAGcA,EAAG,QAAU,IAAME,EAAkB,oCAC/BF,EAAG,QAAU,wBACbA,EAAG,QAAU,wBACbA,EAAG,QAAU,wBACbA,EAAG,QAAU,wBACbA,EAAG,QAAU,qBAChBA,EAAG,kBAAoB,qCASvBA,EAAG,QAAU,YACvBC,EAAK,OACJ,6BAEA,SAEF,OAASD,EAAG,QAAU,WACbA,EAAG,QAAU,cACVA,EAAG,QAAU,iBACdA,EAAG,QAAU,kBAOhCA,EAAG,eAED,iEAEFA,EAAG,OAED,wBAKFA,EAAG,gBAGD,MACEA,EAAG,OACH,IACAA,EAAG,kBAAoB,UAG3BA,EAAG,WAED,MACEA,EAAG,OACH,OACQA,EAAG,kBAAoB,QAEvBA,EAAG,kBAAoB,QAAUA,EAAG,kBAAoB,UAAYA,EAAG,kBAAoB,KAGvGA,EAAG,SAED,eAIgBA,EAAG,WAAa,SAAWA,EAAG,WAAsB,KAGtEA,EAAG,eAED,MACEA,EAAG,QACL,aACgBA,EAAG,WAAa,qBAGlCA,EAAG,qBAED,YAAcA,EAAG,WAAa,oBAEhCA,EAAG,gBAEDA,EAAG,SAAWA,EAAG,oBAEnBA,EAAG,sBAEDA,EAAG,eAAiBA,EAAG,oBAEzBA,EAAG,qBAEDA,EAAG,SAAWA,EAAG,SAAWA,EAAG,oBAEjCA,EAAG,2BAEDA,EAAG,eAAiBA,EAAG,SAAWA,EAAG,oBAEvCA,EAAG,iCAEDA,EAAG,qBAAuBA,EAAG,SAAWA,EAAG,oBAO7CA,EAAG,oBAED,sDAAwDA,EAAG,SAAW,SAExEA,EAAG,gBAEC,MAAQE,EAAkB,UAAYF,EAAG,QAAU,KAC7CA,EAAG,eAAiB,IAAMA,EAAG,sBAAwB,IAE/DA,EAAG,eAGC,mCAA0CA,EAAG,SAAW,qBAC9BA,EAAG,2BAA6BA,EAAG,SAAW,IAE5EA,EAAG,qBAGC,mCAA0CA,EAAG,SAAW,qBAC9BA,EAAG,iCAAmCA,EAAG,SAAW,IAE3EA,OC7KT,SAASxV,GAAON,EAAkC,CAChD,IAAIO,EAAU,MAAM,UAAU,MAAM,KAAK,UAAW,CAAC,EAErD,OAAAA,EAAQ,QAAQ,SAAUC,EAAQ,CAC3BA,GAEL,OAAO,KAAKA,CAAM,EAAE,QAAQ,SAAUH,EAAK,CACzCL,EAAIK,GAAOG,EAAOH,EACxB,CAAK,CACL,CAAG,EAEML,CACT,CAEA,SAASD,GAAOC,EAAK,CAAE,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAG,CAAI,CACpE,SAASC,GAASD,EAAK,CAAE,OAAOD,GAAOC,CAAG,IAAM,iBAAoB,CACpE,SAASiW,GAASjW,EAAK,CAAE,OAAOD,GAAOC,CAAG,IAAM,iBAAoB,CACpE,SAASkW,GAASlW,EAAK,CAAE,OAAOD,GAAOC,CAAG,IAAM,iBAAoB,CACpE,SAASmW,GAAWnW,EAAK,CAAE,OAAOD,GAAOC,CAAG,IAAM,mBAAsB,CAGxE,SAASqC,GAASV,EAAK,CAAE,OAAOA,EAAI,QAAQ,uBAAwB,MAAM,CAAI,CAK9E,IAAIyU,GAAiB,CACnB,UAAW,GACX,WAAY,GACZ,QAAS,EACX,EAGA,SAASC,GAAarW,EAAK,CACzB,OAAO,OAAO,KAAKA,GAAO,CAAA,CAAE,EAAE,OAAO,SAAUsW,EAAKrX,EAAG,CACrD,OAAOqX,GAAOF,GAAe,eAAenX,CAAC,CAC9C,EAAE,EAAK,CACV,CAGA,IAAIsX,GAAiB,CACnB,QAAS,CACP,SAAU,SAAU1P,EAAMlG,EAAKuE,EAAM,CACnC,IAAIsR,EAAO3P,EAAK,MAAMlG,CAAG,EAQzB,OANKuE,EAAK,GAAG,OAEXA,EAAK,GAAG,KAAQ,IAAI,OAClB,UAAYA,EAAK,GAAG,SAAWA,EAAK,GAAG,qBAAuBA,EAAK,GAAG,SAAU,GAC1F,GAEUA,EAAK,GAAG,KAAK,KAAKsR,CAAI,EACjBA,EAAK,MAAMtR,EAAK,GAAG,IAAI,EAAE,GAAG,OAE9B,CACR,CACF,EACD,SAAW,QACX,OAAW,QACX,KAAW,CACT,SAAU,SAAU2B,EAAMlG,EAAKuE,EAAM,CACnC,IAAIsR,EAAO3P,EAAK,MAAMlG,CAAG,EAkBzB,OAhBKuE,EAAK,GAAG,UAEXA,EAAK,GAAG,QAAW,IAAI,OACrB,IACAA,EAAK,GAAG,SAGR,sBAAwBA,EAAK,GAAG,WAAa,SAAWA,EAAK,GAAG,gBAAkB,IAClFA,EAAK,GAAG,SACRA,EAAK,GAAG,oBACRA,EAAK,GAAG,SAER,GACV,GAGUA,EAAK,GAAG,QAAQ,KAAKsR,CAAI,EAEvB7V,GAAO,GAAKkG,EAAKlG,EAAM,KAAO,KAC9BA,GAAO,GAAKkG,EAAKlG,EAAM,KAAO,IAAc,EACzC6V,EAAK,MAAMtR,EAAK,GAAG,OAAO,EAAE,GAAG,OAEjC,CACR,CACF,EACD,UAAW,CACT,SAAU,SAAU2B,EAAMlG,EAAKuE,EAAM,CACnC,IAAIsR,EAAO3P,EAAK,MAAMlG,CAAG,EAOzB,OALKuE,EAAK,GAAG,SACXA,EAAK,GAAG,OAAU,IAAI,OACpB,IAAMA,EAAK,GAAG,eAAiB,IAAMA,EAAK,GAAG,gBAAiB,GACxE,GAEUA,EAAK,GAAG,OAAO,KAAKsR,CAAI,EACnBA,EAAK,MAAMtR,EAAK,GAAG,MAAM,EAAE,GAAG,OAEhC,CACR,CACF,CACH,EAKIuR,GAAkB,0VAGlBC,GAAe,8EAA8E,MAAM,GAAG,EAM1G,SAASC,GAAezR,EAAM,CAC5BA,EAAK,UAAY,GACjBA,EAAK,eAAmB,EAC1B,CAEA,SAAS0R,GAAgBd,EAAI,CAC3B,OAAO,SAAUjP,EAAMlG,EAAK,CAC1B,IAAI6V,EAAO3P,EAAK,MAAMlG,CAAG,EAEzB,OAAImV,EAAG,KAAKU,CAAI,EACPA,EAAK,MAAMV,CAAE,EAAE,GAAG,OAEpB,CACX,CACA,CAEA,SAASe,IAAmB,CAC1B,OAAO,SAAUrV,EAAO0D,EAAM,CAC5BA,EAAK,UAAU1D,CAAK,CACxB,CACA,CAIA,SAASsV,GAAQ5R,EAAM,CAGrB,IAAI4Q,EAAK5Q,EAAK,GAAK7J,GAAA,EAAoB6J,EAAK,QAAQ,EAGhD6R,EAAO7R,EAAK,SAAS,MAAK,EAE9BA,EAAK,UAAS,EAETA,EAAK,mBACR6R,EAAK,KAAKN,EAAe,EAE3BM,EAAK,KAAKjB,EAAG,MAAM,EAEnBA,EAAG,SAAWiB,EAAK,KAAK,GAAG,EAE3B,SAASC,EAAMC,EAAK,CAAE,OAAOA,EAAI,QAAQ,SAAUnB,EAAG,QAAQ,CAAI,CAElEA,EAAG,YAAmB,OAAOkB,EAAMlB,EAAG,eAAe,EAAG,GAAG,EAC3DA,EAAG,WAAmB,OAAOkB,EAAMlB,EAAG,cAAc,EAAG,GAAG,EAC1DA,EAAG,iBAAmB,OAAOkB,EAAMlB,EAAG,oBAAoB,EAAG,GAAG,EAChEA,EAAG,gBAAmB,OAAOkB,EAAMlB,EAAG,mBAAmB,EAAG,GAAG,EAM/D,IAAIoB,EAAU,CAAA,EAEdhS,EAAK,aAAe,GAEpB,SAASiS,EAAY1V,EAAM2V,EAAK,CAC9B,MAAM,IAAI,MAAM,+BAAiC3V,EAAO,MAAQ2V,CAAG,CACpE,CAED,OAAO,KAAKlS,EAAK,WAAW,EAAE,QAAQ,SAAUzD,EAAM,CACpD,IAAI2V,EAAMlS,EAAK,YAAYzD,GAG3B,GAAI2V,IAAQ,KAEZ,KAAIC,EAAW,CAAE,SAAU,KAAM,KAAM,IAAI,EAI3C,GAFAnS,EAAK,aAAazD,GAAQ4V,EAEtBpB,GAASmB,CAAG,EAAG,CACblB,GAASkB,EAAI,QAAQ,EACvBC,EAAS,SAAWT,GAAgBQ,EAAI,QAAQ,EACvCjB,GAAWiB,EAAI,QAAQ,EAChCC,EAAS,SAAWD,EAAI,SAExBD,EAAY1V,EAAM2V,CAAG,EAGnBjB,GAAWiB,EAAI,SAAS,EAC1BC,EAAS,UAAYD,EAAI,UACfA,EAAI,UAGdD,EAAY1V,EAAM2V,CAAG,EAFrBC,EAAS,UAAYR,KAKvB,MACD,CAED,GAAI5W,GAASmX,CAAG,EAAG,CACjBF,EAAQ,KAAKzV,CAAI,EACjB,MACD,CAED0V,EAAY1V,EAAM2V,CAAG,EACzB,CAAG,EAMDF,EAAQ,QAAQ,SAAUI,EAAO,CAC1BpS,EAAK,aAAaA,EAAK,YAAYoS,MAMxCpS,EAAK,aAAaoS,GAAO,SACvBpS,EAAK,aAAaA,EAAK,YAAYoS,IAAQ,SAC7CpS,EAAK,aAAaoS,GAAO,UACvBpS,EAAK,aAAaA,EAAK,YAAYoS,IAAQ,UACjD,CAAG,EAKDpS,EAAK,aAAa,IAAM,CAAE,SAAU,KAAM,UAAW2R,GAAgB,GAKrE,IAAIU,EAAQ,OAAO,KAAKrS,EAAK,YAAY,EACpB,OAAO,SAAUzD,EAAM,CAEtB,OAAOA,EAAK,OAAS,GAAKyD,EAAK,aAAazD,EACpE,CAAuB,EACA,IAAIY,EAAQ,EACZ,KAAK,GAAG,EAE7B6C,EAAK,GAAG,YAAkB,OAAO,oBAA2B4Q,EAAG,SAAW,MAAQyB,EAAQ,IAAK,GAAG,EAClGrS,EAAK,GAAG,cAAkB,OAAO,oBAA2B4Q,EAAG,SAAW,MAAQyB,EAAQ,IAAK,IAAI,EACnGrS,EAAK,GAAG,gBAAkB,OAAO,IAAMA,EAAK,GAAG,cAAc,OAAQ,GAAG,EAExEA,EAAK,GAAG,QAAU,OAChB,IAAMA,EAAK,GAAG,YAAY,OAAS,MAAQA,EAAK,GAAG,gBAAgB,OAAS,MAC5E,GACJ,EAMEyR,GAAezR,CAAI,CACrB,CAOA,SAASsS,GAAMtS,EAAMuS,EAAO,CAC1B,IAAI1U,EAAQmC,EAAK,UACbsL,EAAQtL,EAAK,eACb2B,EAAQ3B,EAAK,eAAe,MAAMnC,EAAOyN,CAAG,EAOhD,KAAK,OAAYtL,EAAK,WAAW,YAAW,EAM5C,KAAK,MAAYnC,EAAQ0U,EAMzB,KAAK,UAAYjH,EAAMiH,EAMvB,KAAK,IAAY5Q,EAMjB,KAAK,KAAYA,EAMjB,KAAK,IAAYA,CACnB,CAEA,SAAS6Q,GAAYxS,EAAMuS,EAAO,CAChC,IAAIjW,EAAQ,IAAIgW,GAAMtS,EAAMuS,CAAK,EAEjC,OAAAvS,EAAK,aAAa1D,EAAM,QAAQ,UAAUA,EAAO0D,CAAI,EAE9C1D,CACT,CAyCA,SAASmW,EAAUC,EAAS7T,EAAS,CACnC,GAAI,EAAE,gBAAgB4T,GACpB,OAAO,IAAIA,EAAUC,EAAS7T,CAAO,EAGlCA,GACCsS,GAAauB,CAAO,IACtB7T,EAAU6T,EACVA,EAAU,CAAA,GAId,KAAK,SAAqBtX,GAAO,CAAE,EAAE8V,GAAgBrS,CAAO,EAG5D,KAAK,UAAqB,GAC1B,KAAK,eAAqB,GAC1B,KAAK,WAAqB,GAC1B,KAAK,eAAqB,GAE1B,KAAK,YAAqBzD,GAAO,CAAE,EAAEiW,GAAgBqB,CAAO,EAC5D,KAAK,aAAqB,GAE1B,KAAK,SAAqBlB,GAC1B,KAAK,kBAAqB,GAE1B,KAAK,GAAK,GAEVI,GAAQ,IAAI,CACd,CAUAa,EAAU,UAAU,IAAM,SAAaE,EAAQC,EAAY,CACzD,YAAK,YAAYD,GAAUC,EAC3BhB,GAAQ,IAAI,EACL,IACT,EASAa,EAAU,UAAU,IAAM,SAAa5T,EAAS,CAC9C,YAAK,SAAWzD,GAAO,KAAK,SAAUyD,CAAO,EACtC,IACT,EAQA4T,EAAU,UAAU,KAAO,SAAc9Q,EAAM,CAK7C,GAHA,KAAK,eAAiBA,EACtB,KAAK,UAAiB,GAElB,CAACA,EAAK,OAAU,MAAO,GAE3B,IAAIkR,EAAGC,EAAIC,EAAIlT,EAAK0S,EAAOS,EAAMpC,EAAIqC,EAASC,EAG9C,GAAI,KAAK,GAAG,YAAY,KAAKvR,CAAI,GAG/B,IAFAiP,EAAK,KAAK,GAAG,cACbA,EAAG,UAAY,GACPiC,EAAIjC,EAAG,KAAKjP,CAAI,KAAO,MAE7B,GADA9B,EAAM,KAAK,aAAa8B,EAAMkR,EAAE,GAAIjC,EAAG,SAAS,EAC5C/Q,EAAK,CACP,KAAK,WAAiBgT,EAAE,GACxB,KAAK,UAAiBA,EAAE,MAAQA,EAAE,GAAG,OACrC,KAAK,eAAiBA,EAAE,MAAQA,EAAE,GAAG,OAAShT,EAC9C,KACD,EAIL,OAAI,KAAK,SAAS,WAAa,KAAK,aAAa,WAE/CoT,EAAUtR,EAAK,OAAO,KAAK,GAAG,eAAe,EACzCsR,GAAW,IAET,KAAK,UAAY,GAAKA,EAAU,KAAK,aAClCH,EAAKnR,EAAK,MAAM,KAAK,SAAS,QAAU,KAAK,GAAG,WAAa,KAAK,GAAG,gBAAgB,KAAO,OAE/F4Q,EAAQO,EAAG,MAAQA,EAAG,GAAG,QAErB,KAAK,UAAY,GAAKP,EAAQ,KAAK,aACrC,KAAK,WAAiB,GACtB,KAAK,UAAiBA,EACtB,KAAK,eAAiBO,EAAG,MAAQA,EAAG,GAAG,UAO7C,KAAK,SAAS,YAAc,KAAK,aAAa,aAEhDI,EAASvR,EAAK,QAAQ,GAAG,EACrBuR,GAAU,IAGPH,EAAKpR,EAAK,MAAM,KAAK,GAAG,WAAW,KAAO,OAE7C4Q,EAAQQ,EAAG,MAAQA,EAAG,GAAG,OACzBC,EAAQD,EAAG,MAAQA,EAAG,GAAG,QAErB,KAAK,UAAY,GAAKR,EAAQ,KAAK,WAClCA,IAAU,KAAK,WAAaS,EAAO,KAAK,kBAC3C,KAAK,WAAiB,UACtB,KAAK,UAAiBT,EACtB,KAAK,eAAiBS,KAMvB,KAAK,WAAa,CAC3B,EAUAP,EAAU,UAAU,QAAU,SAAiB9Q,EAAM,CACnD,OAAO,KAAK,GAAG,QAAQ,KAAKA,CAAI,CAClC,EAYA8Q,EAAU,UAAU,aAAe,SAAsB9Q,EAAMgR,EAAQlX,EAAK,CAE1E,OAAK,KAAK,aAAakX,EAAO,YAAa,GAGpC,KAAK,aAAaA,EAAO,YAAW,GAAI,SAAShR,EAAMlG,EAAK,IAAI,EAF9D,CAGX,EAmBAgX,EAAU,UAAU,MAAQ,SAAe9Q,EAAM,CAC/C,IAAI4Q,EAAQ,EAAGtb,EAAS,GAGpB,KAAK,WAAa,GAAK,KAAK,iBAAmB0K,IACjD1K,EAAO,KAAKub,GAAY,KAAMD,CAAK,CAAC,EACpCA,EAAQ,KAAK,gBAOf,QAHIjB,EAAOiB,EAAQ5Q,EAAK,MAAM4Q,CAAK,EAAI5Q,EAGhC,KAAK,KAAK2P,CAAI,GACnBra,EAAO,KAAKub,GAAY,KAAMD,CAAK,CAAC,EAEpCjB,EAAOA,EAAK,MAAM,KAAK,cAAc,EACrCiB,GAAS,KAAK,eAGhB,OAAItb,EAAO,OACFA,EAGF,IACT,EASAwb,EAAU,UAAU,aAAe,SAAsB9Q,EAAM,CAK7D,GAHA,KAAK,eAAiBA,EACtB,KAAK,UAAiB,GAElB,CAACA,EAAK,OAAQ,OAAO,KAEzB,IAAIkR,EAAI,KAAK,GAAG,gBAAgB,KAAKlR,CAAI,EACzC,GAAI,CAACkR,EAAG,OAAO,KAEf,IAAIhT,EAAM,KAAK,aAAa8B,EAAMkR,EAAE,GAAIA,EAAE,GAAG,MAAM,EACnD,OAAKhT,GAEL,KAAK,WAAiBgT,EAAE,GACxB,KAAK,UAAiBA,EAAE,MAAQA,EAAE,GAAG,OACrC,KAAK,eAAiBA,EAAE,MAAQA,EAAE,GAAG,OAAShT,EAEvC2S,GAAY,KAAM,CAAC,GANT,IAOnB,EAkBAC,EAAU,UAAU,KAAO,SAAc9R,EAAMwS,EAAS,CAGtD,OAFAxS,EAAO,MAAM,QAAQA,CAAI,EAAIA,EAAO,CAAEA,GAEjCwS,GAOL,KAAK,SAAW,KAAK,SAAS,OAAOxS,CAAI,EACR,KAAM,EACN,OAAO,SAAUyS,EAAIxU,EAAKS,EAAK,CAC9B,OAAO+T,IAAO/T,EAAIT,EAAM,EAC5D,CAAmC,EACA,UAEjCgT,GAAQ,IAAI,EACL,OAdL,KAAK,SAAWjR,EAAK,QACrB,KAAK,kBAAoB,GACzBiR,GAAQ,IAAI,EACL,KAYX,EAOAa,EAAU,UAAU,UAAY,SAAmBnW,EAAO,CAKnDA,EAAM,SAAUA,EAAM,IAAM,UAAYA,EAAM,KAE/CA,EAAM,SAAW,WAAa,CAAC,YAAY,KAAKA,EAAM,GAAG,IAC3DA,EAAM,IAAM,UAAYA,EAAM,IAElC,EAQAmW,EAAU,UAAU,UAAY,UAAqB,CACrD,EAGA,IAAAY,GAAiBZ,ECppBjB,MAAMa,EAAS,WAGTC,EAAO,GACPC,GAAO,EACPC,EAAO,GACPC,GAAO,GACPC,GAAO,IACPC,GAAc,GACdC,GAAW,IACXC,GAAY,IAGZC,GAAgB,QAChBC,GAAgB,aAChBC,GAAkB,4BAGlBC,GAAS,CACd,SAAY,kDACZ,YAAa,iDACb,gBAAiB,eAClB,EAGMC,GAAgBZ,EAAOC,GACvBY,EAAQ,KAAK,MACbC,GAAqB,OAAO,aAUlC,SAASC,EAAM3U,EAAM,CACpB,MAAM,IAAI,WAAWuU,GAAOvU,EAAK,CAClC,CAUA,SAAS4U,GAAIC,EAAOnU,EAAI,CACvB,MAAMpJ,EAAS,CAAA,EACf,IAAIwd,EAASD,EAAM,OACnB,KAAOC,KACNxd,EAAOwd,GAAUpU,EAAGmU,EAAMC,EAAO,EAElC,OAAOxd,CACR,CAYA,SAASyd,GAAU9d,EAAQyJ,EAAI,CAC9B,MAAMsU,EAAQ/d,EAAO,MAAM,GAAG,EAC9B,IAAIK,EAAS,GACT0d,EAAM,OAAS,IAGlB1d,EAAS0d,EAAM,GAAK,IACpB/d,EAAS+d,EAAM,IAGhB/d,EAASA,EAAO,QAAQqd,GAAiB,GAAM,EAC/C,MAAMW,EAAShe,EAAO,MAAM,GAAG,EACzBie,EAAUN,GAAIK,EAAQvU,CAAE,EAAE,KAAK,GAAG,EACxC,OAAOpJ,EAAS4d,CACjB,CAeA,SAASC,GAAWle,EAAQ,CAC3B,MAAMme,EAAS,CAAA,EACf,IAAIC,EAAU,EACd,MAAMP,EAAS7d,EAAO,OACtB,KAAOoe,EAAUP,GAAQ,CACxB,MAAM9P,EAAQ/N,EAAO,WAAWoe,GAAS,EACzC,GAAIrQ,GAAS,OAAUA,GAAS,OAAUqQ,EAAUP,EAAQ,CAE3D,MAAMQ,EAAQre,EAAO,WAAWoe,GAAS,GACpCC,EAAQ,QAAW,MACvBF,EAAO,OAAOpQ,EAAQ,OAAU,KAAOsQ,EAAQ,MAAS,KAAO,GAI/DF,EAAO,KAAKpQ,CAAK,EACjBqQ,IAEJ,MACGD,EAAO,KAAKpQ,CAAK,CAElB,CACD,OAAOoQ,CACR,CAUA,MAAMG,GAAaV,GAAS,OAAO,cAAc,GAAGA,CAAK,EAWnDW,GAAe,SAASC,EAAW,CACxC,OAAIA,EAAY,GAAO,GACfA,EAAY,GAEhBA,EAAY,GAAO,GACfA,EAAY,GAEhBA,EAAY,GAAO,GACfA,EAAY,GAEb7B,CACR,EAaM8B,GAAe,SAASC,EAAOC,EAAM,CAG1C,OAAOD,EAAQ,GAAK,IAAMA,EAAQ,MAAQC,GAAQ,IAAM,EACzD,EAOMC,GAAQ,SAASC,EAAOC,EAAWC,EAAW,CACnD,IAAI5b,EAAI,EAGR,IAFA0b,EAAQE,EAAYvB,EAAMqB,EAAQ9B,EAAI,EAAI8B,GAAS,EACnDA,GAASrB,EAAMqB,EAAQC,CAAS,EACFD,EAAQtB,GAAgBV,GAAQ,EAAG1Z,GAAKwZ,EACrEkC,EAAQrB,EAAMqB,EAAQtB,EAAa,EAEpC,OAAOC,EAAMra,GAAKoa,GAAgB,GAAKsB,GAASA,EAAQ/B,GAAK,CAC9D,EASMrc,GAAS,SAASue,EAAO,CAE9B,MAAMb,EAAS,CAAA,EACTc,EAAcD,EAAM,OAC1B,IAAIpf,EAAI,EACJsf,EAAIjC,GACJkC,EAAOnC,GAMPoC,EAAQJ,EAAM,YAAY9B,EAAS,EACnCkC,EAAQ,IACXA,EAAQ,GAGT,QAASlc,EAAI,EAAGA,EAAIkc,EAAO,EAAElc,EAExB8b,EAAM,WAAW9b,CAAC,GAAK,KAC1Bwa,EAAM,WAAW,EAElBS,EAAO,KAAKa,EAAM,WAAW9b,CAAC,CAAC,EAMhC,QAASwG,EAAQ0V,EAAQ,EAAIA,EAAQ,EAAI,EAAG1V,EAAQuV,GAAwC,CAO3F,IAAII,EAAOzf,EACX,QAAS0f,EAAI,EAAGnc,EAAIwZ,GAA0BxZ,GAAKwZ,EAAM,CAEpDjT,GAASuV,GACZvB,EAAM,eAAe,EAGtB,MAAMgB,EAAQH,GAAaS,EAAM,WAAWtV,GAAO,CAAC,GAEhDgV,GAAS/B,GAAQ+B,EAAQlB,GAAOd,EAAS9c,GAAK0f,CAAC,IAClD5B,EAAM,UAAU,EAGjB9d,GAAK8e,EAAQY,EACb,MAAMhT,EAAInJ,GAAKgc,EAAOvC,GAAQzZ,GAAKgc,EAAOtC,EAAOA,EAAO1Z,EAAIgc,EAE5D,GAAIT,EAAQpS,EACX,MAGD,MAAMiT,EAAa5C,EAAOrQ,EACtBgT,EAAI9B,EAAMd,EAAS6C,CAAU,GAChC7B,EAAM,UAAU,EAGjB4B,GAAKC,CAEL,CAED,MAAMC,EAAMrB,EAAO,OAAS,EAC5BgB,EAAOP,GAAMhf,EAAIyf,EAAMG,EAAKH,GAAQ,CAAC,EAIjC7B,EAAM5d,EAAI4f,CAAG,EAAI9C,EAASwC,GAC7BxB,EAAM,UAAU,EAGjBwB,GAAK1B,EAAM5d,EAAI4f,CAAG,EAClB5f,GAAK4f,EAGLrB,EAAO,OAAOve,IAAK,EAAGsf,CAAC,CAEvB,CAED,OAAO,OAAO,cAAc,GAAGf,CAAM,CACtC,EASMpe,GAAS,SAASif,EAAO,CAC9B,MAAMb,EAAS,CAAA,EAGfa,EAAQd,GAAWc,CAAK,EAGxB,IAAIC,EAAcD,EAAM,OAGpBE,EAAIjC,GACJ4B,EAAQ,EACRM,EAAOnC,GAGX,UAAWyC,KAAgBT,EACtBS,EAAe,KAClBtB,EAAO,KAAKV,GAAmBgC,CAAY,CAAC,EAI9C,IAAIC,EAAcvB,EAAO,OACrBwB,EAAiBD,EAWrB,IALIA,GACHvB,EAAO,KAAKjB,EAAS,EAIfyC,EAAiBV,GAAa,CAIpC,IAAIhD,EAAIS,EACR,UAAW+C,KAAgBT,EACtBS,GAAgBP,GAAKO,EAAexD,IACvCA,EAAIwD,GAMN,MAAMG,EAAwBD,EAAiB,EAC3C1D,EAAIiD,EAAI1B,GAAOd,EAASmC,GAASe,CAAqB,GACzDlC,EAAM,UAAU,EAGjBmB,IAAU5C,EAAIiD,GAAKU,EACnBV,EAAIjD,EAEJ,UAAWwD,KAAgBT,EAI1B,GAHIS,EAAeP,GAAK,EAAEL,EAAQnC,GACjCgB,EAAM,UAAU,EAEb+B,GAAgBP,EAAG,CAEtB,IAAIW,EAAIhB,EACR,QAAS1b,EAAIwZ,GAA0BxZ,GAAKwZ,EAAM,CACjD,MAAMrQ,EAAInJ,GAAKgc,EAAOvC,GAAQzZ,GAAKgc,EAAOtC,EAAOA,EAAO1Z,EAAIgc,EAC5D,GAAIU,EAAIvT,EACP,MAED,MAAMwT,EAAUD,EAAIvT,EACdiT,EAAa5C,EAAOrQ,EAC1B6R,EAAO,KACNV,GAAmBgB,GAAanS,EAAIwT,EAAUP,EAAY,CAAC,CAAC,CAClE,EACKM,EAAIrC,EAAMsC,EAAUP,CAAU,CAC9B,CAEDpB,EAAO,KAAKV,GAAmBgB,GAAaoB,EAAG,CAAC,CAAC,CAAC,EAClDV,EAAOP,GAAMC,EAAOe,EAAuBD,GAAkBD,CAAW,EACxEb,EAAQ,EACR,EAAEc,CACF,CAGF,EAAEd,EACF,EAAEK,CAEF,CACD,OAAOf,EAAO,KAAK,EAAE,CACtB,EAaM4B,GAAY,SAASf,EAAO,CACjC,OAAOlB,GAAUkB,EAAO,SAAShf,EAAQ,CACxC,OAAOmd,GAAc,KAAKnd,CAAM,EAC7BS,GAAOT,EAAO,MAAM,CAAC,EAAE,YAAW,CAAE,EACpCA,CACL,CAAE,CACF,EAaMggB,GAAU,SAAShB,EAAO,CAC/B,OAAOlB,GAAUkB,EAAO,SAAShf,EAAQ,CACxC,OAAOod,GAAc,KAAKpd,CAAM,EAC7B,OAASD,GAAOC,CAAM,EACtBA,CACL,CAAE,CACF,EAKMigB,GAAW,CAMhB,QAAW,QAQX,KAAQ,CACP,OAAU/B,GACV,OAAUI,EACV,EACD,OAAU7d,GACV,OAAUV,GACV,QAAWigB,GACX,UAAaD,EACd,6LChbA,IAAAG,GAAiB,CACf,QAAS,CACP,KAAc,GACd,SAAc,GACd,OAAc,GACd,WAAc,YACd,QAAc,GAGd,YAAc,GAOd,OAAQ,OAQR,UAAW,KAEX,WAAc,GACf,EAED,WAAY,CAEV,KAAM,CAAE,EACR,MAAO,CAAE,EACT,OAAQ,CAAE,CACX,CACH,EClCAC,GAAiB,CACf,QAAS,CACP,KAAc,GACd,SAAc,GACd,OAAc,GACd,WAAc,YACd,QAAc,GAGd,YAAc,GAOd,OAAQ,OAQR,UAAW,KAEX,WAAc,EACf,EAED,WAAY,CAEV,KAAM,CACJ,MAAO,CACL,YACA,QACA,SACA,WACD,CACF,EAED,MAAO,CACL,MAAO,CACL,WACD,CACF,EAED,OAAQ,CACN,MAAO,CACL,MACD,EACD,OAAQ,CACN,gBACA,gBACD,CACF,CACF,CACH,ECzDAC,GAAiB,CACf,QAAS,CACP,KAAc,GACd,SAAc,GACd,OAAc,GACd,WAAc,YACd,QAAc,GAGd,YAAc,GAOd,OAAQ,OAQR,UAAW,KAEX,WAAc,EACf,EAED,WAAY,CAEV,KAAM,CACJ,MAAO,CACL,YACA,QACA,SACA,WACD,CACF,EAED,MAAO,CACL,MAAO,CACL,aACA,OACA,QACA,UACA,KACA,aACA,WACA,OACA,YACA,WACD,CACF,EAED,OAAQ,CACN,MAAO,CACL,WACA,YACA,WACA,SACA,SACA,cACA,QACA,OACA,UACA,MACD,EACD,OAAQ,CACN,gBACA,WACA,gBACD,CACF,CACF,CACH,EC3EIC,EAAe9gB,EACfsI,GAAejE,GACfgF,GAAe/E,GACfyc,GAAexc,GACfsR,GAAepR,GACf6V,GAAezL,GACfyN,GAAexN,GACf1K,EAAe2K,EACf2R,GAAezR,GAGf+R,GAAS,CACX,QAAStL,GACT,KAAMC,GACN,WAAYC,EACd,EAWIqL,GAA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"}